name: cloudflare/cloudflare
resources:
    cloudflare_access_application:
        subCategory: ""
        description: Provides a Cloudflare Access Application resource. Access Applications are used to restrict access to a whole application using an authorisation gateway managed by Cloudflare.
        name: cloudflare_access_application
        title: cloudflare_access_application Resource - Cloudflare
        examples:
            - name: staging_app
              manifest: |-
                {
                  "auto_redirect_to_identity": false,
                  "domain": "staging.example.com",
                  "name": "staging application",
                  "session_duration": "24h",
                  "type": "self_hosted",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: staging_app
              manifest: |-
                {
                  "cors_headers": [
                    {
                      "allow_credentials": true,
                      "allowed_methods": [
                        "GET",
                        "POST",
                        "OPTIONS"
                      ],
                      "allowed_origins": [
                        "https://example.com"
                      ],
                      "max_age": 10
                    }
                  ],
                  "domain": "staging.example.com",
                  "name": "staging application",
                  "session_duration": "24h",
                  "type": "self_hosted",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id.
            allow_all_headers: (Boolean) Value to determine whether all HTTP headers are exposed.
            allow_all_methods: (Boolean) Value to determine whether all methods are exposed.
            allow_all_origins: (Boolean) Value to determine whether all origins are permitted to make CORS requests.
            allow_credentials: (Boolean) Value to determine if credentials (cookies, authorization headers, or TLS client certificates) are included with requests.
            allowed_headers: (Set of String) List of HTTP headers to expose via CORS.
            allowed_idps: (Set of String) The identity providers selected for the application.
            allowed_methods: (Set of String) List of methods to expose via CORS.
            allowed_origins: (Set of String) List of origins permitted to make CORS requests.
            app_launcher_logo_url: (String) The logo URL of the app launcher.
            app_launcher_visible: (Boolean) Option to show/hide applications in App Launcher. Defaults to true.
            aud: (String) Application Audience (AUD) Tag of the application.
            auto_redirect_to_identity: (Boolean) Option to skip identity provider selection if only one is configured in allowed_idps. Defaults to false.
            bg_color: (String) The background color of the app launcher.
            button_color: (String) The button color of the landing page.
            button_text_color: (String) The button text color of the landing page.
            consumer_service_url: (String) The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.
            cors_headers: (Block List) CORS configuration for the Access Application. See below for reference structure. (see below for nested schema)
            custom_attribute: (Block List) Custom attribute mapped from IDPs. (see below for nested schema)
            custom_deny_message: (String) Option that returns a custom error message when a user is denied access to the application.
            custom_deny_url: (String) Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
            custom_non_identity_deny_url: (String) Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
            custom_pages: (Set of String) The custom pages selected for the application.
            domain: (String) The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
            enable_binding_cookie: (Boolean) Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to false.
            footer_links: (Block Set) The footer links of the app launcher. (see below for nested schema)
            friendly_name: (String) A friendly name for the attribute as provided to the SaaS app.
            header_bg_color: (String) The background color of the header bar in the app launcher.
            http_only_cookie_attribute: (Boolean) Option to add the HttpOnly cookie flag to access tokens.
            id: (String) The ID of this resource.
            idp_entity_id: (String) The unique identifier for the SaaS application.
            image_url: (String) The URL of the image to be displayed in the landing page.
            landing_page_design: '(Block List, Max: 1) The landing page design of the app launcher. (see below for nested schema)'
            logo_url: (String) Image URL for the logo shown in the app launcher dashboard.
            max_age: (Number) The maximum time a preflight request will be cached.
            message: (String) The message of the landing page.
            name: (String) Friendly name of the Access Application.
            name_format: (String) A globally unique name for an identity or service provider.
            name_id_format: (String) The format of the name identifier sent to the SaaS application. Defaults to email.
            public_key: (String) The public certificate that will be used to verify identities.
            required: (Boolean) True if the attribute must be always present.
            saas_app: '(Block List, Max: 1) SaaS configuration for the Access Application. (see below for nested schema)'
            same_site_cookie_attribute: '(String) Defines the same-site cookie setting for access tokens. Available values: none, lax, strict.'
            self_hosted_domains: (Set of String) List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as domain.
            service_auth_401_redirect: (Boolean) Option to return a 401 status code in service authentication rules on failed requests. Defaults to false.
            session_duration: (String) How often a user will be forced to re-authorise. Must be in the format 48h or 2h45m. Defaults to 24h.
            skip_interstitial: (Boolean) Option to skip the authorization interstitial when using the CLI. Defaults to false.
            source: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            sp_entity_id: (String) A globally unique name for an identity or service provider.
            sso_endpoint: (String) The endpoint where the SaaS application will send login requests.
            tags: (Set of String) The itags associated with the application.
            title: (String) The title of the landing page.
            type: '(String) The application type. Available values: app_launcher, bookmark, biso, dash_sso, saas, self_hosted, ssh, vnc, warp. Defaults to self_hosted.'
            url: (String) The URL of the footer link.
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - $ terraform import cloudflare_access_application.example <account_id>/<application_id>
    cloudflare_access_ca_certificate:
        subCategory: ""
        description: Cloudflare Access can replace traditional SSH key models with short-lived certificates issued to your users based on the token generated by their Access login.
        name: cloudflare_access_ca_certificate
        title: cloudflare_access_ca_certificate Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "application_id": "6cd6cea3-3ef2-4542-9aea-85a0bbcd5414"
                }
            - name: another_example
              manifest: |-
                {
                  "application_id": "fe2be0ff-7f13-4350-8c8e-a9b9795fe3c2",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id.
            application_id: (String) The Access Application ID to associate with the CA certificate.
            aud: (String) Application Audience (AUD) Tag of the CA certificate.
            id: (String) The ID of this resource.
            public_key: (String) Cryptographic public key of the generated CA certificate.
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - |-
              # Account level CA certificate import.
              $ terraform import cloudflare_access_ca_certificate.example account/<account_id>/<application_id>

              # Zone level CA certificate import.
              $ terraform import cloudflare_access_ca_certificate.example account/<zone_id>/<application_id>
    cloudflare_access_custom_page:
        subCategory: ""
        description: Provides a resource to customize the pages your end users will see when trying to reach applications behind Cloudflare Access.
        name: cloudflare_access_custom_page
        title: cloudflare_access_custom_page Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "custom_html": "\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eForbidden\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e",
                  "name": "example",
                  "type": "forbidden",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id. Modifying this attribute will force creation of a new resource.
            app_count: (Number) Number of apps to display on the custom page.
            custom_html: (String) Custom HTML to display on the custom page.
            id: (String) The ID of this resource.
            name: (String) Friendly name of the Access Custom Page configuration.
            type: '(String) Type of Access custom page to create. Available values: identity_denied, forbidden.'
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_access_group:
        subCategory: ""
        description: Provides a Cloudflare Access Group resource. Access Groups are used in conjunction with Access Policies to restrict access to a particular resource based on group membership.
        name: cloudflare_access_group
        title: cloudflare_access_group Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "include": [
                    {
                      "email": [
                        "test@example.com"
                      ]
                    }
                  ],
                  "name": "staging group"
                }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "include": [
                    {
                      "email": [
                        "test@example.com"
                      ]
                    }
                  ],
                  "name": "staging group",
                  "require": [
                    {
                      "ip": [
                        "${var.office_ip}"
                      ]
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "include": [
                    {
                      "azure": [
                        {
                          "id": [
                            "86773093-5feb-48dd-814b-7ccd3676ff50"
                          ],
                          "identity_provider_id": "ca298b82-93b5-41bf-bc2d-10493f09b761"
                        }
                      ]
                    }
                  ],
                  "name": "test_group"
                }
        argumentDocs:
            ac_id: (String) The ACID of the Authentication Context.
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id. Modifying this attribute will force creation of a new resource.
            any_valid_service_token: (Boolean)
            attribute_name: (String)
            attribute_value: (String)
            auth_context: (Block List) (see below for nested schema)
            auth_method: (String)
            azure: (Block List) (see below for nested schema)
            certificate: (Boolean)
            common_name: (String)
            device_posture: (List of String)
            email: (List of String)
            email_domain: (List of String)
            evaluate_url: (String)
            everyone: (Boolean)
            exclude: (Block List) (see below for nested schema)
            external_evaluation: '(Block List, Max: 1) (see below for nested schema)'
            geo: (List of String)
            github: (Block List) (see below for nested schema)
            group: (List of String)
            gsuite: (Block List) (see below for nested schema)
            id: (String) The ID of this resource.
            identity_provider_id: (String) The ID of the Azure Identity provider.
            include: '(Block List, Min: 1) (see below for nested schema)'
            ip: (List of String) An IPv4 or IPv6 CIDR block.
            ip_list: (List of String) The ID of an existing IP list to reference.
            keys_url: (String)
            login_method: (List of String)
            name: (String)
            okta: (Block List) (see below for nested schema)
            require: (Block List) (see below for nested schema)
            saml: (Block List) (see below for nested schema)
            service_token: (List of String)
            teams: (List of String)
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - $ terraform import cloudflare_access_group.example <account_id>/<group_id>
    cloudflare_access_identity_provider:
        subCategory: ""
        description: Provides a Cloudflare Access Identity Provider resource. Identity Providers are used as an authentication or authorisation source within Access.
        name: cloudflare_access_identity_provider
        title: cloudflare_access_identity_provider Resource - Cloudflare
        examples:
            - name: pin_login
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "PIN login",
                  "type": "onetimepin"
                }
            - name: github_oauth
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "config": [
                    {
                      "client_id": "example",
                      "client_secret": "secret_key"
                    }
                  ],
                  "name": "GitHub OAuth",
                  "type": "github"
                }
            - name: jumpcloud_saml
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "config": [
                    {
                      "attributes": [
                        "email",
                        "username"
                      ],
                      "idp_public_cert": "MIIDpDCCAoygAwIBAgIGAV2ka+55MA0GCSqGSIb3DQEBCwUAMIGSMQswCQ...GF/Q2/MHadws97cZg\nuTnQyuOqPuHbnN83d/2l1NSYKCbHt24o",
                      "issuer_url": "jumpcloud",
                      "sign_request": false,
                      "sso_target_url": "https://sso.myexample.jumpcloud.com/saml2/cloudflareaccess"
                    }
                  ],
                  "name": "JumpCloud SAML",
                  "type": "saml"
                }
            - name: okta
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "config": [
                    {
                      "api_token": "okta_api_token",
                      "client_id": "example",
                      "client_secret": "secret_key",
                      "okta_account": "https://example.com"
                    }
                  ],
                  "name": "Okta",
                  "type": "okta"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id. Modifying this attribute will force creation of a new resource.
            api_token: (String)
            apps_domain: (String)
            attributes: (List of String)
            auth_url: (String)
            authorization_server_id: (String)
            centrify_account: (String)
            centrify_app_id: (String)
            certs_url: (String)
            claims: (List of String)
            client_id: (String)
            client_secret: (String)
            conditional_access_enabled: (Boolean)
            config: (Block List) Provider configuration from the developer documentation. (see below for nested schema)
            directory_id: (String)
            email_attribute_name: (String)
            email_claim_name: (String)
            enabled: (Boolean)
            group_member_deprovision: (Boolean)
            id: (String) The ID of this resource.
            idp_public_cert: (String)
            issuer_url: (String)
            name: (String) Friendly name of the Access Identity Provider configuration.
            okta_account: (String)
            onelogin_account: (String)
            ping_env_id: (String)
            pkce_enabled: (Boolean)
            redirect_url: (String)
            scim_config: (Block List) Configuration for SCIM settings for a given IDP. (see below for nested schema)
            scopes: (List of String)
            seat_deprovision: (Boolean)
            secret: (String, Sensitive)
            sign_request: (Boolean)
            sso_target_url: (String)
            support_groups: (Boolean)
            token_url: (String)
            type: '(String) The provider type to use. Available values: azureAD, centrify, facebook, github, google, google-apps, linkedin, oidc, okta, onelogin, onetimepin, pingone, saml, yandex.'
            user_deprovision: (Boolean)
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_access_identity_provider.example <account_id>/<identity_provider_id>
    cloudflare_access_keys_configuration Resource - Cloudflare:
        subCategory: ""
        description: Access Keys Configuration defines the rotation policy for the keys that access will use to sign data.
        name: cloudflare_access_keys_configuration Resource - Cloudflare
        title: cloudflare_access_keys_configuration Resource - Cloudflare
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The ID of this resource.
            key_rotation_interval_days: (Number) Number of days to trigger a rotation of the keys.
        importStatements: []
    cloudflare_access_mutual_tls_certificate:
        subCategory: ""
        description: Provides a Cloudflare Access Mutual TLS Certificate resource. Mutual TLS authentication ensures that the traffic is secure and trusted in both directions between a client and server and can be used with Access to only allows requests from devices with a corresponding client certificate.
        name: cloudflare_access_mutual_tls_certificate
        title: cloudflare_access_mutual_tls_certificate Resource - Cloudflare
        examples:
            - name: my_cert
              manifest: |-
                {
                  "associated_hostnames": [
                    "staging.example.com"
                  ],
                  "certificate": "${var.ca_pem}",
                  "name": "My Root Cert",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                certificate: var.ca_pem
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id.
            associated_hostnames: (List of String) The hostnames that will be prompted for this certificate.
            certificate: (String) The Root CA for your certificates.
            fingerprint: (String)
            id: (String) The ID of this resource.
            name: (String) The name of the certificate.
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - |-
              # Account level import.
              $ terraform import cloudflare_access_mutual_tls_certificate.example account/<account_id>/<mutual_tls_certificate_id>

              # Zone level import.
              $ terraform import cloudflare_access_mutual_tls_certificate.example zone/<zone_id>/<mutual_tls_certificate_id>
    cloudflare_access_organization:
        subCategory: ""
        description: A Zero Trust organization defines the user login experience.
        name: cloudflare_access_organization
        title: cloudflare_access_organization Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "auth_domain": "example.cloudflareaccess.com",
                  "auto_redirect_to_identity": false,
                  "is_ui_read_only": false,
                  "login_design": [
                    {
                      "background_color": "#ffffff",
                      "footer_text": "My footer text",
                      "header_text": "My header text",
                      "logo_path": "https://example.com/logo.png",
                      "text_color": "#000000"
                    }
                  ],
                  "name": "example.cloudflareaccess.com",
                  "user_seat_expiration_inactive_time": "720h"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id.
            auth_domain: (String) The unique subdomain assigned to your Zero Trust organization.
            auto_redirect_to_identity: (Boolean) When set to true, users skip the identity provider selection step during login.
            background_color: (String) The background color on the login page.
            custom_pages: (Block List) Custom pages for your Zero Trust organization. (see below for nested schema)
            footer_text: (String) The text at the bottom of the login page.
            forbidden: (String) The id of the forbidden page.
            header_text: (String) The text at the top of the login page.
            id: (String) The ID of this resource.
            identity_denied: (String) The id of the identity denied page.
            is_ui_read_only: (Boolean) When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
            login_design: (Block List) (see below for nested schema)
            logo_path: (String) The URL of the logo on the login page.
            name: (String) The name of your Zero Trust organization.
            session_duration: (String) How often a user will be forced to re-authorise. Must be in the format 48h or 2h45m.
            text_color: (String) The text color on the login page.
            ui_read_only_toggle_reason: (String) A description of the reason why the UI read only field is being toggled.
            user_seat_expiration_inactive_time: (String) The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format 300ms or 2h45m.
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - $ terraform import cloudflare_access_organization.example <account_id>
    cloudflare_access_policy:
        subCategory: ""
        description: Provides a Cloudflare Access Policy resource. Access Policies are used in conjunction with Access Applications to restrict access to a particular resource.
        name: cloudflare_access_policy
        title: cloudflare_access_policy Resource - Cloudflare
        examples:
            - name: test_policy
              manifest: |-
                {
                  "application_id": "cb029e245cfdd66dc8d2e570d5dd3322",
                  "decision": "allow",
                  "include": [
                    {
                      "email": [
                        "test@example.com"
                      ]
                    }
                  ],
                  "name": "staging policy",
                  "precedence": "1",
                  "require": [
                    {
                      "email": [
                        "test@example.com"
                      ]
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: test_policy
              manifest: |-
                {
                  "application_id": "cb029e245cfdd66dc8d2e570d5dd3322",
                  "decision": "allow",
                  "include": [
                    {
                      "email": [
                        "test@example.com"
                      ]
                    }
                  ],
                  "name": "staging policy",
                  "precedence": "1",
                  "require": [
                    {
                      "ip": [
                        "${var.office_ip}"
                      ]
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            ac_id: (String) The ACID of the Authentication Context.
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id.
            any_valid_service_token: (Boolean)
            application_id: (String) The ID of the application the policy is associated with.
            approval_group: (Block List) (see below for nested schema)
            approval_required: (Boolean)
            approvals_needed: (Number) Number of approvals needed.
            attribute_name: (String)
            attribute_value: (String)
            auth_context: (Block List) (see below for nested schema)
            auth_method: (String)
            azure: (Block List) (see below for nested schema)
            certificate: (Boolean)
            common_name: (String)
            decision: '(String) Defines the action Access will take if the policy matches the user. Available values: allow, deny, non_identity, bypass.'
            device_posture: (List of String)
            email: (List of String)
            email_addresses: (List of String) List of emails to request approval from.
            email_domain: (List of String)
            email_list_uuid: (String)
            evaluate_url: (String)
            everyone: (Boolean)
            exclude: (Block List) A series of access conditions, see Access Groups. (see below for nested schema)
            external_evaluation: '(Block List, Max: 1) (see below for nested schema)'
            geo: (List of String)
            github: (Block List) (see below for nested schema)
            group: (List of String)
            gsuite: (Block List) (see below for nested schema)
            id: (String) The ID of this resource.
            identity_provider_id: (String) The ID of the Azure Identity provider.
            include: '(Block List, Min: 1) A series of access conditions, see Access Groups. (see below for nested schema)'
            ip: (List of String) An IPv4 or IPv6 CIDR block.
            ip_list: (List of String) The ID of an existing IP list to reference.
            isolation_required: (Boolean) Require this application to be served in an isolated browser for users matching this policy.
            keys_url: (String)
            login_method: (List of String)
            name: (String) Friendly name of the Access Policy.
            okta: (Block List) (see below for nested schema)
            precedence: (Number) The unique precedence for policies on a single application.
            purpose_justification_prompt: (String) The prompt to display to the user for a justification for accessing the resource. Required when using purpose_justification_required.
            purpose_justification_required: (Boolean) Whether to prompt the user for a justification for accessing the resource.
            require: (Block List) A series of access conditions, see Access Groups. (see below for nested schema)
            saml: (Block List) (see below for nested schema)
            service_token: (List of String)
            session_duration: (String) How often a user will be forced to re-authorise. Must be in the format 48h or 2h45m.
            teams: (List of String)
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - |-
              # Account level import.
              $ terraform import cloudflare_access_policy.example account/<account_id>/<application_id>/<policy_id>

              # Zone level import.
              $ terraform import cloudflare_access_policy.example zone/<zone_id>/<application_id>/<policy_id>
    cloudflare_access_rule:
        subCategory: ""
        description: Provides a Cloudflare IP Firewall Access Rule resource. Access control can be applied on basis of IP addresses, IP ranges, AS numbers or countries.
        name: cloudflare_access_rule
        title: cloudflare_access_rule Resource - Cloudflare
        examples:
            - name: tor_exit_nodes
              manifest: |-
                {
                  "configuration": [
                    {
                      "target": "country",
                      "value": "T1"
                    }
                  ],
                  "mode": "challenge",
                  "notes": "Requests coming from known Tor exit nodes",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: antarctica
              manifest: |-
                {
                  "configuration": [
                    {
                      "target": "country",
                      "value": "AQ"
                    }
                  ],
                  "mode": "whitelist",
                  "notes": "Requests coming from Antarctica",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: office_network
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "configuration": [
                    {
                      "target": "ip_range",
                      "value": "${element(var.my_office, count.index)}"
                    }
                  ],
                  "count": "${length(var.my_office)}",
                  "mode": "whitelist",
                  "notes": "Requests coming from office network"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Must provide only one of account_id, zone_id. Modifying this attribute will force creation of a new resource.
            configuration: '(Block List, Min: 1, Max: 1) Rule configuration to apply to a matched request. Modifying this attribute will force creation of a new resource. (see below for nested schema)'
            id: (String) The ID of this resource.
            mode: '(String) The action to apply to a matched request. Available values: block, challenge, whitelist, js_challenge, managed_challenge.'
            notes: (String) A personal note about the rule. Typically used as a reminder or explanation for the rule.
            target: '(String) The request property to target. Available values: ip, ip6, ip_range, asn, country. Modifying this attribute will force creation of a new resource.'
            value: (String) The value to target. Depends on target's type. Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Must provide only one of account_id, zone_id. Modifying this attribute will force creation of a new resource.
        importStatements:
            - |-
              # User level access rule import.
              $ terraform import cloudflare_access_rule.default user/<user_id>/<rule_id>

              # Zone level access rule import.
              $ terraform import cloudflare_access_rule.default zone/<zone_id>/<rule_id>

              # Account level access rule import.
              $ terraform import cloudflare_access_rule.default account/<account_id>/<rule_id>
    cloudflare_access_service_token:
        subCategory: ""
        description: Access Service Tokens are used for service-to-service communication when an application is behind Cloudflare Access.
        name: cloudflare_access_service_token
        title: cloudflare_access_service_token Resource - Cloudflare
        examples:
            - name: my_app
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "CI/CD app"
                }
            - name: my_app
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "lifecycle": [
                    {
                      "create_before_destroy": true
                    }
                  ],
                  "min_days_for_renewal": 30,
                  "name": "CI/CD app renewed"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id.
            client_id: (String) UUID client ID associated with the Service Token. Modifying this attribute will force creation of a new resource.
            client_secret: (String, Sensitive) A secret for interacting with Access protocols. Modifying this attribute will force creation of a new resource.
            duration: '(String) Length of time the service token is valid for. Available values: 8760h, 17520h, 43800h, 87600h, forever.'
            expires_at: (String) Date when the token expires.
            id: (String) The ID of this resource.
            min_days_for_renewal: (Number) Refresh the token if terraform is run within the specified amount of days before expiration. Defaults to 0.
            name: (String) Friendly name of the token's intent.
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - |-
              # If you are importing an Access Service Token you will not have the
              # client_secret available in the state for use. The client_secret is only
              # available once, at creation. In most cases, it is better to just create a new
              # resource should you need to reference it in other resources.
              $ terraform import cloudflare_access_service_token.example <account_id>/<service_token_id>
    cloudflare_access_tag Resource - Cloudflare:
        subCategory: ""
        description: Provides a resource to customize the pages your end users will see when trying to reach applications behind Cloudflare Access.
        name: cloudflare_access_tag Resource - Cloudflare
        title: cloudflare_access_tag Resource - Cloudflare
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id. Modifying this attribute will force creation of a new resource.
            app_count: (Number) Number of apps associated with the tag.
            id: (String) The ID of this resource.
            name: (String) Friendly name of the Access Tag.
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_account:
        subCategory: ""
        description: Provides a Cloudflare Account resource. Account is the basic resource for working with Cloudflare zones, teams and users.
        name: cloudflare_account
        title: cloudflare_account Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "enforce_twofactor": true,
                  "name": "some-enterprise-account",
                  "type": "enterprise"
                }
        argumentDocs:
            enforce_twofactor: (Boolean) Whether 2FA is enforced on the account. Defaults to false.
            id: (String) The ID of this resource.
            name: (String) The name of the account that is displayed in the Cloudflare dashboard.
            type: '(String) Account type. Available values: enterprise, standard. Defaults to standard. Modifying this attribute will force creation of a new resource.'
        importStatements:
            - $ terraform import cloudflare_account.example <account_id>
    cloudflare_account_member:
        subCategory: ""
        description: Provides a resource which manages Cloudflare account members.
        name: cloudflare_account_member
        title: cloudflare_account_member Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "email_address": "user@example.com",
                  "role_ids": [
                    "68b329da9893e34099c7d8ad5cb9c940",
                    "d784fa8b6d98d27699781bd9a7cf19f0"
                  ]
                }
        argumentDocs:
            account_id: (String) Account ID to create the account member in.
            email_address: (String) The email address of the user who you wish to manage. Following creation, this field becomes read only via the API and cannot be updated.
            id: (String) The ID of this resource.
            role_ids: (Set of String) List of account role IDs that you want to assign to a member.
            status: '(String) A member''s status in the account. Available values: accepted, pending.'
        importStatements:
            - $ terraform import cloudflare_account_member.example <account_id>/<member_id>
    cloudflare_address_map:
        subCategory: ""
        description: Provides the ability to manage IP addresses that can be used by DNS records when they are proxied through Cloudflare.
        name: cloudflare_address_map
        title: cloudflare_address_map Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "default_sni": "*.example.com",
                  "description": "My address map",
                  "enabled": true,
                  "ips": [
                    {
                      "ip": "192.0.2.1"
                    },
                    {
                      "ip": "203.0.113.1"
                    }
                  ],
                  "memberships": [
                    {
                      "identifier": "92f17202ed8bd63d69a66b86a49a8f6b",
                      "kind": "account"
                    },
                    {
                      "identifier": "023e105f4ecef8ad9ca31a8372d0c353",
                      "kind": "zone"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            can_delete: (Boolean) If set to false, then the Address Map cannot be deleted via API. This is true for Cloudflare-managed maps.
            can_modify_ips: (Boolean) If set to false, then the IPs on the Address Map cannot be modified via the API. This is true for Cloudflare-managed maps.
            default_sni: (String) If you have legacy TLS clients which do not send the TLS server name indicator, then you can specify one default SNI on the map.
            description: (String) Description of the address map.
            enabled: (Boolean) Whether the Address Map is enabled or not.
            id: (String) The ID of this resource.
            identifier: (String) Identifier of the account or zone.
            ip: (String) An IPv4 or IPv6 address.
            ips: (Block Set) The set of IPs on the Address Map. (see below for nested schema)
            kind: (String) The type of the membership.
            memberships: (Block Set) Zones and Accounts which will be assigned IPs on this Address Map. (see below for nested schema)
        importStatements:
            - $ terraform import cloudflare_address_map.example <account_id>/<address_map_id>
    cloudflare_api_shield:
        subCategory: ""
        description: Provides a resource to manage API Shield configurations.
        name: cloudflare_api_shield
        title: cloudflare_api_shield Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "auth_id_characteristics": [
                    {
                      "name": "my-example-header",
                      "type": "header"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            auth_id_characteristics: (Block List) Characteristics define properties across which auth-ids can be computed in a privacy-preserving manner. (see below for nested schema)
            id: (String) The ID of this resource.
            name: (String) The name of the characteristic.
            type: '(String) The type of characteristic. Available values: header, cookie.'
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_api_shield_operation:
        subCategory: ""
        description: Provides a resource to manage an operation in API Shield Endpoint Management.
        name: cloudflare_api_shield_operation
        title: cloudflare_api_shield_operation Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "endpoint": "/path",
                  "host": "api.example.com",
                  "method": "GET",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            endpoint: (String) The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}. This will then be Cloudflare-normalized. Modifying this attribute will force creation of a new resource.
            host: (String) RFC3986-compliant host. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            method: (String) The HTTP method used to access the endpoint. Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_api_shield_operation_schema_validation_settings:
        subCategory: ""
        description: Provides a resource to manage operation-level settings in API Shield Schema Validation 2.0.
        name: cloudflare_api_shield_operation_schema_validation_settings
        title: cloudflare_api_shield_operation_schema_validation_settings Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "mitigation_action": "block",
                  "operation_id": "${cloudflare_api_shield_operation.example.id}",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                operation_id: cloudflare_api_shield_operation.example.id
              dependencies:
                cloudflare_api_shield_operation.example: |-
                    {
                      "endpoint": "/path",
                      "host": "api.example.com",
                      "method": "GET",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
        argumentDocs:
            id: (String) The ID of this resource.
            mitigation_action: (String) The mitigation action to apply to this operation.
            operation_id: (String) Operation ID these settings should apply to. Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_api_shield_schema:
        subCategory: ""
        description: Provides a resource to manage a schema in API Shield Schema Validation 2.0.
        name: cloudflare_api_shield_schema
        title: cloudflare_api_shield_schema Resource - Cloudflare
        examples:
            - name: petstore_schema
              manifest: |-
                {
                  "kind": "openapi_v3",
                  "name": "myschema",
                  "source": "${file(\"./schemas/petstore.json\")}",
                  "validation_enabled": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            kind: (String) Kind of schema. Defaults to openapi_v3. Modifying this attribute will force creation of a new resource.
            name: (String) Name of the schema. Modifying this attribute will force creation of a new resource.
            source: (String) Schema file bytes. Modifying this attribute will force creation of a new resource.
            validation_enabled: (Boolean) Flag whether schema is enabled for validation.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_api_shield_schema_validation_settings:
        subCategory: ""
        description: Provides a resource to manage settings in API Shield Schema Validation 2.0.
        name: cloudflare_api_shield_schema_validation_settings
        title: cloudflare_api_shield_schema_validation_settings Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "validation_default_mitigation_action": "log",
                  "validation_override_mitigation_action": "none",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            validation_default_mitigation_action: (String) The default mitigation action used when there is no mitigation action defined on the operation.
            validation_override_mitigation_action: (String) When set, this overrides both zone level and operation level mitigation actions.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_api_token:
        subCategory: ""
        description: Provides a resource which manages Cloudflare API tokens. Read more about permission groups and their applicable scopes in the developer documentation https://developers.cloudflare.com/api/tokens/create/permissions.
        name: cloudflare_api_token
        title: cloudflare_api_token Resource - Cloudflare
        examples:
            - name: api_token_create
              manifest: |-
                {
                  "condition": [
                    {
                      "request_ip": [
                        {
                          "in": [
                            "192.0.2.1/32"
                          ],
                          "not_in": [
                            "198.51.100.1/32"
                          ]
                        }
                      ]
                    }
                  ],
                  "expires_on": "2020-01-01T00:00:00Z",
                  "name": "api_token_create",
                  "not_before": "2018-07-01T05:20:00Z",
                  "policy": [
                    {
                      "permission_groups": [
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"API Tokens Write\"]}"
                      ],
                      "resources": {
                        "com.cloudflare.api.user.${var.user_id}": "*"
                      }
                    }
                  ]
                }
            - name: logs_account_all
              manifest: |-
                {
                  "name": "logs_account_all",
                  "policy": [
                    {
                      "permission_groups": [
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"Access: Audit Logs Read\"]}"
                      ],
                      "resources": {
                        "com.cloudflare.api.account.*": "*"
                      }
                    }
                  ]
                }
            - name: logs_account
              manifest: |-
                {
                  "name": "logs_account",
                  "policy": [
                    {
                      "permission_groups": [
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"Access: Audit Logs Read\"]}"
                      ],
                      "resources": {
                        "com.cloudflare.api.account.${var.account_id}": "*"
                      }
                    }
                  ]
                }
            - name: dns_tls_edit
              manifest: |-
                {
                  "name": "dns_tls_edit",
                  "policy": [
                    {
                      "permission_groups": [
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"DNS Write\"]}",
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"SSL and Certificates Write\"]}"
                      ],
                      "resources": {
                        "com.cloudflare.api.account.zone.${var.zone_id}": "*"
                      }
                    }
                  ]
                }
            - name: dns_tls_edit_all_except_one
              manifest: |-
                {
                  "name": "dns_tls_edit_all_except_one",
                  "policy": [
                    {
                      "permission_groups": [
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"DNS Write\"]}"
                      ],
                      "resources": {
                        "com.cloudflare.api.account.zone.*": "*"
                      }
                    },
                    {
                      "effect": "deny",
                      "permission_groups": [
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"DNS Write\"]}"
                      ],
                      "resources": {
                        "com.cloudflare.api.account.zone.${var.zone_id}": "*"
                      }
                    }
                  ]
                }
            - name: dns_edit_all_account
              manifest: |-
                {
                  "name": "dns_edit_all_account",
                  "policy": [
                    {
                      "permission_groups": [
                        "${data.cloudflare_api_token_permission_groups.all.permissions[\"DNS Write\"]}"
                      ],
                      "resources": {
                        "com.cloudflare.api.account.${var.account_id}": "${jsonencode({\n        \"com.cloudflare.api.account.zone.*\" = \"*\"\n      })}"
                      }
                    }
                  ]
                }
        argumentDocs:
            condition: '(Block List, Max: 1) Conditions under which the token should be considered valid. (see below for nested schema)'
            effect: '(String) Effect of the policy. Available values: allow, deny. Defaults to allow.'
            expires_on: (String) The expiration time on or after which the token MUST NOT be accepted for processing.
            id: (String) The ID of this resource.
            in: (Set of String) List of IP addresses or CIDR notation where the token may be used from. If not specified, the token will be valid for all IP addresses.
            issued_on: (String) Timestamp of when the token was issued.
            modified_on: (String) Timestamp of when the token was last modified.
            name: (String) Name of the API Token.
            not_before: (String) The time before which the token MUST NOT be accepted for processing.
            not_in: (Set of String) List of IP addresses or CIDR notation where the token should not be used from.
            permission_groups: (Set of String) List of permissions groups IDs. See documentation for more information.
            policy: '(Block Set, Min: 1) Permissions policy. Multiple policy blocks can be defined. (see below for nested schema)'
            request_ip: '(Block List, Max: 1) Request IP related conditions. (see below for nested schema)'
            resources: (Map of String) Describes what operations against which resources are allowed or denied.
            status: (String)
            value: (String, Sensitive) The value of the API Token.
        importStatements: []
    cloudflare_argo:
        subCategory: ""
        description: Cloudflare Argo controls the routing to your origin and tiered caching options to speed up your website browsing experience.
        name: cloudflare_argo
        title: cloudflare_argo Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "smart_routing": "on",
                  "tiered_caching": "on",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            smart_routing: '(String) Whether smart routing is enabled. Available values: on, off.'
            tiered_caching: '(String, Deprecated) Whether tiered caching is enabled. Available values: on, off.'
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - $ terraform import cloudflare_argo.example <zone_id>
    cloudflare_authenticated_origin_pulls:
        subCategory: ""
        description: Provides a Cloudflare Authenticated Origin Pulls resource. A cloudflare_authenticated_origin_pulls resource is required to use Per-Zone or Per-Hostname Authenticated Origin Pulls.
        name: cloudflare_authenticated_origin_pulls
        title: cloudflare_authenticated_origin_pulls Resource - Cloudflare
        examples:
            - name: my_aop
              manifest: |-
                {
                  "enabled": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              dependencies:
                cloudflare_authenticated_origin_pulls_certificate.my_per_hostname_aop_cert: |-
                    {
                      "certificate": "-----INSERT CERTIFICATE-----",
                      "private_key": "-----INSERT PRIVATE KEY-----",
                      "type": "per-hostname",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
                cloudflare_authenticated_origin_pulls_certificate.my_per_zone_aop_cert: |-
                    {
                      "certificate": "-----INSERT CERTIFICATE-----",
                      "private_key": "-----INSERT PRIVATE KEY-----",
                      "type": "per-zone",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
            - name: my_per_zone_aop
              manifest: |-
                {
                  "authenticated_origin_pulls_certificate": "${cloudflare_authenticated_origin_pulls_certificate.my_per_zone_aop_cert.id}",
                  "enabled": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                authenticated_origin_pulls_certificate: cloudflare_authenticated_origin_pulls_certificate.my_per_zone_aop_cert.id
              dependencies:
                cloudflare_authenticated_origin_pulls_certificate.my_per_hostname_aop_cert: |-
                    {
                      "certificate": "-----INSERT CERTIFICATE-----",
                      "private_key": "-----INSERT PRIVATE KEY-----",
                      "type": "per-hostname",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
                cloudflare_authenticated_origin_pulls_certificate.my_per_zone_aop_cert: |-
                    {
                      "certificate": "-----INSERT CERTIFICATE-----",
                      "private_key": "-----INSERT PRIVATE KEY-----",
                      "type": "per-zone",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
            - name: my_per_hostname_aop
              manifest: |-
                {
                  "authenticated_origin_pulls_certificate": "${cloudflare_authenticated_origin_pulls_certificate.my_per_hostname_aop_cert.id}",
                  "enabled": true,
                  "hostname": "aop.example.com",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                authenticated_origin_pulls_certificate: cloudflare_authenticated_origin_pulls_certificate.my_per_hostname_aop_cert.id
              dependencies:
                cloudflare_authenticated_origin_pulls_certificate.my_per_hostname_aop_cert: |-
                    {
                      "certificate": "-----INSERT CERTIFICATE-----",
                      "private_key": "-----INSERT PRIVATE KEY-----",
                      "type": "per-hostname",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
                cloudflare_authenticated_origin_pulls_certificate.my_per_zone_aop_cert: |-
                    {
                      "certificate": "-----INSERT CERTIFICATE-----",
                      "private_key": "-----INSERT PRIVATE KEY-----",
                      "type": "per-zone",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
        argumentDocs:
            authenticated_origin_pulls_certificate: (String) The ID of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.
            enabled: (Boolean) Whether to enable Authenticated Origin Pulls on the given zone or hostname.
            hostname: (String) Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.
            id: (String) The ID of this resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - |-
              # global
              $ terraform import cloudflare_authenticated_origin_pulls.example <zone_id>

              # per zone
              $ terraform import cloudflare_authenticated_origin_pulls.example <zone_id>/<certificate_id>

              # per hostname
              $ terraform import cloudflare_authenticated_origin_pulls.example <zone_id>/<certificate_id>/<hostname>
    cloudflare_authenticated_origin_pulls_certificate:
        subCategory: ""
        description: Provides a Cloudflare Authenticated Origin Pulls certificate resource. An uploaded client certificate is required to use Per-Zone or Per-Hostname Authenticated Origin Pulls.
        name: cloudflare_authenticated_origin_pulls_certificate
        title: cloudflare_authenticated_origin_pulls_certificate Resource - Cloudflare
        examples:
            - name: my_per_zone_aop_cert
              manifest: |-
                {
                  "certificate": "-----INSERT CERTIFICATE-----",
                  "private_key": "-----INSERT PRIVATE KEY-----",
                  "type": "per-zone",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: my_per_hostname_aop_cert
              manifest: |-
                {
                  "certificate": "-----INSERT CERTIFICATE-----",
                  "private_key": "-----INSERT PRIVATE KEY-----",
                  "type": "per-hostname",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            certificate: (String) The public client certificate. Modifying this attribute will force creation of a new resource.
            create: (String)
            expires_on: (String) Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            issuer: (String) Modifying this attribute will force creation of a new resource.
            private_key: (String, Sensitive) The private key of the client certificate. Modifying this attribute will force creation of a new resource.
            serial_number: (String) Modifying this attribute will force creation of a new resource.
            signature: (String) Modifying this attribute will force creation of a new resource.
            status: (String) Modifying this attribute will force creation of a new resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: '(String) The form of Authenticated Origin Pulls to upload the certificate to. Available values: per-zone, per-hostname. Modifying this attribute will force creation of a new resource.'
            uploaded_on: (String) Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_authenticated_origin_pulls_certificate.example <zone_id>/<certificate_type>/<certificate_id>
    cloudflare_bot_management:
        subCategory: ""
        description: 'Provides a resource to configure Bot Management. Specifically, this resource can be used to manage: Bot Fight ModeSuper Bot Fight ModeBot Management for Enterprise'
        name: cloudflare_bot_management
        title: cloudflare_bot_management Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "enable_js": true,
                  "optimize_wordpress": true,
                  "sbfm_definitely_automated": "block",
                  "sbfm_likely_automated": "managed_challenge",
                  "sbfm_static_resource_protection": false,
                  "sbfm_verified_bots": "allow",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            auto_update_model: (Boolean) Automatically update to the newest bot detection models created by Cloudflare as they are released. Learn more..
            enable_js: (Boolean) Use lightweight, invisible JavaScript detections to improve Bot Management. Learn more about JavaScript Detections.
            fight_mode: (Boolean) Whether to enable Bot Fight Mode.
            id: (String) The ID of this resource.
            optimize_wordpress: (Boolean) Whether to optimize Super Bot Fight Mode protections for Wordpress.
            sbfm_definitely_automated: (String) Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
            sbfm_likely_automated: (String) Super Bot Fight Mode (SBFM) action to take on likely automated requests.
            sbfm_static_resource_protection: '(Boolean) Super Bot Fight Mode (SBFM) to enable static resource protection. Enable if static resources on your application need bot protection. Note: Static resource protection can also result in legitimate traffic being blocked.'
            sbfm_verified_bots: (String) Super Bot Fight Mode (SBFM) action to take on verified bots requests.
            suppress_session_score: (Boolean) Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
            using_latest_model: (Boolean) A read-only field that indicates whether the zone currently is running the latest ML model.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_bot_management.example <zone_id>
    cloudflare_byo_ip_prefix:
        subCategory: ""
        description: Provides the ability to manage Bring-Your-Own-IP prefixes (BYOIP) which are used with or without Magic Transit.
        name: cloudflare_byo_ip_prefix
        title: cloudflare_byo_ip_prefix Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "advertisement": "on",
                  "description": "Example IP Prefix",
                  "prefix_id": "d41d8cd98f00b204e9800998ecf8427e"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            advertisement: '(String) Whether or not the prefix shall be announced. A prefix can be activated or deactivated once every 15 minutes (attempting more regular updates will trigger rate limiting). Available values: on, off.'
            description: (String) Description of the BYO IP prefix.
            id: (String) The ID of this resource.
            prefix_id: (String) The assigned Bring-Your-Own-IP prefix ID. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_byo_ip_prefix.example <account_id>/<prefix_id>
    cloudflare_certificate_pack:
        subCategory: ""
        description: Provides a Cloudflare Certificate Pack resource that is used to provision managed TLS certificates.
        name: cloudflare_certificate_pack
        title: cloudflare_certificate_pack Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_authority": "digicert",
                  "cloudflare_branding": false,
                  "hosts": [
                    "example.com",
                    "sub.example.com"
                  ],
                  "type": "advanced",
                  "validation_method": "txt",
                  "validity_days": 30,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: example
              manifest: |-
                {
                  "certificate_authority": "lets_encrypt",
                  "cloudflare_branding": false,
                  "hosts": [
                    "example.com",
                    "*.example.com"
                  ],
                  "type": "advanced",
                  "validation_method": "http",
                  "validity_days": 90,
                  "wait_for_active_status": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            certificate_authority: '(String) Which certificate authority to issue the certificate pack. Available values: digicert, lets_encrypt, google. Modifying this attribute will force creation of a new resource.'
            cloudflare_branding: (Boolean) Whether or not to include Cloudflare branding. This will add sni.cloudflaressl.com as the Common Name if set to true. Modifying this attribute will force creation of a new resource.
            cname_name: (String)
            cname_target: (String)
            emails: (List of String)
            hosts: '(Set of String) List of hostnames to provision the certificate pack for. The zone name must be included as a host. Note: If using Let''s Encrypt, you cannot use individual subdomains and only a wildcard for subdomain is available. Modifying this attribute will force creation of a new resource.'
            http_body: (String)
            http_url: (String)
            id: (String) The ID of this resource.
            message: (String)
            txt_name: (String)
            txt_value: (String)
            type: '(String) Certificate pack configuration type. Available values: advanced. Modifying this attribute will force creation of a new resource.'
            validation_errors: (Block List) (see below for nested schema)
            validation_method: '(String) Which validation method to use in order to prove domain ownership. Available values: txt, http, email. Modifying this attribute will force creation of a new resource.'
            validation_records: (Block List) (see below for nested schema)
            validity_days: '(Number) How long the certificate is valid for. Note: If using Let''s Encrypt, this value can only be 90 days. Available values: 14, 30, 90, 365. Modifying this attribute will force creation of a new resource.'
            wait_for_active_status: (Boolean) Whether or not to wait for a certificate pack to reach status active during creation. Defaults to false. Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_certificate_pack.example <zone_id>/<certificate_pack_id>
    cloudflare_custom_hostname:
        subCategory: ""
        description: Provides a Cloudflare custom hostname (also known as SSL for SaaS) resource.
        name: cloudflare_custom_hostname
        title: cloudflare_custom_hostname Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "hostname": "hostname.example.com",
                  "ssl": [
                    {
                      "method": "txt"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            bundle_method: '(String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Available values: ubiquitous, optimal, force.'
            certificate_authority: (String)
            ciphers: (Set of String) List of SSL/TLS ciphers to associate with this certificate.
            cname_name: (String)
            cname_target: (String)
            custom_certificate: (String) If a custom uploaded certificate is used.
            custom_key: (String) The key for a custom uploaded certificate.
            custom_metadata: (Map of String) Custom metadata associated with custom hostname. Only supports primitive string values, all other values are accessible via the API directly.
            custom_origin_server: (String) The custom origin server used for certificates.
            custom_origin_sni: (String) The custom origin SNI used for certificates.
            early_hints: '(String) Whether early hints should be supported. Available values: on, off.'
            emails: (List of String)
            hostname: (String) Hostname you intend to request a certificate for. Modifying this attribute will force creation of a new resource.
            http_body: (String)
            http_url: (String)
            http2: '(String) Whether HTTP2 should be supported. Available values: on, off.'
            id: (String) The ID of this resource.
            message: (String)
            method: '(String) Domain control validation (DCV) method used for this hostname. Available values: http, txt, email.'
            min_tls_version: '(String) Lowest version of TLS this certificate should support. Available values: 1.0, 1.1, 1.2, 1.3.'
            ownership_verification: (Map of String)
            ownership_verification_http: (Map of String)
            settings: (Block List) SSL/TLS settings for the certificate. (see below for nested schema)
            ssl: (Block List) SSL properties used when creating the custom hostname. (see below for nested schema)
            status: (String) Status of the certificate.
            tls13: '(String) Whether TLSv1.3 should be supported. Available values: on, off.'
            txt_name: (String)
            txt_value: (String)
            type: '(String) Level of validation to be used for this hostname. Available values: dv. Defaults to dv.'
            validation_errors: (List of Object) (see below for nested schema)
            validation_records: (List of Object) (see below for nested schema)
            wait_for_ssl_pending_validation: (Boolean) Whether to wait for a custom hostname SSL sub-object to reach status pending_validation during creation. Defaults to false.
            wildcard: (Boolean) Indicates whether the certificate covers a wildcard.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_custom_hostname.example 1d5fdc9e88c8a8c4518b068cd94331fe/0d89c70d-ad9f-4843-b99f-6cc0252067e9
    cloudflare_custom_hostname_fallback_origin:
        subCategory: ""
        description: Provides a Cloudflare custom hostname fallback origin resource.
        name: cloudflare_custom_hostname_fallback_origin
        title: cloudflare_custom_hostname_fallback_origin Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "origin": "fallback.example.com",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            origin: (String) Hostname you intend to fallback requests to. Origin must be a proxied A/AAAA/CNAME DNS record within Clouldflare.
            status: (String) Status of the fallback origin's activation.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_custom_hostname_fallback_origin.example <zone_id>/<fallback_hostname>
    cloudflare_custom_pages:
        subCategory: ""
        description: Provides a resource which manages Cloudflare custom error pages.
        name: cloudflare_custom_pages
        title: cloudflare_custom_pages Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "state": "customized",
                  "type": "basic_challenge",
                  "url": "https://example.com/challenge.html",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Conflicts with zone_id.
            id: (String) The ID of this resource.
            state: '(String) Managed state of the custom page. Available values: default, customized.'
            type: '(String) The type of custom page you wish to update. Available values: basic_challenge, waf_challenge, waf_block, ratelimit_block, country_challenge, ip_block, under_attack, 500_errors, 1000_errors, always_online, managed_challenge.'
            url: (String) URL of where the custom page source is located.
            zone_id: (String) The zone identifier to target for the resource. Conflicts with account_id.
        importStatements:
            - $ terraform import cloudflare_custom_pages.example <resource_level>/<resource_id>/<custom_page_type>
    cloudflare_custom_ssl:
        subCategory: ""
        description: Provides a Cloudflare custom SSL resource.
        name: cloudflare_custom_ssl
        title: cloudflare_custom_ssl Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "custom_ssl_options": [
                    {
                      "bundle_method": "ubiquitous",
                      "certificate": "-----INSERT CERTIFICATE-----",
                      "geo_restrictions": "us",
                      "private_key": "-----INSERT PRIVATE KEY-----",
                      "type": "legacy_custom"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            bundle_method: '(String) Method of building intermediate certificate chain. A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Available values: ubiquitous, optimal, force.'
            certificate: (String) Certificate certificate and the intermediate(s).
            custom_ssl_options: '(Block List, Max: 1) The certificate associated parameters. Modifying this attribute will force creation of a new resource. (see below for nested schema)'
            custom_ssl_priority: (Block List) (see below for nested schema)
            expires_on: (String)
            geo_restrictions: '(String) Specifies the region where your private key can be held locally. Available values: us, eu, highest_security.'
            hosts: (List of String)
            id: (String) The ID of this resource.
            issuer: (String)
            modified_on: (String)
            priority: (Number)
            private_key: (String, Sensitive) Certificate's private key.
            signature: (String)
            status: (String)
            type: '(String) Whether to enable support for legacy clients which do not include SNI in the TLS handshake. Available values: legacy_custom, sni_custom.'
            uploaded_on: (String)
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - $ terraform import cloudflare_custom_ssl.example <zone_id>/<certificate_id>
    cloudflare_d1_database:
        subCategory: ""
        description: The D1 Database https://developers.cloudflare.com/d1/ resource allows you to manage Cloudflare D1 databases.
        name: cloudflare_d1_database
        title: cloudflare_d1_database Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "terraform-database"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The identifier of this resource.
            name: (String) The name of the D1 Database.
            version: (String) The backend version of the database.
        importStatements:
            - $ terraform import cloudflare_d1_database.example <account id>/<database id>
    cloudflare_device_dex_test:
        subCategory: ""
        description: Provides a Cloudflare Device Dex Test resource. Device Dex Tests allow for building location-aware device settings policies.
        name: cloudflare_device_dex_test
        title: cloudflare_device_dex_test Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "data": [
                    {
                      "host": "https://example.com/home",
                      "kind": "http",
                      "method": "GET"
                    }
                  ],
                  "description": "Send a HTTP GET request to the home endpoint every half hour.",
                  "enabled": true,
                  "interval": "0h30m0s",
                  "name": "GET homepage"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            created: (String) Timestamp of when the Dex Test was created.
            data: '(Block List, Min: 1, Max: 1) The configuration object which contains the details for the WARP client to conduct the test. (see below for nested schema)'
            description: (String) Additional details about the test.
            enabled: (Boolean) Determines whether or not the test is active.
            host: (String) The host URL for http test kind. For traceroute, it must be a valid hostname or IP address.
            id: (String) The ID of this resource.
            interval: (String) How often the test will run.
            kind: '(String) The type of Device Dex Test. Available values: http, traceroute.'
            method: '(String) The http request method. Available values: GET.'
            name: (String) The name of the Device Dex Test. Must be unique.
            updated: (String) Timestamp of when the Dex Test was last updated.
        importStatements:
            - $ terraform import cloudflare_device_dex_test.example <account_id>/<device_dex_test_id>
    cloudflare_device_managed_networks:
        subCategory: ""
        description: Provides a Cloudflare Device Managed Network resource. Device managed networks allow for building location-aware device settings policies.
        name: cloudflare_device_managed_networks
        title: cloudflare_device_managed_networks Resource - Cloudflare
        examples:
            - name: managed_networks
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "config": [
                    {
                      "sha256": "b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c",
                      "tls_sockaddr": "foobar:1234"
                    }
                  ],
                  "name": "managed-network-1",
                  "type": "tls"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            config: '(Block List, Min: 1, Max: 1) The configuration containing information for the WARP client to detect the managed network. (see below for nested schema)'
            id: (String) The ID of this resource.
            name: (String) The name of the Device Managed Network. Must be unique.
            sha256: (String) The SHA-256 hash of the TLS certificate presented by the host found at tls_sockaddr. If absent, regular certificate verification (trusted roots, valid timestamp, etc) will be used to validate the certificate.
            tls_sockaddr: (String) A network address of the form "host:port" that the WARP client will use to detect the presence of a TLS host.
            type: '(String) The type of Device Managed Network. Available values: tls.'
        importStatements:
            - $ terraform import cloudflare_device_managed_networks.example <account_id>/<device_managed_networks_id>
    cloudflare_device_policy_certificates:
        subCategory: ""
        description: Provides a Cloudflare device policy certificates resource. Device policy certificate resources enable client device certificate generation.
        name: cloudflare_device_policy_certificates
        title: cloudflare_device_policy_certificates Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            enabled: (Boolean) true if certificate generation is enabled.
            id: (String) The ID of this resource.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - $ terraform import cloudflare_device_policy_certificates.example <zone_id>
    cloudflare_device_posture_integration:
        subCategory: ""
        description: Provides a Cloudflare Device Posture Integration resource. Device posture integrations configure third-party data providers for device posture rules.
        name: cloudflare_device_posture_integration
        title: cloudflare_device_posture_integration Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "config": [
                    {
                      "api_url": "https://example.com/api",
                      "auth_url": "https://example.com/connect/token",
                      "client_id": "client-id",
                      "client_secret": "client-secret"
                    }
                  ],
                  "interval": "24h",
                  "name": "Device posture integration",
                  "type": "workspace_one"
                }
        argumentDocs:
            access_client_id: (String, Sensitive) The Access client ID to be used as the Cf-Access-Client-ID header when making a request to the api_url.
            access_client_secret: (String, Sensitive) The Access client secret to be used as the Cf-Access-Client-Secret header when making a request to the api_url.
            account_id: (String) The account identifier to target for the resource.
            api_url: (String) The third-party API's URL.
            auth_url: (String) The third-party authorization API URL.
            client_id: (String) The client identifier for authenticating API calls.
            client_key: (String, Sensitive) The client key for authenticating API calls.
            client_secret: (String, Sensitive) The client secret for authenticating API calls.
            config: (Block List) The device posture integration's connection authorization parameters. (see below for nested schema)
            customer_id: (String) The customer identifier for authenticating API calls.
            id: (String) The ID of this resource.
            identifier: (String)
            interval: (String) Indicates the frequency with which to poll the third-party API. Must be in the format 1h or 30m.
            name: (String) Name of the device posture integration.
            type: '(String) The device posture integration type. Available values: workspace_one, uptycs, crowdstrike_s2s, intune, kolide, sentinelone_s2s, tanium_s2s.'
        importStatements:
            - $ terraform import cloudflare_device_posture_integration.example <account_id>/<device_posture_integration_id>
    cloudflare_device_posture_rule:
        subCategory: ""
        description: Provides a Cloudflare Device Posture Rule resource. Device posture rules configure security policies for device posture checks.
        name: cloudflare_device_posture_rule
        title: cloudflare_device_posture_rule Resource - Cloudflare
        examples:
            - name: eaxmple
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "Device posture rule for corporate devices.",
                  "expiration": "24h",
                  "input": [
                    {
                      "id": "${cloudflare_teams_list.corporate_devices.id}",
                      "operator": "\u003c",
                      "os_distro_name": "ubuntu",
                      "os_distro_revision": "1.0.0",
                      "version": "1.0.0"
                    }
                  ],
                  "match": [
                    {
                      "platform": "linux"
                    }
                  ],
                  "name": "Corporate devices posture rule",
                  "schedule": "24h",
                  "type": "os_version"
                }
              references:
                input.id: cloudflare_teams_list.corporate_devices.id
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            active_threats: (Number) The number of active threats from SentinelOne.
            certificate_id: (String) The UUID of a Cloudflare managed certificate.
            check_disks: (Set of String) Specific volume(s) to check for encryption.
            cn: (String) The common name for a certificate.
            compliance_status: '(String) The workspace one device compliance status. Available values: compliant, noncompliant.'
            connection_id: (String) The workspace one connection id.
            count_operator: '(String) The count comparison operator for kolide. Available values: >, >=, <, <=, ==.'
            description: (String)
            domain: (String) The domain that the client must join.
            eid_last_seen: (String) The datetime a device last seen in RFC 3339 format from Tanium.
            enabled: (Boolean) True if the firewall must be enabled.
            exists: (Boolean) Checks if the file should exist.
            expiration: (String) Expire posture results after the specified amount of time. Must be in the format 1h or 30m. Valid units are h and m.
            id: (String) The ID of this resource.
            infected: (Boolean) True if SentinelOne device is infected.
            input: (Block List) Required for all rule types except warp, gateway, and tanium. (see below for nested schema)
            is_active: (Boolean) True if SentinelOne device is active.
            issue_count: (String) The number of issues for kolide.
            match: (Block List) The conditions that the client must match to run the rule. (see below for nested schema)
            name: (String) Name of the device posture rule.
            network_status: '(String) The network status from SentinelOne. Available values: connected, disconnected, disconnecting, connecting.'
            operator: '(String) The version comparison operator. Available values: >, >=, <, <=, ==.'
            os: (String) OS signal score from Crowdstrike. Value must be between 1 and 100.
            os_distro_name: (String) The operating system excluding version information.
            os_distro_revision: (String) The operating system version excluding OS name information or release name.
            overall: (String) Overall ZTA score from Crowdstrike. Value must be between 1 and 100.
            path: (String) The path to the file.
            platform: '(String) The platform of the device. Available values: windows, mac, linux, android, ios, chromeos.'
            require_all: (Boolean) True if all drives must be encrypted.
            risk_level: '(String) The risk level from Tanium. Available values: low, medium, high, critical.'
            running: (Boolean) Checks if the application should be running.
            schedule: (String) Tells the client when to run the device posture check. Must be in the format 1h or 30m. Valid units are h and m.
            sensor_config: (String) Sensor signal score from Crowdstrike. Value must be between 1 and 100.
            sha256: (String) The sha256 hash of the file.
            thumbprint: (String) The thumbprint of the file certificate.
            total_score: (Number) The total score from Tanium.
            type: '(String) The device posture rule type. Available values: serial_number, file, application, gateway, warp, domain_joined, os_version, disk_encryption, firewall, client_certificate, workspace_one, unique_client_id, crowdstrike_s2s, sentinelone, kolide, tanium_s2s, intune, sentinelone_s2s.'
            version: (String) The operating system semantic version.
            version_operator: '(String) The version comparison operator for crowdstrike. Available values: >, >=, <, <=, ==.'
        importStatements:
            - $ terraform import cloudflare_device_posture_rule.example <account_id>/<device_posture_rule_id>
    cloudflare_device_settings_policy:
        subCategory: ""
        description: Provides a Cloudflare Device Settings Policy resource. Device policies configure settings applied to WARP devices.
        name: cloudflare_device_settings_policy
        title: cloudflare_device_settings_policy Resource - Cloudflare
        examples:
            - name: developer_warp_policy
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "allow_mode_switch": true,
                  "allow_updates": true,
                  "allowed_to_leave": true,
                  "auto_connect": 0,
                  "captive_portal": 5,
                  "default": false,
                  "description": "Developers WARP settings policy description",
                  "disable_auto_fallback": true,
                  "enabled": true,
                  "exclude_office_ips": false,
                  "match": "any(identity.groups.name[*] in {\"Developers\"})",
                  "name": "Developers WARP settings policy",
                  "precedence": 10,
                  "service_mode_v2_mode": "warp",
                  "service_mode_v2_port": 3000,
                  "support_url": "https://cloudflare.com",
                  "switch_locked": true
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            allow_mode_switch: (Boolean) Whether to allow mode switch for this policy.
            allow_updates: (Boolean) Whether to allow updates under this policy.
            allowed_to_leave: (Boolean) Whether to allow devices to leave the organization. Defaults to true.
            auto_connect: (Number) The amount of time in minutes to reconnect after having been disabled.
            captive_portal: (Number) The captive portal value for this policy. Defaults to 180.
            default: (Boolean) Whether the policy refers to the default account policy.
            description: (String) Description of Policy.
            disable_auto_fallback: (Boolean) Whether to disable auto fallback for this policy.
            enabled: (Boolean) Whether the policy is enabled (cannot be set for default policies). Defaults to true.
            exclude_office_ips: (Boolean) Whether to add Microsoft IPs to split tunnel exclusions.
            id: (String) The ID of this resource.
            match: (String) Wirefilter expression to match a device against when evaluating whether this policy should take effect for that device.
            name: (String) Name of the policy.
            precedence: (Number) The precedence of the policy. Lower values indicate higher precedence.
            service_mode_v2_mode: '(String) The service mode. Available values: 1dot1, warp, proxy, posture_only, warp_tunnel_only. Defaults to warp.'
            service_mode_v2_port: (Number) The port to use for the proxy service mode. Required when using service_mode_v2_mode.
            support_url: (String) The support URL that will be opened when sending feedback.
            switch_locked: (Boolean) Enablement of the ZT client switch lock.
        importStatements:
            - |-
              # For default device settings policies you must use "default" as the policy ID.
              $ terraform import cloudflare_device_settings_policy.example <account_id>/<device_policy_id>
    cloudflare_dlp_profile:
        subCategory: ""
        description: Provides a Cloudflare DLP Profile resource. Data Loss Prevention profiles are a set of entries that can be matched in HTTP bodies or files. They are referenced in Zero Trust Gateway rules.
        name: cloudflare_dlp_profile
        title: cloudflare_dlp_profile Resource - Cloudflare
        examples:
            - name: creds
              manifest: |-
                {
                  "account_id": "0da42c8d2132a9ddaf714f9e7c920711",
                  "allowed_match_count": 3,
                  "entry": [
                    {
                      "enabled": true,
                      "id": "d8fcfc9c-773c-405e-8426-21ecbb67ba93",
                      "name": "Amazon AWS Access Key ID"
                    },
                    {
                      "enabled": false,
                      "id": "2c0e33e1-71da-40c8-aad3-32e674ad3d96",
                      "name": "Amazon AWS Secret Access Key"
                    },
                    {
                      "enabled": true,
                      "id": "4e92c006-3802-4dff-bbe1-8e1513b1c92a",
                      "name": "Microsoft Azure Client Secret"
                    },
                    {
                      "enabled": false,
                      "id": "5c713294-2375-4904-abcf-e4a15be4d592",
                      "name": "SSH Private Key"
                    },
                    {
                      "enabled": true,
                      "id": "6c6579e4-d832-42d5-905c-8e53340930f2",
                      "name": "Google GCP API Key"
                    }
                  ],
                  "name": "Credentials and Secrets",
                  "type": "predefined"
                }
            - name: example_custom
              manifest: |-
                {
                  "account_id": "0da42c8d2132a9ddaf714f9e7c920711",
                  "allowed_match_count": 0,
                  "description": "A profile with example entries",
                  "entry": [
                    {
                      "enabled": true,
                      "name": "Matches visa credit cards",
                      "pattern": [
                        {
                          "regex": "4d{3}([-\\. ])?d{4}([-\\. ])?d{4}([-\\. ])?d{4}",
                          "validation": "luhn"
                        }
                      ]
                    },
                    {
                      "enabled": true,
                      "name": "Matches diners club card",
                      "pattern": [
                        {
                          "regex": "(?:0[0-5]|[68][0-9])[0-9]{11}",
                          "validation": "luhn"
                        }
                      ]
                    }
                  ],
                  "name": "Example Custom Profile",
                  "type": "custom"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            allowed_match_count: (Number) Related DLP policies will trigger when the match count exceeds the number set.
            description: (String) Brief summary of the profile and its intended use.
            enabled: (Boolean) Whether the entry is active. Defaults to false.
            entry: '(Block Set, Min: 1) List of entries to apply to the profile. (see below for nested schema)'
            id: (String) The ID of this resource.
            name: (String) Name of the profile. Modifying this attribute will force creation of a new resource.
            pattern: '(Block List, Max: 1) (see below for nested schema)'
            regex: (String) The regex that defines the pattern.
            type: '(String) The type of the profile. Available values: custom, predefined. Modifying this attribute will force creation of a new resource.'
            validation: (String) The validation algorithm to apply with this pattern.
        importStatements:
            - $ terraform import cloudflare_dlp_profile.example <account_id>/<dlp_profile_id>
    cloudflare_email_routing_address:
        subCategory: ""
        description: Provides a resource for managing Email Routing Addresses.
        name: cloudflare_email_routing_address
        title: cloudflare_email_routing_address Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "email": "user@example.com"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            created: (String) The date and time the destination address has been created.
            email: (String) The contact email address of the user. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            modified: (String) The date and time the destination address was last modified.
            tag: (String) Destination address identifier.
            verified: (String) The date and time the destination address has been verified. Null means not verified yet.
        importStatements: []
    cloudflare_email_routing_catch_all:
        subCategory: ""
        description: Provides a resource for managing Email Routing Addresses catch all behaviour.
        name: cloudflare_email_routing_catch_all
        title: cloudflare_email_routing_catch_all Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "action": [
                    {
                      "type": "forward",
                      "value": [
                        "destinationaddress@example.net"
                      ]
                    }
                  ],
                  "enabled": true,
                  "matcher": [
                    {
                      "type": "all"
                    }
                  ],
                  "name": "example catch all",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            action: '(Block Set, Min: 1) List actions patterns. (see below for nested schema)'
            enabled: (Boolean) Routing rule status.
            id: (String) The ID of this resource.
            matcher: '(Block Set, Min: 1) Matching patterns to forward to your actions. (see below for nested schema)'
            name: (String) Routing rule name.
            tag: (String) Routing rule identifier.
            type: '(String) Type of supported action. Available values: drop, forward, worker.'
            value: (List of String) A list with items in the following form.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements: []
    cloudflare_email_routing_rule:
        subCategory: ""
        description: Provides a resource for managing Email Routing rules.
        name: cloudflare_email_routing_rule
        title: cloudflare_email_routing_rule Resource - Cloudflare
        examples:
            - name: main
              manifest: |-
                {
                  "action": [
                    {
                      "type": "forward",
                      "value": [
                        "destinationaddress@example.net"
                      ]
                    }
                  ],
                  "enabled": true,
                  "matcher": [
                    {
                      "field": "to",
                      "type": "literal",
                      "value": "test@example.com"
                    }
                  ],
                  "name": "terraform rule",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            action: '(Block Set, Min: 1) List actions patterns. (see below for nested schema)'
            enabled: (Boolean) Routing rule status.
            field: (String) Field for type matcher.
            id: (String) The ID of this resource.
            matcher: '(Block Set, Min: 1) Matching patterns to forward to your actions. (see below for nested schema)'
            name: (String) Routing rule name.
            priority: (Number) Priority of the routing rule.
            tag: (String) Routing rule identifier.
            type: '(String) Type of supported action. Available values: forward, worker, drop.'
            value: (List of String) An array with items in the following form. Only required when type is forward or worker.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements: []
    cloudflare_email_routing_settings:
        subCategory: ""
        description: Provides a resource for managing Email Routing settings.
        name: cloudflare_email_routing_settings
        title: cloudflare_email_routing_settings Resource - Cloudflare
        examples:
            - name: my_zone
              manifest: |-
                {
                  "enabled": "true",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            created: (String) The date and time the settings have been created.
            enabled: (Boolean) State of the zone settings for Email Routing. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            modified: (String) The date and time the settings have been modified.
            name: (String) Domain of your zone.
            skip_wizard: (Boolean) Flag to check if the user skipped the configuration wizard.
            status: (String) Show the state of your account, and the type or configuration error.
            tag: (String) Email Routing settings identifier.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_fallback_domain:
        subCategory: ""
        description: Provides a Cloudflare Fallback Domain resource. Fallback domains are used to ignore DNS requests to a given list of domains. These DNS requests will be passed back to other DNS servers configured on existing network interfaces on the device.
        name: cloudflare_fallback_domain
        title: cloudflare_fallback_domain Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "domains": [
                    {
                      "description": "Example domain",
                      "dns_server": [
                        "192.0.2.0",
                        "192.0.2.1"
                      ],
                      "suffix": "example.com"
                    }
                  ]
                }
              dependencies:
                cloudflare_device_settings_policy.developer_warp_policy: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "match": "any(identity.groups.name[*] in {\"Developers\"})",
                      "name": "Developers",
                      "precedence": 10,
                      "switch_locked": true
                    }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "domains": [
                    {
                      "description": "Example domain",
                      "dns_server": [
                        "192.0.2.0",
                        "192.0.2.1"
                      ],
                      "suffix": "example.com"
                    }
                  ],
                  "dynamic": {
                    "domains": [
                      {
                        "content": [
                          {
                            "suffix": "${domains.value}"
                          }
                        ],
                        "for_each": "${toset([\"intranet\", \"internal\", \"private\", \"localdomain\", \"domain\", \"lan\", \"home\", \"host\", \"corp\", \"local\", \"localhost\", \"home.arpa\", \"invalid\", \"test\"])}"
                      }
                    ]
                  }
                }
              references:
                dynamic.content.suffix: domains.value
              dependencies:
                cloudflare_device_settings_policy.developer_warp_policy: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "match": "any(identity.groups.name[*] in {\"Developers\"})",
                      "name": "Developers",
                      "precedence": 10,
                      "switch_locked": true
                    }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "domains": [
                    {
                      "description": "Example domain",
                      "dns_server": [
                        "192.0.2.0",
                        "192.0.2.1"
                      ],
                      "suffix": "example.com"
                    }
                  ],
                  "policy_id": "${cloudflare_device_settings_policy.developer_warp_policy.id}"
                }
              references:
                policy_id: cloudflare_device_settings_policy.developer_warp_policy.id
              dependencies:
                cloudflare_device_settings_policy.developer_warp_policy: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "match": "any(identity.groups.name[*] in {\"Developers\"})",
                      "name": "Developers",
                      "precedence": 10,
                      "switch_locked": true
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            description: (String) A description of the fallback domain, displayed in the client UI.
            dns_server: (List of String) A list of IP addresses to handle domain resolution.
            domains: '(Block Set, Min: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            policy_id: (String) The settings policy for which to configure this fallback domain policy.
            suffix: (String) The domain suffix to match when resolving locally.
        importStatements:
            - |-
              # Fallback Domains for default device policies must use "default" as the policy ID.
              $ terraform import cloudflare_fallback_domain.example <account_id>/<policy_id>
    cloudflare_filter:
        subCategory: ""
        description: Filter expressions that can be referenced across multiple features, e.g. Firewall Rules. See what is a filter https://developers.cloudflare.com/firewall/api/cf-filters/what-is-a-filter/ for more details and available fields and operators.
        name: cloudflare_filter
        title: cloudflare_filter Resource - Cloudflare
        examples:
            - name: wordpress
              manifest: |-
                {
                  "description": "Wordpress break-in attempts that are outside of the office",
                  "expression": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.src ne 192.0.2.1",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            description: (String) A note that you can use to describe the purpose of the filter.
            expression: (String) The filter expression to be used.
            id: (String) The ID of this resource.
            paused: (Boolean) Whether this filter is currently paused.
            ref: (String) Short reference tag to quickly select related rules.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_filter.example <zone_id>/<filter_id>
    cloudflare_firewall_rule:
        subCategory: ""
        description: Define Firewall rules using filter expressions for more control over how traffic is matched to the rule. A filter expression permits selecting traffic by multiple criteria allowing greater freedom in rule creation. Filter expressions needs to be created first before using Firewall Rule.
        name: cloudflare_firewall_rule
        title: cloudflare_firewall_rule Resource - Cloudflare
        examples:
            - name: wordpress
              manifest: |-
                {
                  "action": "block",
                  "description": "Block wordpress break-in attempts",
                  "filter_id": "${cloudflare_filter.wordpress.id}",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                filter_id: cloudflare_filter.wordpress.id
              dependencies:
                cloudflare_filter.wordpress: |-
                    {
                      "description": "Wordpress break-in attempts that are outside of the office",
                      "expression": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.src ne 192.0.2.1",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
        argumentDocs:
            action: '(String) The action to apply to a matched request. Available values: block, challenge, allow, js_challenge, managed_challenge, log, bypass.'
            description: (String) A description of the rule to help identify it.
            filter_id: (String) The identifier of the Filter to use for determining if the Firewall Rule should be triggered.
            id: (String) The ID of this resource.
            paused: (Boolean) Whether this filter based firewall rule is currently paused.
            priority: (Number) The priority of the rule to allow control of processing order. A lower number indicates high priority. If not provided, any rules with a priority will be sequenced before those without.
            products: '(Set of String) List of products to bypass for a request when the bypass action is used. Available values: zoneLockdown, uaBlock, bic, hot, securityLevel, rateLimit, waf.'
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_firewall_rule.example <zone_id>/<firewall_rule_id>
    cloudflare_gre_tunnel:
        subCategory: ""
        description: Provides a resource, that manages GRE tunnels for Magic Transit.
        name: cloudflare_gre_tunnel
        title: cloudflare_gre_tunnel Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "cloudflare_gre_endpoint": "203.0.113.2",
                  "customer_gre_endpoint": "203.0.113.1",
                  "description": "Tunnel for ISP X",
                  "health_check_enabled": true,
                  "health_check_target": "203.0.113.1",
                  "health_check_type": "reply",
                  "interface_address": "192.0.2.0/31",
                  "mtu": 1476,
                  "name": "GRE_1",
                  "ttl": 64
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            cloudflare_gre_endpoint: (String) The IP address assigned to the Cloudflare side of the GRE tunnel.
            customer_gre_endpoint: (String) The IP address assigned to the customer side of the GRE tunnel.
            description: (String) Description of the GRE tunnel intent.
            health_check_enabled: (Boolean) Specifies if ICMP tunnel health checks are enabled.
            health_check_target: (String) The IP address of the customer endpoint that will receive tunnel health checks.
            health_check_type: '(String) Specifies the ICMP echo type for the health check. Available values: request, reply.'
            id: (String) The ID of this resource.
            interface_address: (String) 31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.
            mtu: (Number) Maximum Transmission Unit (MTU) in bytes for the GRE tunnel.
            name: (String) Name of the GRE tunnel.
            ttl: (Number) Time To Live (TTL) in number of hops of the GRE tunnel.
        importStatements:
            - $ terraform import cloudflare_gre_tunnel.example <account_id>/<tunnel_id>
    cloudflare_healthcheck:
        subCategory: ""
        description: Standalone Health Checks provide a way to monitor origin servers without needing a Cloudflare Load Balancer.
        name: cloudflare_healthcheck
        title: cloudflare_healthcheck Resource - Cloudflare
        examples:
            - name: http_health_check
              manifest: |-
                {
                  "address": "example.com",
                  "allow_insecure": false,
                  "check_regions": [
                    "WEU",
                    "EEU"
                  ],
                  "consecutive_fails": 3,
                  "consecutive_successes": 2,
                  "description": "example http health check",
                  "expected_body": "alive",
                  "expected_codes": [
                    "2xx",
                    "301"
                  ],
                  "follow_redirects": true,
                  "header": [
                    {
                      "header": "Host",
                      "values": [
                        "example.com"
                      ]
                    }
                  ],
                  "interval": 60,
                  "method": "GET",
                  "name": "http-health-check",
                  "path": "/health",
                  "port": 443,
                  "retries": 2,
                  "suspended": false,
                  "timeout": 10,
                  "type": "HTTPS",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: tcp_health_check
              manifest: |-
                {
                  "address": "example.com",
                  "check_regions": [
                    "WEU",
                    "EEU"
                  ],
                  "consecutive_fails": 3,
                  "consecutive_successes": 2,
                  "description": "example tcp health check",
                  "interval": 60,
                  "method": "connection_established",
                  "name": "tcp-health-check",
                  "port": 22,
                  "retries": 2,
                  "suspended": false,
                  "timeout": 10,
                  "type": "TCP",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
        argumentDocs:
            address: (String) The hostname or IP address of the origin server to run health checks on.
            allow_insecure: (Boolean) Do not validate the certificate when the health check uses HTTPS. Defaults to false.
            check_regions: '(List of String) A list of regions from which to run health checks. If not set, Cloudflare will pick a default region. Available values: WNAM, ENAM, WEU, EEU, NSAM, SSAM, OC, ME, NAF, SAF, IN, SEAS, NEAS, ALL_REGIONS.'
            consecutive_fails: (Number) The number of consecutive fails required from a health check before changing the health to unhealthy. Defaults to 1.
            consecutive_successes: (Number) The number of consecutive successes required from a health check before changing the health to healthy. Defaults to 1.
            create: (String)
            created_on: (String) Creation time.
            description: (String) A human-readable description of the health check.
            expected_body: (String) A case-insensitive sub-string to look for in the response body. If this string is not found the origin will be marked as unhealthy.
            expected_codes: (List of String) The expected HTTP response codes (e.g. '200') or code ranges (e.g. '2xx' for all codes starting with 2) of the health check.
            follow_redirects: (Boolean) Follow redirects if the origin returns a 3xx status code. Defaults to false.
            header: (Block Set) The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. (see below for nested schema)
            id: (String) The ID of this resource.
            interval: (Number) The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase the load on the origin as we check from multiple locations. Defaults to 60.
            method: '(String) The HTTP method to use for the health check. Available values: connection_established, GET, HEAD.'
            modified_on: (String) Last modified time.
            name: (String) A short name to identify the health check. Only alphanumeric characters, hyphens, and underscores are allowed.
            path: (String) The endpoint path to health check against. Defaults to /.
            port: (Number) Port number to connect to for the health check. Defaults to 80.
            retries: (Number) The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. Defaults to 2.
            suspended: (Boolean) If suspended, no health checks are sent to the origin. Defaults to false.
            timeout: (Number) The timeout (in seconds) before marking the health check as failed. Defaults to 5.
            timeouts: (Block, Optional) (see below for nested schema)
            type: '(String) The protocol to use for the health check. Available values: TCP, HTTP, HTTPS.'
            values: (Set of String) A list of string values for the header.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - |-
              # Use the Zone ID and Healthcheck ID to import.
              $ terraform import cloudflare_healthcheck.example <zone_id>/<healthcheck_id>
    cloudflare_hostname_tls_setting:
        subCategory: ""
        description: Provides a Cloudflare per-hostname TLS setting resource. Used to set TLS settings for hostnames under the specified zone.
        name: cloudflare_hostname_tls_setting
        title: cloudflare_hostname_tls_setting Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "hostname": "sub.example.com",
                  "setting": "min_tls_version",
                  "value": "1.2",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            created_at: (String)
            hostname: (String) Hostname that belongs to this zone name. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            setting: (String) TLS setting name. Modifying this attribute will force creation of a new resource.
            updated_at: (String)
            value: (String) TLS setting value.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_hostname_tls_setting.example <zone_id>/<hostname>/<setting_name>
    cloudflare_hostname_tls_setting_ciphers:
        subCategory: ""
        description: Provides a Cloudflare per-hostname TLS setting resource, specifically for ciphers suites. Used to set ciphers suites for hostnames under the specified zone.
        name: cloudflare_hostname_tls_setting_ciphers
        title: cloudflare_hostname_tls_setting_ciphers Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "hostname": "sub.example.com",
                  "value": [
                    "ECDHE-RSA-AES128-GCM-SHA256"
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            created_at: (String)
            hostname: (String) Hostname that belongs to this zone name. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            ports: (List of Number) Ports to use within the IP rule.
            updated_at: (String)
            value: (List of String) Ciphers suites value.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_hostname_tls_setting_ciphers.example <zone_id>/<hostname>
    cloudflare_ipsec_tunnel:
        subCategory: ""
        description: Provides a resource, that manages IPsec tunnels for Magic Transit.
        name: cloudflare_ipsec_tunnel
        title: cloudflare_ipsec_tunnel Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "allow_null_cipher": false,
                  "cloudflare_endpoint": "203.0.113.1",
                  "customer_endpoint": "203.0.113.1",
                  "description": "Tunnel for ISP X",
                  "health_check_enabled": true,
                  "health_check_target": "203.0.113.1",
                  "health_check_type": "reply",
                  "interface_address": "192.0.2.0/31",
                  "name": "IPsec_1",
                  "psk": "asdf12341234"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            allow_null_cipher: (Boolean) Specifies if this tunnel may use a null cipher (ENCR_NULL) in Phase 2. Defaults to false.
            cloudflare_endpoint: (String) IP address assigned to the Cloudflare side of the IPsec tunnel.
            customer_endpoint: (String) IP address assigned to the customer side of the IPsec tunnel.
            description: (String) An optional description of the IPsec tunnel.
            fqdn_id: (String) remote_id in the form of a fqdn. This value is generated by cloudflare.
            health_check_enabled: '(Boolean) Specifies if ICMP tunnel health checks are enabled. Default: true.'
            health_check_target: '(String) The IP address of the customer endpoint that will receive tunnel health checks. Default: <customer_gre_endpoint>.'
            health_check_type: '(String) Specifies the ICMP echo type for the health check (request or reply). Available values: request, reply Default: reply.'
            hex_id: (String) remote_id as a hex string. This value is generated by cloudflare.
            id: (String) The ID of this resource.
            interface_address: (String) 31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.
            name: (String) Name of the IPsec tunnel.
            psk: (String, Sensitive) Pre shared key to be used with the IPsec tunnel. If left unset, it will be autogenerated.
            remote_id: (String) ID to be used while setting up the IPsec tunnel. This value is generated by cloudflare.
            user_id: (String) remote_id in the form of an email address. This value is generated by cloudflare.
        importStatements:
            - $ terraform import cloudflare_ipsec_tunnel.example <account_id>/<tunnel_id>
    cloudflare_keyless_certificate:
        subCategory: ""
        description: Provides a resource, that manages Keyless certificates.
        name: cloudflare_keyless_certificate
        title: cloudflare_keyless_certificate Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "bundle_method": "ubiquitous",
                  "certificate": "-----INSERT CERTIFICATE-----",
                  "enabled": true,
                  "host": "example.com",
                  "name": "example.com Keyless SSL",
                  "port": 24008,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            bundle_method: '(String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Available values: ubiquitous, optimal, force. Defaults to ubiquitous. Modifying this attribute will force creation of a new resource.'
            certificate: (String) The zone's SSL certificate or SSL certificate and intermediate(s). Modifying this attribute will force creation of a new resource.
            enabled: (Boolean) Whether the KeyLess SSL is on.
            host: (String) The KeyLess SSL host.
            id: (String) The ID of this resource.
            name: (String) The KeyLess SSL name.
            port: (Number) The KeyLess SSL port used to communicate between Cloudflare and the client's KeyLess SSL server. Defaults to 24008.
            status: (String) Status of the KeyLess SSL.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - $ terraform import cloudflare_keyless_certificate.example <zone_id>/<keyless_certificate_id>
    cloudflare_list:
        subCategory: ""
        description: Provides Lists (IPs, Redirects, Hostname, ASNs) to be used in Edge Rules Engine across all zones within the same account.
        name: cloudflare_list
        title: cloudflare_list Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "example IPs for a list",
                  "item": [
                    {
                      "comment": "one",
                      "value": [
                        {
                          "ip": "192.0.2.0"
                        }
                      ]
                    },
                    {
                      "comment": "two",
                      "value": [
                        {
                          "ip": "192.0.2.1"
                        }
                      ]
                    }
                  ],
                  "kind": "ip",
                  "name": "example_list"
                }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "example redirects for a list",
                  "item": [
                    {
                      "comment": "one",
                      "value": [
                        {
                          "redirect": [
                            {
                              "source_url": "example.com/blog",
                              "target_url": "https://blog.example.com"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "comment": "two",
                      "value": [
                        {
                          "redirect": [
                            {
                              "include_subdomains": "enabled",
                              "preserve_path_suffix": "disabled",
                              "preserve_query_string": "enabled",
                              "source_url": "example.com/foo",
                              "status_code": 301,
                              "subpath_matching": "enabled",
                              "target_url": "https://foo.example.com"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "kind": "redirect",
                  "name": "example_list"
                }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "example ASNs for a list",
                  "item": [
                    {
                      "comment": "one",
                      "value": [
                        {
                          "asn": 677
                        }
                      ]
                    },
                    {
                      "comment": "two",
                      "value": [
                        {
                          "asn": 989
                        }
                      ]
                    }
                  ],
                  "kind": "asn",
                  "name": "example_list"
                }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "example hostnames for a list",
                  "item": [
                    {
                      "comment": "one",
                      "value": [
                        {
                          "hostname": [
                            {
                              "url_hostname": "example.com"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "comment": "two",
                      "value": [
                        {
                          "hostname": [
                            {
                              "url_hostname": "*.example.com"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "kind": "hostname",
                  "name": "example_list"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            asn: (Number)
            comment: (String) An optional comment for the item.
            description: (String) An optional description of the list.
            hostname: (Block List) (see below for nested schema)
            id: (String) The ID of this resource.
            include_subdomains: '(String) Whether the redirect also matches subdomains of the source url. Available values: disabled, enabled.'
            ip: (String)
            item: (Block Set) (see below for nested schema)
            kind: '(String) The type of items the list will contain. Available values: ip, redirect, hostname, asn. Modifying this attribute will force creation of a new resource.'
            name: (String) The name of the list. Modifying this attribute will force creation of a new resource.
            preserve_path_suffix: '(String) Whether to preserve the path suffix when doing subpath matching. Available values: disabled, enabled.'
            preserve_query_string: '(String) Whether the redirect target url should keep the query string of the request''s url. Available values: disabled, enabled.'
            redirect: (Block List) (see below for nested schema)
            source_url: (String) The source url of the redirect.
            status_code: (Number) The status code to be used when redirecting a request.
            subpath_matching: '(String) Whether the redirect also matches subpaths of the source url. Available values: disabled, enabled.'
            target_url: (String) The target url of the redirect.
            url_hostname: (String) The FQDN to match on. Wildcard sub-domain matching is allowed. Eg. *.abc.com.
            value: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
        importStatements:
            - $ terraform import cloudflare_list.example <account_id>/<list_id>
    cloudflare_list_item:
        subCategory: ""
        description: Provides individual list items (IPs, Redirects) to be used in Edge Rules Engine across all zones within the same account.
        name: cloudflare_list_item
        title: cloudflare_list_item Resource - Cloudflare
        examples:
            - name: example_ip_item
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "comment": "List Item Comment",
                  "ip": "192.0.2.0",
                  "list_id": "${cloudflare_list.example_ip_list.id}"
                }
              references:
                list_id: cloudflare_list.example_ip_list.id
              dependencies:
                cloudflare_list.example_asn_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example ASNs for a list",
                      "kind": "asn",
                      "name": "example_asn_list"
                    }
                cloudflare_list.example_hostname_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Hostnames for a list",
                      "kind": "hostname",
                      "name": "example_hostname_list"
                    }
                cloudflare_list.example_ip_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example IPs for a list",
                      "kind": "ip",
                      "name": "example_list"
                    }
                cloudflare_list.example_redirect_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Redirects for a list",
                      "kind": "redirect",
                      "name": "example_list"
                    }
            - name: example_redirect_item
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "list_id": "${cloudflare_list.example_ip_list.id}",
                  "redirect": [
                    {
                      "source_url": "https://source.tld",
                      "status_code": 302,
                      "subpath_matching": "enabled",
                      "target_url": "https://target.tld"
                    }
                  ]
                }
              references:
                list_id: cloudflare_list.example_ip_list.id
              dependencies:
                cloudflare_list.example_asn_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example ASNs for a list",
                      "kind": "asn",
                      "name": "example_asn_list"
                    }
                cloudflare_list.example_hostname_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Hostnames for a list",
                      "kind": "hostname",
                      "name": "example_hostname_list"
                    }
                cloudflare_list.example_ip_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example IPs for a list",
                      "kind": "ip",
                      "name": "example_list"
                    }
                cloudflare_list.example_redirect_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Redirects for a list",
                      "kind": "redirect",
                      "name": "example_list"
                    }
            - name: example_asn_item
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "asn": 6789,
                  "comment": "List Item Comment",
                  "list_id": "${cloudflare_list.example_asn_list.id}"
                }
              references:
                list_id: cloudflare_list.example_asn_list.id
              dependencies:
                cloudflare_list.example_asn_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example ASNs for a list",
                      "kind": "asn",
                      "name": "example_asn_list"
                    }
                cloudflare_list.example_hostname_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Hostnames for a list",
                      "kind": "hostname",
                      "name": "example_hostname_list"
                    }
                cloudflare_list.example_ip_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example IPs for a list",
                      "kind": "ip",
                      "name": "example_list"
                    }
                cloudflare_list.example_redirect_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Redirects for a list",
                      "kind": "redirect",
                      "name": "example_list"
                    }
            - name: example_hostname_item
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "comment": "List Item Comment",
                  "hostname": [
                    {
                      "url_hostname": "example.com"
                    }
                  ],
                  "list_id": "${cloudflare_list.example_hostname_list.id}"
                }
              references:
                list_id: cloudflare_list.example_hostname_list.id
              dependencies:
                cloudflare_list.example_asn_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example ASNs for a list",
                      "kind": "asn",
                      "name": "example_asn_list"
                    }
                cloudflare_list.example_hostname_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Hostnames for a list",
                      "kind": "hostname",
                      "name": "example_hostname_list"
                    }
                cloudflare_list.example_ip_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example IPs for a list",
                      "kind": "ip",
                      "name": "example_list"
                    }
                cloudflare_list.example_redirect_list: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "description": "example Redirects for a list",
                      "kind": "redirect",
                      "name": "example_list"
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            asn: (Number) Autonomous system number to include in the list. Must provide only one of ip, redirect, hostname, asn. Modifying this attribute will force creation of a new resource.
            comment: (String) An optional comment for the item.
            hostname: '(Block List, Max: 1) Hostname to store in the list. Must provide only one of ip, redirect, hostname, asn. Modifying this attribute will force creation of a new resource. (see below for nested schema)'
            id: (String) The ID of this resource.
            include_subdomains: '(String) Whether the redirect also matches subdomains of the source url. Available values: disabled, enabled.'
            ip: (String) IP address to include in the list. Must provide only one of ip, redirect, hostname, asn. Modifying this attribute will force creation of a new resource.
            list_id: (String) The list identifier to target for the resource.
            preserve_path_suffix: '(String) Whether to preserve the path suffix when doing subpath matching. Available values: disabled, enabled.'
            preserve_query_string: '(String) Whether the redirect target url should keep the query string of the request''s url. Available values: disabled, enabled.'
            redirect: '(Block List, Max: 1) Redirect configuration to store in the list. Must provide only one of ip, redirect, hostname, asn. Modifying this attribute will force creation of a new resource. (see below for nested schema)'
            source_url: (String) The source url of the redirect.
            status_code: (Number) The status code to be used when redirecting a request.
            subpath_matching: '(String) Whether the redirect also matches subpaths of the source url. Available values: disabled, enabled.'
            target_url: (String) The target url of the redirect.
            url_hostname: (String) The FQDN to match on.
        importStatements:
            - $ terraform import cloudflare_list_item.example <account_id>/<list_id>/<item_id>
    cloudflare_load_balancer:
        subCategory: ""
        description: Provides a Cloudflare Load Balancer resource. This sits in front of a number of defined pools of origins and provides various options for geographically-aware load balancing. Note that the load balancing feature must be enabled in your Cloudflare account before you can use this resource.
        name: cloudflare_load_balancer
        title: cloudflare_load_balancer Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "country_pools": [
                    {
                      "country": "US",
                      "pool_ids": [
                        "${cloudflare_load_balancer_pool.example.id}"
                      ]
                    }
                  ],
                  "default_pool_ids": [
                    "${cloudflare_load_balancer_pool.example.id}"
                  ],
                  "description": "example load balancer using geo-balancing",
                  "fallback_pool_id": "${cloudflare_load_balancer_pool.example.id}",
                  "name": "example-load-balancer.example.com",
                  "pop_pools": [
                    {
                      "pool_ids": [
                        "${cloudflare_load_balancer_pool.example.id}"
                      ],
                      "pop": "LAX"
                    }
                  ],
                  "proxied": true,
                  "region_pools": [
                    {
                      "pool_ids": [
                        "${cloudflare_load_balancer_pool.example.id}"
                      ],
                      "region": "WNAM"
                    }
                  ],
                  "rules": [
                    {
                      "condition": "http.request.uri.path contains \"testing\"",
                      "fixed_response": [
                        {
                          "content_type": "html",
                          "location": "www.example.com",
                          "message_body": "hello",
                          "status_code": 200
                        }
                      ],
                      "name": "example rule"
                    }
                  ],
                  "steering_policy": "geo",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                fallback_pool_id: cloudflare_load_balancer_pool.example.id
              dependencies:
                cloudflare_load_balancer_pool.example: |-
                    {
                      "name": "example-lb-pool",
                      "origins": [
                        {
                          "address": "192.0.2.1",
                          "enabled": false,
                          "name": "example-1"
                        }
                      ]
                    }
        argumentDocs:
            adaptive_routing: (Block Set) Controls features that modify the routing of requests to pools and origins in response to dynamic conditions, such as during the interval between active health monitoring requests. (see below for nested schema)
            condition: (String) The statement to evaluate to determine if this rule's effects should be applied. An empty condition is always true. See load balancing rules.
            content_type: (String) The value of the HTTP context-type header for this fixed response.
            country: (String) A country code which can be determined with the Load Balancing Regions API described here. Multiple entries should not be specified with the same country.
            country_pools: (Block Set) A set containing mappings of country codes to a list of pool IDs (ordered by their failover priority) for the given country. (see below for nested schema)
            created_on: (String) The RFC3339 timestamp of when the load balancer was created.
            default_pool_ids: (List of String) A list of pool IDs ordered by their failover priority. Used whenever pop_pools/country_pools/region_pools are not defined.
            default_pools: (List of String) A list of pool IDs ordered by their failover priority. Used whenever pop_pools/country_pools/region_pools are not defined.
            default_weight: (Number) The default weight for pools in the load balancer that are not specified in the pool_weights map.
            description: (String) Free text description.
            disabled: (Boolean) A disabled rule will not be executed.
            drain_duration: (Number) Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer. Defaults to 0.
            enabled: (Boolean) Enable or disable the load balancer. Defaults to true.
            failover_across_pools: (Boolean) Extends zero-downtime failover of requests to healthy origins from alternate pools, when no healthy alternate exists in the same pool, according to the failover order defined by traffic and origin steering. When set false, zero-downtime failover will only occur between origins within the same pool. Defaults to false.
            fallback_pool: (String) The pool ID to use when all other pools are detected as unhealthy.
            fallback_pool_id: (String) The pool ID to use when all other pools are detected as unhealthy.
            fixed_response: '(Block List, Max: 1) Settings for a HTTP response to return directly to the eyeball if the condition is true. Note: overrides or fixed_response must be set. (see below for nested schema)'
            headers: (List of String) Configures the HTTP header names to use when header session affinity is enabled.
            id: (String) The ID of this resource.
            location: (String) The value of the HTTP location header for this fixed response.
            location_strategy: (Block Set) Controls location-based steering for non-proxied requests. (see below for nested schema)
            message_body: (String) The text used as the html body for this fixed response.
            mode: '(String) Determines the authoritative location when ECS is not preferred, does not exist in the request, or its GeoIP lookup is unsuccessful. Value pop will use the Cloudflare PoP location. Value resolver_ip will use the DNS resolver GeoIP location. If the GeoIP lookup is unsuccessful, it will use the Cloudflare PoP location. Available values: pop, resolver_ip. Defaults to pop.'
            modified_on: (String) The RFC3339 timestamp of when the load balancer was last modified.
            name: (String) The DNS hostname to associate with your load balancer. If this hostname already exists as a DNS record in Cloudflare's DNS, the load balancer will take precedence and the DNS record will not be used.
            overrides: '(Block List) The load balancer settings to alter if this rule''s condition is true. Note: overrides or fixed_response must be set. (see below for nested schema)'
            pool_ids: (List of String) A list of pool IDs in failover priority to use in the given country.
            pool_weights: (Map of Number) A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.
            pop: (String) A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the status page. Multiple entries should not be specified with the same PoP.
            pop_pools: (Block Set) A set containing mappings of Cloudflare Point-of-Presence (PoP) identifiers to a list of pool IDs (ordered by their failover priority) for the PoP (datacenter). This feature is only available to enterprise customers. (see below for nested schema)
            prefer_ecs: '(String) Whether the EDNS Client Subnet (ECS) GeoIP should be preferred as the authoritative location. Value always will always prefer ECS, never will never prefer ECS, proximity will prefer ECS only when steering_policy="proximity", and geo will prefer ECS only when steering_policy="geo". Available values: always, never, proximity, geo. Defaults to proximity.'
            priority: (Number) Priority used when determining the order of rule execution. Lower values are executed first. If not provided, the list order will be used.
            proxied: (Boolean) Whether the hostname gets Cloudflare's origin protection. Defaults to false. Conflicts with ttl.
            random_steering: (Block Set) Configures pool weights. When steering_policy="random", a random pool is selected with probability proportional to pool weights. When steering_policy="least_outstanding_requests", pool weights are used to scale each pool's outstanding requests. When steering_policy="least_connections", pool weights are used to scale each pool's open connections. (see below for nested schema)
            region: (String) A region code which must be in the list defined here. Multiple entries should not be specified with the same region.
            region_pools: (Block Set) A set containing mappings of region codes to a list of pool IDs (ordered by their failover priority) for the given region. (see below for nested schema)
            require_all_headers: (Boolean) Configures how headers are used when header session affinity is enabled. Set to true to require all headers to be present on requests in order for sessions to be created or false to require at least one header to be present. Defaults to false.
            rules: (Block List) A list of rules for this load balancer to execute. (see below for nested schema)
            samesite: '(String) Configures the SameSite attribute on session affinity cookie. Value Auto will be translated to Lax or None depending if Always Use HTTPS is enabled. Note: when using value None, then you can not set secure="Never". Available values: Auto, Lax, None, Strict.'
            secure: '(String) Configures the Secure attribute on session affinity cookie. Value Always indicates the Secure attribute will be set in the Set-Cookie header, Never indicates the Secure attribute will not be set, and Auto will set the Secure attribute depending if Always Use HTTPS is enabled. Available values: Auto, Always, Never.'
            session_affinity: '(String) Specifies the type of session affinity the load balancer should use unless specified as none or "" (default). With value cookie, on the first request to a proxied load balancer, a cookie is generated, encoding information of which origin the request will be forwarded to. Subsequent requests, by the same client to the same load balancer, will be sent to the origin server the cookie encodes, for the duration of the cookie and as long as the origin server remains healthy. If the cookie has expired or the origin server is unhealthy then a new origin server is calculated and used. Value ip_cookie behaves the same as cookie except the initial origin selection is stable and based on the client''s IP address. Available values: "", none, cookie, ip_cookie, header. Defaults to none.'
            session_affinity_attributes: (Block Set) Configure attributes for session affinity. (see below for nested schema)
            session_affinity_ttl: (Number) Time, in seconds, until this load balancer's session affinity cookie expires after being created. This parameter is ignored unless a supported session affinity policy is set. The current default of 82800 (23 hours) will be used unless session_affinity_ttl is explicitly set. Once the expiry time has been reached, subsequent requests may get sent to a different origin server. Valid values are between 1800 and 604800.
            status_code: (Number) The HTTP status code used for this fixed response.
            steering_policy: '(String) The method the load balancer uses to determine the route to your origin. Value off uses default_pool_ids. Value geo uses pop_pools/country_pools/region_pools. For non-proxied requests, the country for country_pools is determined by location_strategy. Value random selects a pool randomly. Value dynamic_latency uses round trip time to select the closest pool in default_pool_ids (requires pool health checks). Value proximity uses the pools'' latitude and longitude to select the closest pool using the Cloudflare PoP location for proxied requests or the location determined by location_strategy for non-proxied requests. Value least_outstanding_requests selects a pool by taking into consideration random_steering weights, as well as each pool''s number of outstanding requests. Pools with more pending requests are weighted proportionately less relative to others. Value least_connections selects a pool by taking into consideration random_steering weights, as well as each pool''s number of open connections. Pools with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Value "" maps to geo if you use pop_pools/country_pools/region_pools otherwise off. Available values: off, geo, dynamic_latency, random, proximity, least_outstanding_requests, least_connections, "" Defaults to "".'
            terminates: '(Boolean) Terminates indicates that if this rule is true no further rules should be executed. Note: setting a fixed_response forces this field to true.'
            ttl: (Number) Time to live (TTL) of the DNS entry for the IP address returned by this load balancer. This cannot be set for proxied load balancers. Defaults to 30. Conflicts with proxied.
            zero_downtime_failover: '(String) Configures the zero-downtime failover between origins within a pool when session affinity is enabled. Value none means no failover takes place for sessions pinned to the origin. Value temporary means traffic will be sent to another other healthy origin until the originally pinned origin is available; note that this can potentially result in heavy origin flapping. Value sticky means the session affinity cookie is updated and subsequent requests are sent to the new origin. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance. Available values: none, temporary, sticky.'
            zone_id: (String) The zone ID to add the load balancer to. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_load_balancer.example <zone_id>/<load_balancer_id>
    cloudflare_load_balancer_monitor:
        subCategory: ""
        description: If Cloudflare's Load Balancing to load-balance across multiple origin servers or data centers, you configure one of these Monitors to actively check the availability of those servers over HTTP(S) or TCP.
        name: cloudflare_load_balancer_monitor
        title: cloudflare_load_balancer_monitor Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "allow_insecure": false,
                  "description": "example http load balancer",
                  "expected_body": "alive",
                  "expected_codes": "2xx",
                  "follow_redirects": true,
                  "header": [
                    {
                      "header": "Host",
                      "values": [
                        "example.com"
                      ]
                    }
                  ],
                  "interval": 60,
                  "method": "GET",
                  "path": "/health",
                  "probe_zone": "example.com",
                  "retries": 5,
                  "timeout": 7,
                  "type": "http"
                }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "example tcp load balancer",
                  "interval": 60,
                  "method": "connection_established",
                  "port": 8080,
                  "retries": 5,
                  "timeout": 7,
                  "type": "tcp"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            allow_insecure: (Boolean) Do not validate the certificate when monitor use HTTPS.  Only valid if type is "http" or "https".
            consecutive_down: (Number) To be marked unhealthy the monitored origin must fail this healthcheck N consecutive times. Defaults to 0.
            consecutive_up: (Number) To be marked healthy the monitored origin must pass this healthcheck N consecutive times. Defaults to 0.
            created_on: (String) The RFC3339 timestamp of when the load balancer monitor was created.
            description: (String) Free text description.
            expected_body: (String) A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. Only valid if type is "http" or "https".
            expected_codes: (String) The expected HTTP response code or code range of the health check. Eg 2xx. Only valid and required if type is "http" or "https".
            follow_redirects: (Boolean) Follow redirects if returned by the origin. Only valid if type is "http" or "https".
            header: (Block Set) The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. (see below for nested schema)
            id: (String) The ID of this resource.
            interval: (Number) The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations. Defaults to 60.
            method: (String) The method to use for the health check.
            modified_on: (String) The RFC3339 timestamp of when the load balancer monitor was last modified.
            path: (String) The endpoint path to health check against.
            port: (Number) The port number to use for the healthcheck, required when creating a TCP monitor.
            probe_zone: (String) Assign this monitor to emulate the specified zone while probing. Only valid if type is "http" or "https".
            retries: (Number) The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. Defaults to 2.
            timeout: (Number) The timeout (in seconds) before marking the health check as failed. Defaults to 5.
            type: '(String) The protocol to use for the healthcheck. Available values: http, https, tcp, udp_icmp, icmp_ping, smtp. Defaults to http.'
            values: (Set of String) A list of values for the header.
        importStatements:
            - $ terraform import cloudflare_load_balancer_monitor.example <account_id>/<load_balancer_monitor_id>
    cloudflare_load_balancer_pool:
        subCategory: ""
        description: Provides a Cloudflare Load Balancer pool resource. This provides a pool of origins that can be used by a Cloudflare Load Balancer.
        name: cloudflare_load_balancer_pool
        title: cloudflare_load_balancer_pool Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "example load balancer pool",
                  "enabled": false,
                  "latitude": 55,
                  "load_shedding": [
                    {
                      "default_percent": 55,
                      "default_policy": "random",
                      "session_percent": 12,
                      "session_policy": "hash"
                    }
                  ],
                  "longitude": -12,
                  "minimum_origins": 1,
                  "name": "example-pool",
                  "notification_email": "someone@example.com",
                  "origin_steering": [
                    {
                      "policy": "random"
                    }
                  ],
                  "origins": [
                    {
                      "address": "192.0.2.1",
                      "enabled": false,
                      "header": [
                        {
                          "header": "Host",
                          "values": [
                            "example-1"
                          ]
                        }
                      ],
                      "name": "example-1"
                    },
                    {
                      "address": "192.0.2.2",
                      "header": [
                        {
                          "header": "Host",
                          "values": [
                            "example-2"
                          ]
                        }
                      ],
                      "name": "example-2"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            address: (String) The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname.
            check_regions: (Set of String) A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found here.
            created_on: (String) The RFC3339 timestamp of when the load balancer was created.
            default_percent: (Number) Percent of traffic to shed 0 - 100. Defaults to 0.
            default_policy: '(String) Method of shedding traffic. Available values: "", hash, random. Defaults to "".'
            description: (String) Free text description.
            enabled: (Boolean) Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any). Defaults to true.
            header: (Block Set) HTTP request headers. (see below for nested schema)
            id: (String) The ID of this resource.
            latitude: (Number) The latitude this pool is physically located at; used for proximity steering.
            load_shedding: (Block Set) Setting for controlling load shedding for this pool. (see below for nested schema)
            longitude: (Number) The longitude this pool is physically located at; used for proximity steering.
            minimum_origins: (Number) The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Defaults to 1.
            modified_on: (String) The RFC3339 timestamp of when the load balancer was last modified.
            monitor: (String) The ID of the Monitor to use for health checking origins within this pool.
            name: (String) A short name (tag) for the pool.
            notification_email: (String) The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
            origin_steering: (Block Set) Set an origin steering policy to control origin selection within a pool. (see below for nested schema)
            origins: '(Block Set, Min: 1) The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. (see below for nested schema)'
            policy: '(String) Origin steering policy to be used. Value random selects an origin randomly. Value hash selects an origin by computing a hash over the CF-Connecting-IP address. Value least_outstanding_requests selects an origin by taking into consideration origin weights, as well as each origin''s number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others. Value least_connections selects an origin by taking into consideration origin weights, as well as each origin''s number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections. Available values: "", hash, random, least_outstanding_requests, least_connections. Defaults to random.'
            session_percent: (Number) Percent of session traffic to shed 0 - 100. Defaults to 0.
            session_policy: '(String) Method of shedding traffic. Available values: "", hash. Defaults to "".'
            values: (Set of String) Values for the HTTP headers.
            weight: (Number) The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. When origin_steering.policy="least_outstanding_requests", weight is used to scale the origin's outstanding requests. When origin_steering.policy="least_connections", weight is used to scale the origin's open connections. Defaults to 1.
        importStatements:
            - $ terraform import cloudflare_load_balancer_pool.example <account_id>/<load_balancer_pool_id>
    cloudflare_logpull_retention:
        subCategory: ""
        description: Allows management of the Logpull Retention settings used to control whether or not to retain HTTP request logs.
        name: cloudflare_logpull_retention
        title: cloudflare_logpull_retention Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": "true",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            enabled: (Boolean) Whether you wish to retain logs or not.
            id: (String) The ID of this resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_logpull_retention.example <zone_id>
    cloudflare_logpush_job:
        subCategory: ""
        description: 'Provides a resource which manages Cloudflare Logpush jobs. For Logpush jobs pushing to Amazon S3, Google Cloud Storage, Microsoft Azure or Sumo Logic, this resource cannot be automatically created. In order to have this automated, you must have: cloudflare_logpush_ownership_challenge: Configured to generate the challenge to confirm ownership of the destination.Either manual inspection or another Terraform Provider to get the contents of the ownership_challenge_filename value from thecloudflare_logpush_ownership_challenge resource.cloudflare_logpush_job: Create and manage the Logpush Job itself.'
        name: cloudflare_logpush_job
        title: cloudflare_logpush_job Resource - Cloudflare
        examples:
            - name: http_requests
              manifest: |-
                {
                  "dataset": "http_requests",
                  "destination_conf": "r2://cloudflare-logs/http_requests/date={DATE}?account-id=${var.account_id}\u0026access-key-id=${cloudflare_api_token.logpush_r2_token.id}\u0026secret-access-key=${sha256(cloudflare_api_token.logpush_r2_token.value)}",
                  "enabled": true,
                  "logpull_options": "fields=ClientIP,ClientRequestHost,ClientRequestMethod,ClientRequestURI,EdgeEndTimestamp,EdgeResponseBytes,EdgeResponseStatus,EdgeStartTimestamp,RayID\u0026timestamps=rfc3339",
                  "name": "http_requests",
                  "zone_id": "${var.zone_id}"
                }
              references:
                zone_id: var.zone_id
              dependencies:
                cloudflare_api_token.logpush_r2_token: |-
                    {
                      "name": "logpush_r2_token",
                      "policy": [
                        {
                          "permission_groups": [
                            "${data.cloudflare_api_token_permission_groups.all.permissions[\"Workers R2 Storage Write\"]}"
                          ],
                          "resources": {
                            "com.cloudflare.api.account.*": "*"
                          }
                        }
                      ]
                    }
                cloudflare_logpush_ownership_challenge.ownership_challenge: |-
                    {
                      "destination_conf": "s3://my-bucket-path?region=us-west-2",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
            - name: example_job
              manifest: |-
                {
                  "dataset": "http_requests",
                  "destination_conf": "s3://my-bucket-path?region=us-west-2",
                  "enabled": true,
                  "logpull_options": "fields=RayID,ClientIP,EdgeStartTimestamp\u0026timestamps=rfc3339",
                  "name": "My-logpush-job",
                  "ownership_challenge": "${data.aws_s3_bucket_object.challenge_file.body}",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                ownership_challenge: data.aws_s3_bucket_object.challenge_file.body
              dependencies:
                cloudflare_api_token.logpush_r2_token: |-
                    {
                      "name": "logpush_r2_token",
                      "policy": [
                        {
                          "permission_groups": [
                            "${data.cloudflare_api_token_permission_groups.all.permissions[\"Workers R2 Storage Write\"]}"
                          ],
                          "resources": {
                            "com.cloudflare.api.account.*": "*"
                          }
                        }
                      ]
                    }
                cloudflare_logpush_ownership_challenge.ownership_challenge: |-
                    {
                      "destination_conf": "s3://my-bucket-path?region=us-west-2",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
            - name: example_job
              manifest: |-
                {
                  "dataset": "http_requests",
                  "destination_conf": "s3://my-bucket-path?region=us-west-2",
                  "enabled": true,
                  "frequency": "high",
                  "logpull_options": "fields=RayID,ClientIP,EdgeStartTimestamp\u0026timestamps=rfc3339",
                  "name": "My-logpush-job",
                  "ownership_challenge": "0000000000000",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              dependencies:
                cloudflare_api_token.logpush_r2_token: |-
                    {
                      "name": "logpush_r2_token",
                      "policy": [
                        {
                          "permission_groups": [
                            "${data.cloudflare_api_token_permission_groups.all.permissions[\"Workers R2 Storage Write\"]}"
                          ],
                          "resources": {
                            "com.cloudflare.api.account.*": "*"
                          }
                        }
                      ]
                    }
                cloudflare_logpush_ownership_challenge.ownership_challenge: |-
                    {
                      "destination_conf": "s3://my-bucket-path?region=us-west-2",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Must provide only one of account_id, zone_id.
            cloudflare_logpush_job: ': Create and manage the Logpush Job itself.'
            cloudflare_logpush_ownership_challenge: |-
                : Configured to generate the challenge
                to confirm ownership of the destination.
            dataset: '(String) The kind of the dataset to use with the logpush job. Available values: access_requests, casb_findings, firewall_events, http_requests, spectrum_events, nel_reports, audit_logs, gateway_dns, gateway_http, gateway_network, dns_logs, network_analytics_logs, workers_trace_events, device_posture_results, zero_trust_network_sessions, magic_ids_detections.'
            destination_conf: (String) Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See Logpush destination documentation.
            enabled: (Boolean) Whether to enable the job.
            filter: (String) Use filters to select the events to include and/or remove from your logs. For more information, refer to Filters.
            frequency: '(String) A higher frequency will result in logs being pushed on faster with smaller files. low frequency will push logs less often with larger files. Available values: high, low. Defaults to high.'
            id: (String) The ID of this resource.
            kind: '(String) The kind of logpush job to create. Available values: edge, instant-logs, "".'
            logpull_options: (String) Configuration string for the Logshare API. It specifies things like requested fields and timestamp formats. See Logpush options documentation.
            max_upload_bytes: (Number) The maximum uncompressed file size of a batch of logs. Value must be between 5MB and 1GB.
            max_upload_interval_seconds: (Number) The maximum interval in seconds for log batches. Value must be between 30 and 300.
            max_upload_records: (Number) The maximum number of log lines per batch. Value must be between 1000 and 1,000,000.
            name: (String) The name of the logpush job to create.
            ownership_challenge: (String) Ownership challenge token to prove destination ownership, required when destination is Amazon S3, Google Cloud Storage, Microsoft Azure or Sumo Logic. See Developer documentation.
            ownership_challenge_filename: value from thecloudflare_logpush_ownership_challenge resource.
            zone_id: (String) The zone identifier to target for the resource. Must provide only one of account_id, zone_id.
        importStatements:
            - |-
              # Import an account-scoped job.
              $ terraform import cloudflare_logpush_job.example account/<account_id>/<job_id>

              # Import a zone-scoped job.
              $ terraform import cloudflare_logpush_job.example zone/<zone_id>/<job_id>
    cloudflare_logpush_ownership_challenge:
        subCategory: ""
        description: Provides a resource which manages Cloudflare Logpush ownership challenges to use in a Logpush Job. On it's own, doesn't do much however this resource should be used in conjunction to create Logpush jobs.
        name: cloudflare_logpush_ownership_challenge
        title: cloudflare_logpush_ownership_challenge Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "destination_conf": "s3://my-bucket-path?region=us-west-2",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Must provide only one of account_id, zone_id.
            destination_conf: (String) Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See Logpush destination documentation. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            ownership_challenge_filename: "(String) The filename of the ownership challenge which\tcontains the contents required for Logpush Job creation."
            zone_id: (String) The zone identifier to target for the resource. Must provide only one of account_id, zone_id.
        importStatements: []
    cloudflare_magic_firewall_ruleset:
        subCategory: ""
        description: Provides the ability to manage a Magic Firewall Ruleset and it's firewall rules which are used with Magic Transit.
        name: cloudflare_magic_firewall_ruleset
        title: cloudflare_magic_firewall_ruleset
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "d41d8cd98f00b204e9800998ecf8427e",
                  "description": "Global mitigations",
                  "name": "Magic Transit Ruleset",
                  "rules": [
                    {
                      "action": "allow",
                      "description": "Allow TCP Ephemeral Ports",
                      "enabled": "true",
                      "expression": "tcp.dstport in { 32768..65535 }"
                    },
                    {
                      "action": "block",
                      "description": "Block all",
                      "enabled": "true",
                      "expression": "ip.len \u003e= 0"
                    }
                  ]
                }
        argumentDocs:
            account_id: '- (Required) The ID of the account where the ruleset is being created.'
            action: '- (Required) Valid values: allow or block.'
            description: '- (Optional) A note that can be used to annotate the ruleset.'
            enabled: '- (Required) Whether the rule is enabled or not. Valid values: true or false.'
            expression: '- (Required) A Firewall expression using Wireshark syntax.'
            name: '- (Required) The name of the ruleset.'
        importStatements: []
    cloudflare_managed_headers:
        subCategory: ""
        description: The Cloudflare Managed Headers https://developers.cloudflare.com/rules/transform/managed-transforms/ allows you to add or remove some predefined headers to one's requests or origin responses.
        name: cloudflare_managed_headers
        title: cloudflare_managed_headers Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "managed_request_headers": [
                    {
                      "enabled": true,
                      "id": "add_true_client_ip_headers"
                    }
                  ],
                  "managed_response_headers": [
                    {
                      "enabled": true,
                      "id": "remove_x-powered-by_header"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            enabled: (Boolean) Whether the headers rule is active.
            id: (String) The ID of this resource.
            managed_request_headers: (Block Set) The list of managed request headers. (see below for nested schema)
            managed_response_headers: (Block Set) The list of managed response headers. (see below for nested schema)
            zone_id: (String) The zone identifier to target for the resource.
        importStatements: []
    cloudflare_mtls_certificate:
        subCategory: ""
        description: Provides a Cloudflare mTLS certificate resource. These certificates may be used with mTLS enabled Cloudflare services.
        name: cloudflare_mtls_certificate
        title: cloudflare_mtls_certificate Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "ca": true,
                  "certificates": "-----BEGIN CERTIFICATE-----\nMIIDmDCCAoCgAwIBAgIUKTOAZNj...i4JhqeoTewsxndhDDE\n-----END CERTIFICATE-----",
                  "name": "example",
                  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQE...1IS3EnQRrz6WMYA=\n-----END PRIVATE KEY-----"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            ca: (Boolean) Whether this is a CA or leaf certificate. Modifying this attribute will force creation of a new resource.
            certificates: (String) Certificate you intend to use with mTLS-enabled services. Modifying this attribute will force creation of a new resource.
            expires_on: (String) Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            issuer: (String) Modifying this attribute will force creation of a new resource.
            name: (String) Optional unique name for the certificate. Modifying this attribute will force creation of a new resource.
            private_key: (String) The certificate's private key. Modifying this attribute will force creation of a new resource.
            serial_number: (String) Modifying this attribute will force creation of a new resource.
            signature: (String) Modifying this attribute will force creation of a new resource.
            uploaded_on: (String) Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_mtls_certificate.example <account_id>/<mtls_certificate_id>
    cloudflare_notification_policy:
        subCategory: ""
        description: Provides a resource, that manages a notification policy for Cloudflare's products. The delivery mechanisms supported are email, webhooks, and PagerDuty.
        name: cloudflare_notification_policy
        title: cloudflare_notification_policy Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "alert_type": "universal_ssl_event_type",
                  "description": "Notification policy to alert when my SSL certificates are modified",
                  "email_integration": [
                    {
                      "id": "myemail@example.com"
                    }
                  ],
                  "enabled": true,
                  "name": "Policy for SSL notification events",
                  "pagerduty_integration": [
                    {
                      "id": "850129d136459401860572c5d964d27k"
                    }
                  ],
                  "webhooks_integration": [
                    {
                      "id": "1860572c5d964d27aa0f379d13645940"
                    }
                  ]
                }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "alert_type": "health_check_status_notification",
                  "description": "Notification policy to alert on unhealthy Healthcheck status",
                  "email_integration": [
                    {
                      "id": "myemail@example.com"
                    }
                  ],
                  "enabled": true,
                  "filters": [
                    {
                      "health_check_id": [
                        "699d98642c564d2e855e9661899b7252"
                      ],
                      "status": [
                        "Unhealthy"
                      ]
                    }
                  ],
                  "name": "Policy for Healthcheck notification",
                  "pagerduty_integration": [
                    {
                      "id": "850129d136459401860572c5d964d27k"
                    }
                  ],
                  "webhooks_integration": [
                    {
                      "id": "1860572c5d964d27aa0f379d13645940"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            actions: (Set of String) Targeted actions for alert.
            alert_trigger_preferences: '(Set of String) Alert trigger preferences. Example: slo.'
            alert_type: '(String) The event type that will trigger the dispatch of a notification. See the developer documentation for descriptions of available alert types. Available values: advanced_http_alert_error, access_custom_certificate_expiration_type, advanced_ddos_attack_l4_alert, advanced_ddos_attack_l7_alert, bgp_hijack_notification, billing_usage_alert, block_notification_block_removed, block_notification_new_block, block_notification_review_rejected, brand_protection_alert, brand_protection_digest, clickhouse_alert_fw_anomaly, clickhouse_alert_fw_ent_anomaly, custom_ssl_certificate_event_type, dedicated_ssl_certificate_event_type, dos_attack_l4, dos_attack_l7, expiring_service_token_alert, failing_logpush_job_disabled_alert, fbm_auto_advertisement, fbm_dosd_attack, fbm_volumetric_attack, health_check_status_notification, hostname_aop_custom_certificate_expiration_type, http_alert_edge_error, http_alert_origin_error, incident_alert, load_balancing_health_alert, load_balancing_pool_enablement_alert, logo_match_alert, magic_tunnel_health_check_event, maintenance_event_notification, mtls_certificate_store_certificate_expiration_type, pages_event_alert, radar_notification, real_origin_monitoring, scriptmonitor_alert_new_code_change_detections, scriptmonitor_alert_new_hosts, scriptmonitor_alert_new_malicious_hosts, scriptmonitor_alert_new_malicious_scripts, scriptmonitor_alert_new_malicious_url, scriptmonitor_alert_new_max_length_resource_url, scriptmonitor_alert_new_resources, secondary_dns_all_primaries_failing, secondary_dns_primaries_failing, secondary_dns_zone_successfully_updated, secondary_dns_zone_validation_warning, sentinel_alert, stream_live_notifications, traffic_anomalies_alert, tunnel_health_event, tunnel_update_event, universal_ssl_event_type, web_analytics_metrics_update, weekly_account_overview, workers_alert, zone_aop_custom_certificate_expiration_type.'
            created: (String) When the notification policy was created.
            description: (String) Description of the notification policy.
            email_integration: (Block Set) The email ID to which the notification should be dispatched. (see below for nested schema)
            enabled: (Boolean) The status of the notification policy.
            environment: '(Set of String) Environment of pages. Available values: ENVIRONMENT_PREVIEW, ENVIRONMENT_PRODUCTION.'
            event: '(Set of String) Pages event to alert. Available values: EVENT_DEPLOYMENT_STARTED, EVENT_DEPLOYMENT_FAILED, EVENT_DEPLOYMENT_SUCCESS.'
            event_source: (Set of String) Source configuration to alert on for pool or origin.
            event_type: (Set of String) Stream event type to alert on.
            filters: '(Block List, Max: 1) An optional nested block of filters that applies to the selected alert_type. A key-value map that specifies the type of filter and the values to match against (refer to the alert type block for available fields). (see below for nested schema)'
            group_by: (Set of String) Alert grouping.
            health_check_id: (Set of String) Identifier health check. Required when using filters.0.status.
            id: (String) The ID of this resource.
            incident_impact: '(Set of String) The incident impact level that will trigger the dispatch of a notification. Available values: INCIDENT_IMPACT_NONE, INCIDENT_IMPACT_MINOR, INCIDENT_IMPACT_MAJOR, INCIDENT_IMPACT_CRITICAL.'
            input_id: (Set of String) Stream input id to alert on.
            limit: '(Set of String) A numerical limit. Example: 100.'
            megabits_per_second: (Set of String) Megabits per second threshold for dos alert.
            modified: (String) When the notification policy was last modified.
            name: (String) The name of the notification policy.
            new_health: (Set of String) Health status to alert on for pool or origin.
            new_status: (Set of String) Tunnel health status to alert on.
            packets_per_second: (Set of String) Packets per second threshold for dos alert.
            pagerduty_integration: (Block Set) The unique ID of a configured pagerduty endpoint to which the notification should be dispatched. (see below for nested schema)
            pool_id: (Set of String) Load balancer pool identifier.
            product: '(Set of String) Product name. Available values: worker_requests, worker_durable_objects_requests, worker_durable_objects_duration, worker_durable_objects_data_transfer, worker_durable_objects_stored_data, worker_durable_objects_storage_deletes, worker_durable_objects_storage_writes, worker_durable_objects_storage_reads.'
            project_id: (Set of String) Identifier of pages project.
            protocol: (Set of String) Protocol to alert on for dos.
            requests_per_second: (Set of String) Requests per second threshold for dos alert.
            selectors: (Set of String) Selectors for alert. Valid options depend on the alert type.
            services: (Set of String)
            slo: '(Set of String) A numerical limit. Example: 99.9.'
            status: (Set of String) Status to alert on.
            target_hostname: (Set of String) Target host to alert on for dos.
            target_zone_name: (Set of String) Target domain to alert on.
            tunnel_id: (Set of String) Tunnel IDs to alert on.
            webhooks_integration: (Block Set) The unique ID of a configured webhooks endpoint to which the notification should be dispatched. (see below for nested schema)
            where: (Set of String) Filter for alert.
            zones: (Set of String) A list of zone identifiers.
        importStatements:
            - $ terraform import cloudflare_notification_policy.example <account_id>/<policy_id>
    cloudflare_notification_policy_webhooks:
        subCategory: ""
        description: Provides a resource, that manages a webhook destination. These destinations can be tied to the notification policies created for Cloudflare's products.
        name: cloudflare_notification_policy_webhooks
        title: cloudflare_notification_policy_webhooks Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "Webhooks destination",
                  "secret": "my-secret",
                  "url": "https://example.com"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            created_at: (String) Timestamp of when the notification webhook was created.
            id: (String) The ID of this resource.
            last_failure: (String) Timestamp of when the notification webhook last faiuled.
            last_success: (String) Timestamp of when the notification webhook was last successful.
            name: (String) The name of the webhook destination.
            secret: (String) An optional secret can be provided that will be passed in the cf-webhook-auth header when dispatching a webhook notification. Secrets are not returned in any API response body. Refer to the documentation for more details.
            type: (String)
            url: (String) The URL of the webhook destinations. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_notification_policy_webhooks.example <account_id>/<notification_webhook_id>
    cloudflare_observatory_scheduled_test:
        subCategory: ""
        description: Provides a Cloudflare Observatory Scheduled Test resource.
        name: cloudflare_observatory_scheduled_test
        title: cloudflare_observatory_scheduled_test Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "frequency": "WEEKLY",
                  "region": "us-central1",
                  "url": "example.com",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            create: (String)
            frequency: '(String) The frequency to run the test. Available values: DAILY, WEEKLY. Modifying this attribute will force creation of a new resource.'
            id: (String) The ID of this resource.
            region: '(String) The region to run the test in. Available values: us-central1, us-east1, us-east4, us-south1, us-west1, southamerica-east1, europe-north1, europe-southwest1, europe-west1, europe-west2, europe-west3, europe-west4, europe-west8, europe-west9, asia-east1, asia-south1, asia-southeast1, me-west1, australia-southeast1. Modifying this attribute will force creation of a new resource.'
            timeouts: (Block, Optional) (see below for nested schema)
            url: (String) The page to run the test on. Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_observatory_scheduled_test.example <zone_id>:<url>:<region>
    cloudflare_origin_ca_certificate:
        subCategory: ""
        description: Provides a Cloudflare Origin CA certificate used to protect traffic to your origin without involving a third party Certificate Authority.
        name: cloudflare_origin_ca_certificate
        title: cloudflare_origin_ca_certificate Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "csr": "${tls_cert_request.example.cert_request_pem}",
                  "hostnames": [
                    "example.com"
                  ],
                  "request_type": "origin-rsa",
                  "requested_validity": 7
                }
              references:
                csr: tls_cert_request.example.cert_request_pem
              dependencies:
                tls_cert_request.example: |-
                    {
                      "private_key_pem": "${tls_private_key.example.private_key_pem}",
                      "subject": [
                        {
                          "common_name": "",
                          "organization": "Terraform Test"
                        }
                      ]
                    }
                tls_private_key.example: |-
                    {
                      "algorithm": "RSA"
                    }
        argumentDocs:
            certificate: (String) The Origin CA certificate.
            csr: (String) The Certificate Signing Request. Must be newline-encoded. Modifying this attribute will force creation of a new resource.
            expires_on: (String) The datetime when the certificate will expire.
            hostnames: (Set of String) A list of hostnames or wildcard names bound to the certificate. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            min_days_for_renewal: (Number) Number of days prior to the expiry to trigger a renewal of the certificate if a Terraform operation is run.
            request_type: '(String) The signature type desired on the certificate. Available values: origin-rsa, origin-ecc, keyless-certificate. Modifying this attribute will force creation of a new resource.'
            requested_validity: '(Number) The number of days for which the certificate should be valid. Available values: 7, 30, 90, 365, 730, 1095, 5475. Modifying this attribute will force creation of a new resource.'
        importStatements:
            - $ terraform import cloudflare_origin_ca_certificate.example <certificate_id>
    cloudflare_page_rule:
        subCategory: ""
        description: Provides a Cloudflare page rule resource.
        name: cloudflare_page_rule
        title: cloudflare_page_rule
        examples:
            - name: foobar
              manifest: |-
                {
                  "actions": [
                    {
                      "email_obfuscation": "on",
                      "minify": [
                        {
                          "css": "on",
                          "html": "off",
                          "js": "on"
                        }
                      ],
                      "ssl": "flexible"
                    }
                  ],
                  "priority": 1,
                  "target": "sub.${var.cloudflare_zone}/page",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: foobar
              manifest: |-
                {
                  "actions": [
                    {
                      "cache_key_fields": [
                        {
                          "cookie": [
                            {}
                          ],
                          "header": [
                            {
                              "exclude": [
                                "origin"
                              ]
                            }
                          ],
                          "host": [
                            {}
                          ],
                          "query_string": [
                            {
                              "exclude": [
                                "api_token"
                              ]
                            }
                          ],
                          "user": [
                            {
                              "lang": true
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "priority": 1,
                  "target": "embed.${var.cloudflare_zone}/*.js",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: foobar
              manifest: |-
                {
                  "actions": [
                    {
                      "cache_key_fields": [
                        {
                          "cookie": [
                            {
                              "check_presence": [
                                "wordpress_test_cookie"
                              ]
                            }
                          ],
                          "header": [
                            {
                              "check_presence": [
                                "header_present"
                              ],
                              "exclude": [
                                "origin"
                              ],
                              "include": [
                                "api-key",
                                "dnt"
                              ]
                            }
                          ],
                          "host": [
                            {
                              "resolved": true
                            }
                          ],
                          "query_string": [
                            {
                              "ignore": true
                            }
                          ],
                          "user": [
                            {
                              "device_type": false,
                              "geo": true,
                              "lang": true
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "priority": 1,
                  "target": "${var.cloudflare_zone}/app/*",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: test
              manifest: |-
                {
                  "actions": [
                    {
                      "cache_ttl_by_status": [
                        {
                          "codes": "200-299",
                          "ttl": 300
                        },
                        {
                          "codes": "300-399",
                          "ttl": 60
                        },
                        {
                          "codes": "400-403",
                          "ttl": -1
                        },
                        {
                          "codes": "404",
                          "ttl": 30
                        },
                        {
                          "codes": "405-499",
                          "ttl": -1
                        },
                        {
                          "codes": "500-599",
                          "ttl": 0
                        }
                      ]
                    }
                  ],
                  "priority": 1,
                  "target": "${var.cloudflare_zone}/app/*",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
        argumentDocs:
            "-1": '- sets no-store, never save to cache'
            "0": '- sets no-cache, saved to cache, but expired immediately (revalidate from origin every time)'
            actions: '- (Required) The actions taken by the page rule, options given below.'
            always_use_https: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            automatic_https_rewrites: '- (Optional) Whether this action is "on" or "off".'
            browser_cache_ttl: '- (Optional) The Time To Live for the browser cache. 0 means ''Respect Existing Headers'''
            browser_check: '- (Optional) Whether this action is "on" or "off".'
            bypass_cache_on_cookie: '- (Optional) String value of cookie name to conditionally bypass cache the page.'
            cache_by_device_type: '- (Optional) Whether this action is "on" or "off".'
            cache_deception_armor: '- (Optional) Whether this action is "on" or "off".'
            cache_key_fields: '- (Optional) Controls how Cloudflare creates Cache Keys used to identify files in cache. See below for full description.'
            cache_level: '- (Optional) Whether to set the cache level to "bypass", "basic", "simplified", "aggressive", or "cache_everything".'
            cache_on_cookie: '- (Optional) String value of cookie name to conditionally cache the page.'
            cache_ttl_by_status: '- (Optional) Set cache TTL based on the response status from the origin web server. Can be specified multiple times. See below for full description.'
            check_presence: '- (Optional, Array) Check for presence of specified cookies, without including their actual values.'
            codes: '- (Required) A HTTP code (e.g. 404) or range of codes (e.g. 400-499)'
            cookie: '- (Optional) Controls what cookies go into Cache Key:'
            css: '- (Required) Whether CSS should be minified. Valid values are "on" or "off".'
            device_type: '- (Optional, Boolean) true - classifies a request as “mobile”, “desktop”, or “tablet” based on the User Agent; defaults to false.'
            disable_apps: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_performance: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_railgun: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_security: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_zaraz: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            edge_cache_ttl: '- (Optional) The Time To Live for the edge cache.'
            email_obfuscation: '- (Optional) Whether this action is "on" or "off".'
            exclude: '- (Optional, Array) Exclude these HTTP headers from Cache Key. Currently, only the Origin header can be excluded.'
            explicit_cache_control: '- (Optional) Whether origin Cache-Control action is "on" or "off".'
            forwarding_url: '- (Optional) The URL to forward to, and with what status. See below.'
            geo: '- (Optional, Boolean) true - includes the client’s country, derived from the IP address; defaults to false.'
            header: '- (Optional) Controls what HTTP headers go into Cache Key:'
            host: '- (Required, but allowed to be empty) Controls which Host header goes into Cache Key:'
            host_header_override: '- (Optional) Value of the Host header to send.'
            html: '- (Required) Whether HTML should be minified. Valid values are "on" or "off".'
            id: '- The page rule ID.'
            ignore: '- (Optional, Boolean) false (default) - all query string parameters are used for Cache Key, unless explicitly excluded; true - all query string parameters are ignored; value should be false if any of exclude or include is non-empty.'
            include: '- (Optional, Array) Use values of specified cookies in Cache Key.'
            ip_geolocation: '- (Optional) Whether this action is "on" or "off".'
            js: '- (Required) Whether Javascript should be minified. Valid values are "on" or "off".'
            lang: '- (Optional, Boolean) true - includes the first language code contained in the Accept-Language header sent by the client; defaults to false.'
            minify: '- (Optional) The configuration for HTML, CSS and JS minification. See below for full list of options.'
            mirage: '- (Optional) Whether this action is "on" or "off".'
            opportunistic_encryption: '- (Optional) Whether this action is "on" or "off".'
            origin_error_page_pass_thru: '- (Optional) Whether this action is "on" or "off".'
            polish: '- (Optional) Whether this action is "off", "lossless" or "lossy".'
            priority: '- (Optional) The priority of the page rule among others for this target, the higher the number the higher the priority as per API documentation.'
            query_string: '- (Required, but allowed to be empty) Controls which URL query string parameters go into the Cache Key.'
            resolve_override: '- (Optional) Overridden origin server name.'
            resolved: '- (Optional, Boolean) false (default) - includes the Host header in the HTTP request sent to the origin; true - includes the Host header that was resolved to get the origin IP for the request (e.g. changed with Resolve Override Page Rule).'
            respect_strong_etag: '- (Optional) Whether this action is "on" or "off".'
            response_buffering: '- (Optional) Whether this action is "on" or "off".'
            rocket_loader: '- (Optional) Whether to set the rocket loader to "on", "off".'
            security_level: '- (Optional) Whether to set the security level to "off", "essentially_off", "low", "medium", "high", or "under_attack".'
            server_side_exclude: '- (Optional) Whether this action is "on" or "off".'
            smart_errors: '- (Optional) Whether this action is "on" or "off".'
            sort_query_string_for_cache: '- (Optional) Whether this action is "on" or "off".'
            ssl: '- (Optional) Whether to set the SSL mode to "off", "flexible", "full", "strict", or "origin_pull".'
            status: '- (Optional) Whether the page rule is active or disabled.'
            status_code: '- (Required) The status code to use for the redirection.'
            target: '- (Required) The URL pattern to target with the page rule.'
            true_client_ip_header: '- (Optional) Whether this action is "on" or "off".'
            ttl: '- (Required) Duration a resource lives in the Cloudflare cache.'
            url: '- (Required) The URL to which the page rule should forward.'
            user: '- (Required, but allowed to be empty) Controls which end user-related features go into the Cache Key.'
            waf: '- (Optional) Whether this action is "on" or "off".'
            zone_id: '- (Required) The DNS zone ID to which the page rule should be added.'
        importStatements: []
    cloudflare_pages_domain:
        subCategory: ""
        description: Provides a resource for managing Cloudflare Pages domains.
        name: cloudflare_pages_domain
        title: cloudflare_pages_domain Resource - Cloudflare
        examples:
            - name: my-domain
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "domain": "example.com",
                  "project_name": "my-example-project"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            domain: (String) Custom domain. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            project_name: (String) Name of the Pages Project. Modifying this attribute will force creation of a new resource.
            status: (String) Status of the custom domain.
        importStatements:
            - $ terraform import cloudflare_pages_domain.example <account_id>/<project_name>/<domain-name>
    cloudflare_pages_project:
        subCategory: ""
        description: Provides a resource which manages Cloudflare Pages projects.
        name: cloudflare_pages_project
        title: cloudflare_pages_project Resource - Cloudflare
        examples:
            - name: basic_project
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "this-is-my-project-01",
                  "production_branch": "main"
                }
            - name: build_config
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "build_config": [
                    {
                      "build_command": "npm run build",
                      "destination_dir": "build",
                      "root_dir": "",
                      "web_analytics_tag": "cee1c73f6e4743d0b5e6bb1a0bcaabcc",
                      "web_analytics_token": "021e1057c18547eca7b79f2516f06o7x"
                    }
                  ],
                  "name": "this-is-my-project-01",
                  "production_branch": "main"
                }
            - name: source_config
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "this-is-my-project-01",
                  "production_branch": "main",
                  "source": [
                    {
                      "config": [
                        {
                          "deployments_enabled": true,
                          "owner": "cloudflare",
                          "pr_comments_enabled": true,
                          "preview_branch_excludes": [
                            "main",
                            "prod"
                          ],
                          "preview_branch_includes": [
                            "dev",
                            "preview"
                          ],
                          "preview_deployment_setting": "custom",
                          "production_branch": "main",
                          "production_deployment_enabled": true,
                          "repo_name": "ninjakittens"
                        }
                      ],
                      "type": "github"
                    }
                  ]
                }
            - name: deployment_configs
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "deployment_configs": [
                    {
                      "preview": [
                        {
                          "compatibility_date": "2022-08-15",
                          "compatibility_flags": [
                            "nodejs_compat"
                          ],
                          "d1_databases": {
                            "D1_BINDING": "445e2955-951a-4358-a35b-a4d0c813f63"
                          },
                          "durable_object_namespaces": {
                            "DO_BINDING": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                          },
                          "environment_variables": {
                            "ENVIRONMENT": "preview"
                          },
                          "kv_namespaces": {
                            "KV_BINDING": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                          },
                          "r2_buckets": {
                            "R2_BINDING": "some-bucket"
                          },
                          "secrets": {
                            "TURNSTILE_SECRET": "1x0000000000000000000000000000000AA"
                          }
                        }
                      ],
                      "production": [
                        {
                          "compatibility_date": "2022-08-16",
                          "compatibility_flags": [
                            "nodejs_compat",
                            "streams_enable_constructors"
                          ],
                          "d1_databases": {
                            "D1_BINDING_1": "445e2955-951a-4358-a35b-a4d0c813f63",
                            "D1_BINDING_2": "a399414b-c697-409a-a688-377db6433cd9"
                          },
                          "durable_object_namespaces": {
                            "DO_BINDING_1": "5eb63bbbe01eeed093cb22bb8f5acdc3",
                            "DO_BINDING_2": "3cdca5f8bb22bc390deee10ebbb36be5"
                          },
                          "environment_variables": {
                            "ENVIRONMENT": "production",
                            "OTHER_VALUE": "other value"
                          },
                          "kv_namespaces": {
                            "KV_BINDING_1": "5eb63bbbe01eeed093cb22bb8f5acdc3",
                            "KV_BINDING_2": "3cdca5f8bb22bc390deee10ebbb36be5"
                          },
                          "r2_buckets": {
                            "R2_BINDING_1": "some-bucket",
                            "R2_BINDING_2": "other-bucket"
                          },
                          "secrets": {
                            "TURNSTILE_INVIS_SECRET": "2x0000000000000000000000000000000AA",
                            "TURNSTILE_SECRET": "1x0000000000000000000000000000000AA"
                          }
                        }
                      ]
                    }
                  ],
                  "name": "this-is-my-project-01",
                  "production_branch": "main"
                }
            - name: deployment_configs
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "build_config": [
                    {
                      "build_command": "npm run build",
                      "destination_dir": "build",
                      "root_dir": "",
                      "web_analytics_tag": "cee1c73f6e4743d0b5e6bb1a0bcaabcc",
                      "web_analytics_token": "021e1057c18547eca7b79f2516f06o7x"
                    }
                  ],
                  "deployment_configs": [
                    {
                      "preview": [
                        {
                          "compatibility_date": "2022-08-15",
                          "compatibility_flags": [
                            "nodejs_compat"
                          ],
                          "d1_databases": {
                            "D1_BINDING": "445e2955-951a-4358-a35b-a4d0c813f63"
                          },
                          "durable_object_namespaces": {
                            "DO_BINDING": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                          },
                          "environment_variables": {
                            "ENVIRONMENT": "preview"
                          },
                          "kv_namespaces": {
                            "KV_BINDING": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                          },
                          "r2_buckets": {
                            "R2_BINDING": "some-bucket"
                          },
                          "secrets": {
                            "TURNSTILE_SECRET": "1x0000000000000000000000000000000AA"
                          }
                        }
                      ],
                      "production": [
                        {
                          "compatibility_date": "2022-08-16",
                          "compatibility_flags": [
                            "nodejs_compat",
                            "streams_enable_constructors"
                          ],
                          "d1_databases": {
                            "D1_BINDING_1": "445e2955-951a-4358-a35b-a4d0c813f63",
                            "D1_BINDING_2": "a399414b-c697-409a-a688-377db6433cd9"
                          },
                          "durable_object_namespaces": {
                            "DO_BINDING_1": "5eb63bbbe01eeed093cb22bb8f5acdc3",
                            "DO_BINDING_2": "3cdca5f8bb22bc390deee10ebbb36be5"
                          },
                          "environment_variables": {
                            "ENVIRONMENT": "production",
                            "OTHER_VALUE": "other value"
                          },
                          "kv_namespaces": {
                            "KV_BINDING_1": "5eb63bbbe01eeed093cb22bb8f5acdc3",
                            "KV_BINDING_2": "3cdca5f8bb22bc390deee10ebbb36be5"
                          },
                          "r2_buckets": {
                            "R2_BINDING_1": "some-bucket",
                            "R2_BINDING_2": "other-bucket"
                          },
                          "secrets": {
                            "TURNSTILE_INVIS_SECRET": "2x0000000000000000000000000000000AA",
                            "TURNSTILE_SECRET": "1x0000000000000000000000000000000AA"
                          }
                        }
                      ]
                    }
                  ],
                  "name": "this-is-my-project-01",
                  "production_branch": "main",
                  "source": [
                    {
                      "config": [
                        {
                          "deployments_enabled": true,
                          "owner": "cloudflare",
                          "pr_comments_enabled": true,
                          "preview_branch_excludes": [
                            "main",
                            "prod"
                          ],
                          "preview_branch_includes": [
                            "dev",
                            "preview"
                          ],
                          "preview_deployment_setting": "custom",
                          "production_branch": "main",
                          "production_deployment_enabled": true,
                          "repo_name": "ninjakittens"
                        }
                      ],
                      "type": "github"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            always_use_latest_compatibility_date: (Boolean) Use latest compatibility date for Pages Functions. Defaults to false.
            build_command: (String) Command used to build project.
            build_config: '(Block List, Max: 1) Configuration for the project build process. Read more about the build configuration in the developer documentation. (see below for nested schema)'
            compatibility_date: (String) Compatibility date used for Pages Functions.
            compatibility_flags: (List of String) Compatibility flags used for Pages Functions.
            config: '(Block List, Max: 1) Configuration for the source of the Cloudflare Pages project. (see below for nested schema)'
            created_on: (String) When the project was created.
            d1_databases: (Map of String) D1 Databases used for Pages Functions. Defaults to map[].
            deployment_configs: '(Block List, Max: 1) Configuration for deployments in a project. (see below for nested schema)'
            deployments_enabled: (Boolean) Toggle deployments on this repo. Defaults to true.
            destination_dir: (String) Output directory of the build.
            domains: (List of String) A list of associated custom domains for the project.
            durable_object_namespaces: (Map of String) Durable Object namespaces used for Pages Functions. Defaults to map[].
            environment: (String) The name of the Worker environment to bind to.
            environment_variables: (Map of String) Environment variables for Pages Functions. Defaults to map[].
            fail_open: (Boolean) Fail open used for Pages Functions. Defaults to false.
            id: (String) The ID of this resource.
            kv_namespaces: (Map of String) KV namespaces used for Pages Functions. Defaults to map[].
            mode: (String) Placement Mode for the Pages Function.
            name: (String) Name of the project.
            owner: (String) Project owner username. Modifying this attribute will force creation of a new resource.
            placement: '(Block List, Max: 1) Configuration for placement in the Cloudflare Pages project. (see below for nested schema)'
            pr_comments_enabled: (Boolean) Enable Pages to comment on Pull Requests. Defaults to true.
            preview: '(Block List, Max: 1) Configuration for preview deploys. (see below for nested schema)'
            preview_branch_excludes: (List of String) Branches will be excluded from automatic deployment.
            preview_branch_includes: (List of String) Branches will be included for automatic deployment.
            preview_deployment_setting: '(String) Preview Deployment Setting. Available values: custom, all, none. Defaults to all.'
            production: '(Block List, Max: 1) Configuration for production deploys. (see below for nested schema)'
            production_branch: (String) The name of the branch that is used for the production environment.
            production_deployment_enabled: (Boolean) Enable production deployments. Defaults to true.
            r2_buckets: (Map of String) R2 Buckets used for Pages Functions. Defaults to map[].
            repo_name: (String) Project repository name. Modifying this attribute will force creation of a new resource.
            root_dir: (String) Your project's root directory, where Cloudflare runs the build command. If your site is not in a subdirectory, leave this path value empty.
            secrets: (Map of String, Sensitive) Encrypted environment variables for Pages Functions. Defaults to map[].
            service: (String) The name of the Worker to bind to.
            service_binding: (Block Set) Services used for Pages Functions. (see below for nested schema)
            source: '(Block List, Max: 1) Configuration for the project source. Read more about the source configuration in the developer documentation. (see below for nested schema)'
            subdomain: (String) The Cloudflare subdomain associated with the project.
            type: (String) Project host type.
            usage_model: '(String) Usage model used for Pages Functions. Available values: unbound, bundled, standard. Defaults to bundled.'
            web_analytics_tag: (String) The classifying tag for analytics.
            web_analytics_token: (String) The auth token for analytics.
        importStatements:
            - $ terraform import cloudflare_pages_project.example <account_id>/<project_name>
    cloudflare_queue:
        subCategory: ""
        description: Provides the ability to manage Cloudflare Workers Queue features.
        name: cloudflare_queue
        title: cloudflare_queue Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "my-queue"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The ID of this resource.
            name: (String) The name of the queue.
        importStatements:
            - $ terraform import cloudflare_queue.example <account_id>/<queue_id>
    cloudflare_r2_bucket:
        subCategory: ""
        description: The R2 Bucket https://developers.cloudflare.com/r2/ resource allows you to manage Cloudflare R2 buckets.
        name: cloudflare_r2_bucket
        title: cloudflare_r2_bucket Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "location": "enam",
                  "name": "terraform-bucket"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The identifier of this resource.
            location: (String) The location hint of the R2 bucket.
            name: (String) The name of the R2 bucket.
        importStatements:
            - $ terraform import cloudflare_r2_bucket.default <account id>/<bucket name>
    cloudflare_rate_limit:
        subCategory: ""
        description: Provides a Cloudflare rate limit resource for a given zone. This can be used to limit the traffic you receive zone-wide, or matching more specific types of requests/responses.
        name: cloudflare_rate_limit
        title: cloudflare_rate_limit Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "action": [
                    {
                      "mode": "simulate",
                      "response": [
                        {
                          "body": "custom response body",
                          "content_type": "text/plain"
                        }
                      ],
                      "timeout": 43200
                    }
                  ],
                  "bypass_url_patterns": [
                    "example.com/bypass1",
                    "example.com/bypass2"
                  ],
                  "correlate": [
                    {
                      "by": "nat"
                    }
                  ],
                  "description": "example rate limit for a zone",
                  "disabled": false,
                  "match": [
                    {
                      "request": [
                        {
                          "methods": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH",
                            "HEAD"
                          ],
                          "schemes": [
                            "HTTP",
                            "HTTPS"
                          ],
                          "url_pattern": "${var.cloudflare_zone}/*"
                        }
                      ],
                      "response": [
                        {
                          "headers": [
                            {
                              "name": "Host",
                              "op": "eq",
                              "value": "localhost"
                            },
                            {
                              "name": "X-Example",
                              "op": "ne",
                              "value": "my-example"
                            }
                          ],
                          "origin_traffic": false,
                          "statuses": [
                            200,
                            201,
                            202,
                            301,
                            429
                          ]
                        }
                      ]
                    }
                  ],
                  "period": 2,
                  "threshold": 2000,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            action: '(Block List, Min: 1, Max: 1) The action to be performed when the threshold of matched traffic within the period defined is exceeded. (see below for nested schema)'
            body: (String) The body to return, the content here should conform to the content_type.
            by: '(String) If set to ''nat'', NAT support will be enabled for rate limiting. Available values: nat.'
            bypass_url_patterns: (Set of String)
            content_type: '(String) The content-type of the body. Available values: text/plain, text/xml, application/json.'
            correlate: '(Block List, Max: 1) Determines how rate limiting is applied. By default if not specified, rate limiting applies to the clients IP address. (see below for nested schema)'
            description: (String) A note that you can use to describe the reason for a rate limit. This value is sanitized and all tags are removed.
            disabled: (Boolean) Whether this ratelimit is currently disabled. Defaults to false.
            headers: (List of Map of String) List of HTTP headers maps to match the origin response on.
            id: (String) The ID of this resource.
            match: '(Block List, Max: 1) Determines which traffic the rate limit counts towards the threshold. By default matches all traffic in the zone. (see below for nested schema)'
            methods: '(Set of String) HTTP Methods to match traffic on. Available values: GET, POST, PUT, DELETE, PATCH, HEAD, _ALL_.'
            mode: '(String) The type of action to perform. Available values: simulate, ban, challenge, js_challenge, managed_challenge.'
            origin_traffic: (Boolean) Only count traffic that has come from your origin servers. If true, cached items that Cloudflare serve will not count towards rate limiting.
            period: (Number) The time in seconds to count matching traffic. If the count exceeds threshold within this period the action will be performed.
            request: '(Block List, Max: 1) Matches HTTP requests (from the client to Cloudflare). (see below for nested schema)'
            response: '(Block List, Max: 1) Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. (see below for nested schema)'
            schemes: '(Set of String) HTTP schemes to match traffic on. Available values: HTTP, HTTPS, _ALL_.'
            statuses: (Set of Number) HTTP Status codes, can be one, many or indicate all by not providing this value.
            threshold: (Number) The threshold that triggers the rate limit mitigations, combine with period.
            timeout: (Number) The time in seconds as an integer to perform the mitigation action. This field is required if the mode is either simulate or ban. Must be the same or greater than the period.
            url_pattern: (String) The URL pattern to match comprised of the host and path, i.e. example.org/path. Wildcard are expanded to match applicable traffic, query strings are not matched. Use _ for all traffic to your zone.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_rate_limit.example <zone_id>/<rate_limit_id>
    cloudflare_record:
        subCategory: ""
        description: Provides a Cloudflare record resource.
        name: cloudflare_record
        title: cloudflare_record Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "name": "terraform",
                  "ttl": 3600,
                  "type": "A",
                  "value": "192.0.2.1",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: _sip_tls
              manifest: |-
                {
                  "data": [
                    {
                      "name": "terraform-srv",
                      "port": 443,
                      "priority": 0,
                      "proto": "_tls",
                      "service": "_sip",
                      "target": "example.com",
                      "weight": 0
                    }
                  ],
                  "name": "_sip._tls",
                  "type": "SRV",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
        argumentDocs:
            algorithm: (Number)
            allow_overwrite: (Boolean) Allow creation of this record in Terraform to overwrite an existing record, if any. This does not affect the ability to update the record in Terraform and does not prevent other resources within Terraform or manual changes outside Terraform from overwriting this record. This configuration is not recommended for most environments. Defaults to false.
            altitude: (Number)
            certificate: (String)
            comment: (String) Comments or notes about the DNS record. This field has no effect on DNS responses.
            content: (String)
            create: (String)
            created_on: (String) The RFC3339 timestamp of when the record was created.
            data: '(Block List, Max: 1) Map of attributes that constitute the record value. Conflicts with value. (see below for nested schema)'
            digest: (String)
            digest_type: (Number)
            fingerprint: (String)
            flags: (String)
            hostname: (String) The FQDN of the record.
            id: (String) The ID of this resource.
            key_tag: (Number)
            lat_degrees: (Number)
            lat_direction: (String)
            lat_minutes: (Number)
            lat_seconds: (Number)
            long_degrees: (Number)
            long_direction: (String)
            long_minutes: (Number)
            long_seconds: (Number)
            matching_type: (Number)
            metadata: (Map of String) A key-value map of string metadata Cloudflare associates with the record.
            modified_on: (String) The RFC3339 timestamp of when the record was last modified.
            name: (String) The name of the record. Modifying this attribute will force creation of a new resource.
            order: (Number)
            port: (Number)
            precision_horz: (Number)
            precision_vert: (Number)
            preference: (Number)
            priority: (Number) The priority of the record.
            proto: (String)
            protocol: (Number)
            proxiable: (Boolean) Shows whether this record can be proxied.
            proxied: (Boolean) Whether the record gets Cloudflare's origin protection.
            public_key: (String)
            regex: (String)
            replacement: (String)
            selector: (Number)
            service: (String)
            size: (Number)
            tag: (String)
            tags: (Set of String) Custom tags for the DNS record.
            target: (String)
            timeouts: (Block, Optional) (see below for nested schema)
            ttl: (Number) The TTL of the record.
            type: '(String) The type of the record. Available values: A, AAAA, CAA, CNAME, TXT, SRV, LOC, MX, NS, SPF, CERT, DNSKEY, DS, NAPTR, SMIMEA, SSHFP, TLSA, URI, PTR, HTTPS, SVCB. Modifying this attribute will force creation of a new resource.'
            update: (String)
            usage: (Number)
            value: (String) The value of the record. Conflicts with data.
            weight: (Number)
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_record.example <zone_id>/<record_id>
    cloudflare_regional_hostname:
        subCategory: ""
        description: Provides a Data Localization Suite Regional Hostname.
        name: cloudflare_regional_hostname
        title: cloudflare_regional_hostname Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "hostname": "example.com",
                  "region_key": "eu",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              dependencies:
                cloudflare_record.example: |-
                    {
                      "name": "example.com",
                      "ttl": 3600,
                      "type": "A",
                      "value": "192.0.2.1",
                      "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
        argumentDocs:
            create: (String)
            created_on: (String) The RFC3339 timestamp of when the hostname was created.
            hostname: (String) The hostname to regionalize.
            id: (String) The ID of this resource.
            region_key: (String) The region key. See the full region list.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            zone_id: (String) The zone identifier to target for the resource.
        importStatements: []
    cloudflare_regional_tiered_cache:
        subCategory: ""
        description: Instructs Cloudflare to check a regional hub data center on the way to your upper tier. This can help improve performance for smart and custom tiered cache topologies.
        name: cloudflare_regional_tiered_cache
        title: cloudflare_regional_tiered_cache Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "value": "on",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            value: (String) Value of the Regional Tiered Cache zone setting.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - $ terraform import cloudflare_regional_tiered_cache.example <zone_id>
    cloudflare_ruleset:
        subCategory: ""
        description: The Cloudflare Ruleset Engine https://developers.cloudflare.com/firewall/cf-rulesets allows you to create and deploy rules and rulesets. The engine syntax, inspired by the Wireshark Display Filter language, is the same syntax used in custom Firewall Rules. Cloudflare uses the Ruleset Engine in different products, allowing you to configure several products using the same basic syntax.
        name: cloudflare_ruleset
        title: cloudflare_ruleset Resource - Cloudflare
        examples:
            - name: magic_transit_example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "example magic transit ruleset description",
                  "kind": "root",
                  "name": "account magic transit",
                  "phase": "magic_transit",
                  "rules": [
                    {
                      "action": "allow",
                      "description": "Allow TCP Ephemeral Ports",
                      "expression": "tcp.dstport in { 32768..65535 }"
                    }
                  ]
                }
            - name: zone_level_managed_waf
              manifest: |-
                {
                  "description": "managed WAF ruleset description",
                  "kind": "zone",
                  "name": "managed WAF",
                  "phase": "http_request_firewall_managed",
                  "rules": [
                    {
                      "action": "execute",
                      "action_parameters": [
                        {
                          "id": "efb7b8c949ac4650a09736fc376e9aee"
                        }
                      ],
                      "description": "Execute Cloudflare Managed Ruleset on my zone-level phase entry point ruleset",
                      "enabled": true,
                      "expression": "(http.host eq \"example.host.com\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: zone_level_managed_waf_with_category_based_overrides
              manifest: |-
                {
                  "description": "managed WAF with tag-based overrides ruleset description",
                  "kind": "zone",
                  "name": "managed WAF with tag-based overrides",
                  "phase": "http_request_firewall_managed",
                  "rules": [
                    {
                      "action": "execute",
                      "action_parameters": [
                        {
                          "id": "efb7b8c949ac4650a09736fc376e9aee",
                          "overrides": [
                            {
                              "categories": [
                                {
                                  "action": "block",
                                  "category": "wordpress",
                                  "enabled": true
                                },
                                {
                                  "action": "block",
                                  "category": "joomla",
                                  "enabled": true
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "description": "overrides to only enable wordpress rules to block",
                      "enabled": false,
                      "expression": "(http.host eq \"example.host.com\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: transform_uri_rule_path
              manifest: |-
                {
                  "description": "change the URI path to a new static path",
                  "kind": "zone",
                  "name": "transform rule for URI path",
                  "phase": "http_request_transform",
                  "rules": [
                    {
                      "action": "rewrite",
                      "action_parameters": [
                        {
                          "uri": [
                            {
                              "path": [
                                {
                                  "value": "/my-new-route"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "description": "example URI path transform rule",
                      "enabled": true,
                      "expression": "(http.host eq \"example.com\" and http.request.uri.path eq \"/old-path\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: transform_uri_rule_query
              manifest: |-
                {
                  "description": "change the URI query to a new static query",
                  "kind": "zone",
                  "name": "transform rule for URI query parameter",
                  "phase": "http_request_transform",
                  "rules": [
                    {
                      "action": "rewrite",
                      "action_parameters": [
                        {
                          "uri": [
                            {
                              "query": [
                                {
                                  "value": "old=new_again"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "description": "URI transformation query example",
                      "enabled": true,
                      "expression": "(http.host eq \"example.host.com\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: transform_uri_http_headers
              manifest: |-
                {
                  "description": "modify HTTP headers before reaching origin",
                  "kind": "zone",
                  "name": "transform rule for HTTP headers",
                  "phase": "http_request_late_transform",
                  "rules": [
                    {
                      "action": "rewrite",
                      "action_parameters": [
                        {
                          "headers": [
                            {
                              "name": "example-http-header-1",
                              "operation": "set",
                              "value": "my-http-header-value-1"
                            },
                            {
                              "expression": "cf.zone.name",
                              "name": "example-http-header-2",
                              "operation": "set"
                            },
                            {
                              "name": "example-http-header-3-to-remove",
                              "operation": "remove"
                            }
                          ]
                        }
                      ],
                      "description": "example request header transform rule",
                      "enabled": false,
                      "expression": "(http.host eq \"example.host.com\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: rate_limiting_example
              manifest: |-
                {
                  "description": "apply HTTP rate limiting for a route",
                  "kind": "zone",
                  "name": "restrict API requests count",
                  "phase": "http_ratelimit",
                  "rules": [
                    {
                      "action": "block",
                      "description": "rate limit for API",
                      "enabled": true,
                      "expression": "(http.request.uri.path matches \"^/api/\")",
                      "ratelimit": [
                        {
                          "characteristics": [
                            "cf.colo.id",
                            "ip.src"
                          ],
                          "mitigation_timeout": 600,
                          "period": 60,
                          "requests_per_period": 100
                        }
                      ]
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: http_origin_example
              manifest: |-
                {
                  "description": "Change origin for a route",
                  "kind": "zone",
                  "name": "Change to some origin",
                  "phase": "http_request_origin",
                  "rules": [
                    {
                      "action": "route",
                      "action_parameters": [
                        {
                          "host_header": "some.host",
                          "origin": [
                            {
                              "host": "some.host",
                              "port": 80
                            }
                          ]
                        }
                      ],
                      "description": "change origin to some.host",
                      "enabled": true,
                      "expression": "(http.request.uri.path matches \"^/api/\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: custom_fields_logging_example
              manifest: |-
                {
                  "description": "add custom fields to logging",
                  "kind": "zone",
                  "name": "log custom fields",
                  "phase": "http_log_custom_fields",
                  "rules": [
                    {
                      "action": "log_custom_field",
                      "action_parameters": [
                        {
                          "cookie_fields": [
                            "__ga",
                            "accountNumber",
                            "__cfruid"
                          ],
                          "request_fields": [
                            "content-type",
                            "x-forwarded-for",
                            "host"
                          ],
                          "response_fields": [
                            "server",
                            "content-type",
                            "allow"
                          ]
                        }
                      ],
                      "description": "log custom fields rule",
                      "enabled": true,
                      "expression": "(http.host eq \"example.host.com\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: cache_settings_example
              manifest: |-
                {
                  "description": "set cache settings for the request",
                  "kind": "zone",
                  "name": "set cache settings",
                  "phase": "http_request_cache_settings",
                  "rules": [
                    {
                      "action": "set_cache_settings",
                      "action_parameters": [
                        {
                          "browser_ttl": [
                            {
                              "mode": "respect_origin"
                            }
                          ],
                          "cache_key": [
                            {
                              "cache_deception_armor": true,
                              "custom_key": [
                                {
                                  "cookie": [
                                    {
                                      "check_presence": [
                                        "cabc_t",
                                        "cdef_t"
                                      ],
                                      "include": [
                                        "cabc",
                                        "cdef"
                                      ]
                                    }
                                  ],
                                  "header": [
                                    {
                                      "check_presence": [
                                        "habc_t",
                                        "hdef_t"
                                      ],
                                      "exclude_origin": true,
                                      "include": [
                                        "habc",
                                        "hdef"
                                      ]
                                    }
                                  ],
                                  "host": [
                                    {
                                      "resolved": true
                                    }
                                  ],
                                  "query_string": [
                                    {
                                      "exclude": [
                                        "*"
                                      ]
                                    }
                                  ],
                                  "user": [
                                    {
                                      "device_type": true,
                                      "geo": false
                                    }
                                  ]
                                }
                              ],
                              "ignore_query_strings_order": false
                            }
                          ],
                          "edge_ttl": [
                            {
                              "default": 60,
                              "mode": "override_origin",
                              "status_code_ttl": [
                                {
                                  "status_code": 200,
                                  "value": 50
                                },
                                {
                                  "status_code_range": [
                                    {
                                      "from": 201,
                                      "to": 300
                                    }
                                  ],
                                  "value": 30
                                }
                              ]
                            }
                          ],
                          "origin_error_page_passthru": false,
                          "respect_strong_etags": true,
                          "serve_stale": [
                            {
                              "disable_stale_while_updating": true
                            }
                          ]
                        }
                      ],
                      "description": "set cache settings rule",
                      "enabled": true,
                      "expression": "(http.host eq \"example.host.com\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: redirect_from_list_example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "Redirect ruleset",
                  "kind": "root",
                  "name": "redirects",
                  "phase": "http_request_redirect",
                  "rules": [
                    {
                      "action": "redirect",
                      "action_parameters": [
                        {
                          "from_list": [
                            {
                              "key": "http.request.full_uri",
                              "name": "redirect_list"
                            }
                          ]
                        }
                      ],
                      "description": "Apply redirects from redirect_list",
                      "enabled": true,
                      "expression": "http.request.full_uri in $redirect_list"
                    }
                  ]
                }
            - name: redirect_from_value_example
              manifest: |-
                {
                  "description": "Redirect ruleset",
                  "kind": "zone",
                  "name": "redirects",
                  "phase": "http_request_dynamic_redirect",
                  "rules": [
                    {
                      "action": "redirect",
                      "action_parameters": [
                        {
                          "from_value": [
                            {
                              "preserve_query_string": true,
                              "status_code": 301,
                              "target_url": [
                                {
                                  "value": "some_host.com"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "description": "Apply redirect from value",
                      "enabled": true,
                      "expression": "(http.request.uri.path matches \"^/api/\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: http_custom_error_example
              manifest: |-
                {
                  "description": "Serve some error response",
                  "kind": "zone",
                  "name": "Serve some error response",
                  "phase": "http_custom_errors",
                  "rules": [
                    {
                      "action": "serve_error",
                      "action_parameters": [
                        {
                          "content": "some error html",
                          "content_type": "text/html",
                          "status_code": "530"
                        }
                      ],
                      "description": "serve some error response",
                      "enabled": true,
                      "expression": "(http.request.uri.path matches \"^/api/\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: http_config_rules_example
              manifest: |-
                {
                  "description": "set config rules for request",
                  "kind": "zone",
                  "name": "set config rules",
                  "phase": "http_config_settings",
                  "rules": [
                    {
                      "action": "set_config",
                      "action_parameters": [
                        {
                          "bic": true,
                          "email_obfuscation": true
                        }
                      ],
                      "description": "set config rules for matching request",
                      "enabled": true,
                      "expression": "(http.request.uri.path matches \"^/api/\")"
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: response_compress_brotli_html
              manifest: |-
                {
                  "description": "Response compression ruleset",
                  "kind": "zone",
                  "name": "Brotli response compression for HTML",
                  "phase": "http_response_compression",
                  "rules": [
                    {
                      "action": "compress_response",
                      "action_parameters": [
                        {
                          "algorithms": [
                            {
                              "name": "brotli"
                            },
                            {
                              "name": "auto"
                            }
                          ]
                        }
                      ],
                      "description": "Prefer brotli compression for HTML",
                      "enabled": true,
                      "expression": "http.response.content_type.media_type == \"text/html\""
                    }
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            action: '(String) Action to perform in the ruleset rule. Available values: block, challenge, compress_response, ddos_dynamic, ddos_mitigation, execute, force_connection_close, js_challenge, log, log_custom_field, managed_challenge, redirect, rewrite, route, score, serve_error, set_cache_settings, set_config, skip.'
            action_parameters: (Block List) List of parameters that configure the behavior of the ruleset rule action. (see below for nested schema)
            additional_cacheable_ports: (Set of Number) Specifies uncommon ports to allow cacheable assets to be served from.
            algorithms: (Block List) Compression algorithms to use in order of preference. (see below for nested schema)
            automatic_https_rewrites: (Boolean) Turn on or off Cloudflare Automatic HTTPS rewrites.
            autominify: (Block List) Indicate which file extensions to minify automatically. (see below for nested schema)
            bic: (Boolean) Inspect the visitor's browser for headers commonly associated with spammers and certain bots.
            browser_ttl: (Block List) List of browser TTL parameters to apply to the request. (see below for nested schema)
            cache: (Boolean) Whether to cache if expression matches.
            cache_by_device_type: (Boolean) Cache by device type.
            cache_deception_armor: (Boolean) Cache deception armor.
            cache_key: (Block List) List of cache key parameters to apply to the request. (see below for nested schema)
            categories: (Block List) List of tag-based overrides. (see below for nested schema)
            category: (String) Tag name to apply the ruleset rule override to.
            characteristics: (Set of String) List of parameters that define how Cloudflare tracks the request rate for this rule.
            check_presence: (Set of String) List of cookies to check for presence in the custom key.
            content: (String) Content of the custom error response.
            content_type: (String) Content-Type of the custom error response.
            cookie: (Block List) Cookie parameters for the custom key. (see below for nested schema)
            cookie_fields: (Set of String) List of cookie values to include as part of custom fields logging.
            counting_expression: (String) Criteria for counting HTTP requests to trigger the Rate Limiting action. Uses the Firewall Rules expression language based on Wireshark display filters. Refer to the Firewall Rules language documentation for all available fields, operators, and functions.
            css: (Boolean) CSS minification.
            custom_key: (Block List) Custom key parameters for the request. (see below for nested schema)
            default: (Number) Default browser TTL. This value is required when override_origin is set
            description: (String) Brief summary of the ruleset and its intended use.
            device_type: (Boolean) Add device type to the custom key.
            disable_apps: (Boolean) Turn off all active Cloudflare Apps.
            disable_railgun: (Boolean) Turn off railgun feature of the Cloudflare Speed app.
            disable_stale_while_updating: (Boolean) Disable stale while updating.
            disable_zaraz: (Boolean) Turn off zaraz feature.
            edge_ttl: (Block List) List of edge TTL parameters to apply to the request. (see below for nested schema)
            email_obfuscation: (Boolean) Turn on or off the Cloudflare Email Obfuscation feature of the Cloudflare Scrape Shield app.
            enabled: (Boolean) Whether the rule is active.
            exclude: (Set of String) List of query string parameters to exclude from the custom key.
            exclude_origin: (Boolean) Exclude the origin header from the custom key.
            exposed_credential_check: (Block List) List of parameters that configure exposed credential checks. (see below for nested schema)
            expression: (String) Criteria for an HTTP request to trigger the ruleset rule action. Uses the Firewall Rules expression language based on Wireshark display filters. Refer to the Firewall Rules language documentation for all available fields, operators, and functions.
            from: (Number) From status code.
            from_list: (Block List) Use a list to lookup information for the action. (see below for nested schema)
            from_value: (Block List) Use a value to lookup information for the action. (see below for nested schema)
            geo: (Boolean) Add geo data to the custom key.
            header: (Block List) Header parameters for the custom key. (see below for nested schema)
            headers: '(Block List) List of HTTP header modifications to perform in the ruleset rule. Note: Headers are order dependent and must be provided sorted alphabetically ascending based on the name value. (see below for nested schema)'
            host: (Block List) Host parameters for the custom key. (see below for nested schema)
            host_header: (String) Host Header that request origin receives.
            hotlink_protection: (Boolean) Turn on or off the hotlink protection feature.
            html: (Boolean) HTML minification.
            id: (String) The identifier of this resource.
            ignore_query_strings_order: (Boolean) Ignore query strings order.
            include: (Set of String) List of cookies to include in the custom key.
            increment: (Number)
            js: (Boolean) JS minification.
            key: (String) Expression to use for the list lookup.
            kind: '(String) Type of Ruleset to create. Available values: custom, managed, root, zone.'
            lang: (Boolean) Add language data to the custom key.
            last_updated: (String) The most recent update to this rule.
            logging: (Block List) List parameters to configure how the rule generates logs. Only valid for skip action. (see below for nested schema)
            matched-data-cli: command-line tool
            matched_data: (Block List) List of properties to configure WAF payload logging. (see below for nested schema)
            mirage: (Boolean) Turn on or off Cloudflare Mirage of the Cloudflare Speed app.
            mitigation_timeout: (Number) Once the request rate is reached, the Rate Limiting rule blocks further requests for the period of time defined in this field.
            mode: '(String) Mode of the browser TTL. Available values: override_origin, respect_origin, bypass'
            name: (String) Name of the ruleset.
            operation: '(String) Action to perform on the HTTP request header. Available values: remove, set, add.'
            opportunistic_encryption: (Boolean) Turn on or off the Cloudflare Opportunistic Encryption feature of the Edge Certificates tab in the Cloudflare SSL/TLS app.
            origin: (Block List) List of properties to change request origin. (see below for nested schema)
            origin_cache_control: (Boolean) Enable or disable the use of a more compliant Cache Control parsing mechanism, enabled by default for most zones.
            origin_error_page_passthru: (Boolean) Pass-through error page for origin.
            overrides: (Block List) List of override configurations to apply to the ruleset. (see below for nested schema)
            password_expression: (String) Firewall Rules expression language based on Wireshark display filters for where to check for the "password" value. Refer to the Firewall Rules language.
            path: (Block List) URI path configuration when performing a URL rewrite. (see below for nested schema)
            period: (Number) The period of time to consider (in seconds) when evaluating the request rate.
            phase: '(String) Point in the request/response lifecycle where the ruleset will be created. Available values: ddos_l4, ddos_l7, http_config_settings, http_custom_errors, http_log_custom_fields, http_ratelimit, http_request_cache_settings, http_request_dynamic_redirect, http_request_firewall_custom, http_request_firewall_managed, http_request_late_transform, http_request_origin, http_request_redirect, http_request_sanitize, http_request_sbfm, http_request_transform, http_response_compression, http_response_firewall_managed, http_response_headers_transform, magic_transit.'
            phases: '(Set of String) Point in the request/response lifecycle where the ruleset will be created. Available values: ddos_l4, ddos_l7, http_config_settings, http_custom_errors, http_log_custom_fields, http_ratelimit, http_request_cache_settings, http_request_dynamic_redirect, http_request_firewall_custom, http_request_firewall_managed, http_request_late_transform, http_request_origin, http_request_redirect, http_request_sanitize, http_request_sbfm, http_request_transform, http_response_compression, http_response_firewall_managed, http_response_headers_transform, magic_transit.'
            polish: (String) Apply options from the Polish feature of the Cloudflare Speed app.
            port: (Number) Origin Port where request is sent.
            preserve_query_string: (Boolean) Preserve query string for redirect URL.
            products: '(Set of String) Products to target with the actions. Available values: bic, hot, ratelimit, securityLevel, uablock, waf, zonelockdown.'
            public_key: (String) Public key to use within WAF Ruleset payload logging to view the HTTP request parameters. You can generate a public key using the  or in the Cloudflare dashboard.
            query: (Block List) Query string configuration when performing a URL rewrite. (see below for nested schema)
            query_string: (Block List) Query string parameters for the custom key. (see below for nested schema)
            ratelimit: (Block List) List of parameters that configure HTTP rate limiting behaviour. (see below for nested schema)
            read_timeout: (Number) Specifies a maximum timeout for reading content from an origin server.
            ref: (String) Rule reference.
            request_fields: (Set of String) List of request headers to include as part of custom fields logging, in lowercase.
            requests_per_period: (Number) The number of requests over the period of time that will trigger the Rate Limiting rule.
            requests_to_origin: (Boolean) Whether to include requests to origin within the Rate Limiting count.
            resolved: (Boolean) Resolve hostname to IP address.
            respect_strong_etags: (Boolean) Respect strong ETags.
            response: (Block List) List of parameters that configure the response given to end users. (see below for nested schema)
            response_fields: (Set of String) List of response headers to include as part of custom fields logging, in lowercase.
            rocket_loader: (Boolean) Turn on or off Cloudflare Rocket Loader in the Cloudflare Speed app.
            rules: (Block List) List of rules to apply to the ruleset. (see below for nested schema)
            ruleset: (String) Which ruleset ID to target.
            rulesets: (Set of String) List of managed WAF rule IDs to target. Only valid when the "action" is set to skip.
            score_per_period: (Number) The maximum aggregate score over the period of time that will trigger Rate Limiting rule.
            score_response_header_name: (String) Name of HTTP header in the response, set by the origin server, with the score for the current request.
            score_threshold: (Number) Anomaly score threshold to apply in the ruleset rule override. Only applicable to modsecurity-based rulesets.
            security_level: (String) Control options for the Security Level feature from the Security app.
            sensitivity_level: '(String) Sensitivity level to override for all ruleset rules. Available values: default, medium, low, eoff.'
            serve_stale: (Block List) List of serve stale parameters to apply to the request. (see below for nested schema)
            server_side_excludes: (Boolean) Turn on or off the Server Side Excludes feature of the Cloudflare Scrape Shield app.
            sni: (Block List) List of properties to manange Server Name Indication. (see below for nested schema)
            ssl: (String) Control options for the SSL feature of the Edge Certificates tab in the Cloudflare SSL/TLS app.
            status_code: (Number) HTTP status code of the custom error response.
            status_code_range: (Block List) Status code range for which the edge TTL is applied. (see below for nested schema)
            status_code_ttl: (Block List) Edge TTL for the status codes. (see below for nested schema)
            sxg: (Boolean) Turn on or off the SXG feature.
            target_url: (Block List) Target URL for redirect. (see below for nested schema)
            to: (Number) To status code.
            uri: (Block List) List of URI properties to configure for the ruleset rule when performing URL rewrite transformations. (see below for nested schema)
            user: (Block List) User parameters for the custom key. (see below for nested schema)
            username_expression: (String) Firewall Rules expression language based on Wireshark display filters for where to check for the "username" value. Refer to the Firewall Rules language.
            value: (Number) Status code edge TTL value.
            version: (String) Version of the ruleset to deploy.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - |-
              # Import an account scoped Ruleset configuration.
              $ terraform import cloudflare_ruleset.example account/<account_id>/<ruleset_id>

              # Import a zone scoped Ruleset configuration.
              $ terraform import cloudflare_ruleset.example zone/<zone_id>/<ruleset_id>
    cloudflare_spectrum_application:
        subCategory: ""
        description: Provides a Cloudflare Spectrum Application. You can extend the power of Cloudflare's DDoS, TLS, and IP Firewall to your other TCP-based services.
        name: cloudflare_spectrum_application
        title: cloudflare_spectrum_application Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "dns": [
                    {
                      "name": "ssh.example.com",
                      "type": "CNAME"
                    }
                  ],
                  "edge_ips": [
                    {
                      "ips": [
                        "203.0.113.1",
                        "203.0.113.2"
                      ],
                      "type": "static"
                    }
                  ],
                  "origin_direct": [
                    "tcp://192.0.2.1:22"
                  ],
                  "protocol": "tcp/22",
                  "traffic_type": "direct",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            argo_smart_routing: (Boolean) Enables Argo Smart Routing.
            connectivity: '(String) The IP versions supported for inbound connections on Spectrum anycast IPs. Required when type is not static. Available values: all, ipv4, ipv6.'
            dns: '(Block List, Min: 1, Max: 1) The name and type of DNS record for the Spectrum application. (see below for nested schema)'
            edge_ips: '(Block List, Max: 1) The anycast edge IP configuration for the hostname of this application. (see below for nested schema)'
            end: (Number) Upper bound of the origin port range.
            id: (String) The ID of this resource.
            ip_firewall: (Boolean) Enables the IP Firewall for this application.
            ips: (Set of String) The collection of customer owned IPs to broadcast via anycast for this hostname and application. Requires Bring Your Own IP provisioned.
            name: (String) The name of the DNS record associated with the application.
            origin_direct: (List of String) A list of destination addresses to the origin. e.g. tcp://192.0.2.1:22.
            origin_dns: '(Block List, Max: 1) A destination DNS addresses to the origin. (see below for nested schema)'
            origin_port: (Number) Origin port to proxy traffice to. Conflicts with origin_port_range.
            origin_port_range: '(Block List, Max: 1) Origin port range to proxy traffice to. When using a range, the protocol field must also specify a range, e.g. tcp/22-23. Conflicts with origin_port. (see below for nested schema)'
            protocol: (String) The port configuration at Cloudflare's edge. e.g. tcp/22.
            proxy_protocol: '(String) Enables a proxy protocol to the origin. Available values: off, v1, v2, simple.'
            start: (Number) Lower bound of the origin port range.
            tls: '(String) TLS configuration option for Cloudflare to connect to your origin. Available values: off, flexible, full, strict.'
            traffic_type: '(String) Sets application type. Available values: direct, http, https.'
            type: (String) The type of DNS record associated with the application.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - $ terraform import cloudflare_spectrum_application.example <zone_id>/<spectrum_application_id>
    cloudflare_split_tunnel:
        subCategory: ""
        description: Provides a Cloudflare Split Tunnel resource. Split tunnels are used to either include or exclude lists of routes from the WARP client's tunnel.
        name: cloudflare_split_tunnel
        title: cloudflare_split_tunnel Resource - Cloudflare
        examples:
            - name: example_split_tunnel_exclude
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "mode": "exclude",
                  "tunnels": [
                    {
                      "description": "example domain",
                      "host": "*.example.com"
                    }
                  ]
                }
              dependencies:
                cloudflare_device_settings_policy.developer_warp_policy: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "match": "any(identity.groups.name[*] in {\"Developers\"})",
                      "name": "Developers",
                      "precedence": 10,
                      "switch_locked": true
                    }
            - name: example_split_tunnel_include
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "mode": "include",
                  "tunnels": [
                    {
                      "description": "example domain",
                      "host": "*.example.com"
                    }
                  ]
                }
              dependencies:
                cloudflare_device_settings_policy.developer_warp_policy: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "match": "any(identity.groups.name[*] in {\"Developers\"})",
                      "name": "Developers",
                      "precedence": 10,
                      "switch_locked": true
                    }
            - name: example_device_settings_policy_split_tunnel_exclude
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "mode": "exclude",
                  "policy_id": "${cloudflare_device_settings_policy.developer_warp_policy.id}",
                  "tunnels": [
                    {
                      "description": "example domain",
                      "host": "*.example.com"
                    }
                  ]
                }
              references:
                policy_id: cloudflare_device_settings_policy.developer_warp_policy.id
              dependencies:
                cloudflare_device_settings_policy.developer_warp_policy: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "match": "any(identity.groups.name[*] in {\"Developers\"})",
                      "name": "Developers",
                      "precedence": 10,
                      "switch_locked": true
                    }
            - name: example_split_tunnel_include
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "mode": "include",
                  "policy_id": "${cloudflare_device_policy.developer_warp_policy.id}",
                  "tunnels": [
                    {
                      "description": "example domain",
                      "host": "*.example.com"
                    }
                  ]
                }
              references:
                policy_id: cloudflare_device_policy.developer_warp_policy.id
              dependencies:
                cloudflare_device_settings_policy.developer_warp_policy: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "match": "any(identity.groups.name[*] in {\"Developers\"})",
                      "name": "Developers",
                      "precedence": 10,
                      "switch_locked": true
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            address: (String) The address for the tunnel.
            description: (String) A description for the tunnel.
            host: (String) The domain name for the tunnel.
            id: (String) The ID of this resource.
            mode: '(String) The mode of the split tunnel policy. Available values: include, exclude.'
            policy_id: (String) The settings policy for which to configure this split tunnel policy.
            tunnels: '(Block Set, Min: 1) The value of the tunnel attributes. (see below for nested schema)'
        importStatements:
            - |-
              # Split Tunnels for default device policies must use "default" as the policy ID.
              $ terraform import cloudflare_split_tunnel.example <account_id>/<policy_id>/<mode>
    cloudflare_static_route:
        subCategory: ""
        description: Provides a resource, that manages Cloudflare static routes for Magic Transit or Magic WAN. Static routes are used to route traffic through GRE tunnels.
        name: cloudflare_static_route
        title: cloudflare_static_route Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "colo_names": [
                    "den01"
                  ],
                  "colo_regions": [
                    "APAC"
                  ],
                  "description": "New route for new prefix 192.0.2.0/24",
                  "nexthop": "10.0.0.0",
                  "prefix": "192.0.2.0/24",
                  "priority": 100,
                  "weight": 10
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            colo_names: (List of String) List of Cloudflare colocation regions for this static route.
            colo_regions: (List of String) List of Cloudflare colocation names for this static route.
            description: (String) Description of the static route.
            id: (String) The ID of this resource.
            nexthop: (String) The nexthop IP address where traffic will be routed to.
            prefix: (String) Your network prefix using CIDR notation.
            priority: (Number) The priority for the static route.
            weight: (Number) The optional weight for ECMP routes. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_static_route.example <account_id>/<static_route_id>
    cloudflare_teams_account:
        subCategory: ""
        description: Provides a Cloudflare Teams Account resource. The Teams Account resource defines configuration for secure web gateway.
        name: cloudflare_teams_account
        title: cloudflare_teams_account Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "antivirus": [
                    {
                      "enabled_download_phase": true,
                      "enabled_upload_phase": false,
                      "fail_closed": true
                    }
                  ],
                  "block_page": [
                    {
                      "background_color": "#000000",
                      "footer_text": "hello",
                      "header_text": "hello",
                      "logo_path": "https://example.com/logo.jpg"
                    }
                  ],
                  "body_scanning": [
                    {
                      "inspection_mode": "deep"
                    }
                  ],
                  "fips": [
                    {
                      "tls": true
                    }
                  ],
                  "logging": [
                    {
                      "redact_pii": true,
                      "settings_by_rule_type": [
                        {
                          "dns": [
                            {
                              "log_all": false,
                              "log_blocks": true
                            }
                          ],
                          "http": [
                            {
                              "log_all": true,
                              "log_blocks": true
                            }
                          ],
                          "l4": [
                            {
                              "log_all": false,
                              "log_blocks": true
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "protocol_detection_enabled": true,
                  "proxy": [
                    {
                      "root_ca": true,
                      "tcp": true,
                      "udp": true
                    }
                  ],
                  "tls_decrypt_enabled": true,
                  "url_browser_isolation_enabled": true
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            activity_log_enabled: (Boolean) Whether to enable the activity log.
            antivirus: '(Block List, Max: 1) Configuration block for antivirus traffic scanning. (see below for nested schema)'
            block_page: '(Block List, Max: 1) Configuration for a custom block page. (see below for nested schema)'
            block_page.background_color: (String) Hex code of block page background color.
            block_page.enabled: (Boolean) Indicator of enablement.
            block_page.footer_text: (String) Block page footer text.
            block_page.header_text: (String) Block page header text.
            block_page.logo_path: (String) URL of block page logo.
            block_page.mailto_address: (String) Admin email for users to contact.
            block_page.mailto_subject: (String) Subject line for emails created from block page.
            block_page.name: (String) Name of block page configuration.
            body_scanning: '(Block List, Max: 1) Configuration for body scanning. (see below for nested schema)'
            dns: '(Block List, Min: 1, Max: 1) Logging configuration for DNS requests. (see below for nested schema)'
            enabled_download_phase: (Boolean) Scan on file download.
            enabled_upload_phase: (Boolean) Scan on file upload.
            fail_closed: (Boolean) Block requests for files that cannot be scanned.
            fips: '(Block List, Max: 1) Configure compliance with Federal Information Processing Standards. (see below for nested schema)'
            http: '(Block List, Min: 1, Max: 1) Logging configuration for HTTP requests. (see below for nested schema)'
            id: (String) The ID of this resource.
            inspection_mode: '(String) Body scanning inspection mode. Available values: deep, shallow.'
            l4: '(Block List, Min: 1, Max: 1) Logging configuration for layer 4 requests. (see below for nested schema)'
            log_all: (Boolean) Whether to log all activity.
            log_blocks: (Boolean)
            logging: '(Block List, Max: 1) (see below for nested schema)'
            non_identity_browser_isolation_enabled: (Boolean) Enable non-identity onramp for Browser Isolation. Defaults to false.
            payload_log: '(Block List, Max: 1) Configuration for DLP Payload Logging. (see below for nested schema)'
            protocol_detection_enabled: (Boolean) Indicator that protocol detection is enabled.
            proxy: '(Block List, Max: 1) Configuration block for specifying which protocols are proxied. (see below for nested schema)'
            public_key: (String) Public key used to encrypt matched payloads.
            redact_pii: '(Boolean) Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).'
            root_ca: (Boolean) Whether root ca is enabled account wide for ZT clients.
            settings_by_rule_type: '(Block List, Min: 1, Max: 1) Represents whether all requests are logged or only the blocked requests are slogged in DNS, HTTP and L4 filters. (see below for nested schema)'
            ssh_session_log: '(Block List, Max: 1) Configuration for SSH Session Logging. (see below for nested schema)'
            tcp: (Boolean) Whether gateway proxy is enabled on gateway devices for TCP traffic.
            tls: (Boolean) Only allow FIPS-compliant TLS configuration.
            tls_decrypt_enabled: (Boolean) Indicator that decryption of TLS traffic is enabled.
            udp: (Boolean) Whether gateway proxy is enabled on gateway devices for UDP traffic.
            url_browser_isolation_enabled: (Boolean) Safely browse websites in Browser Isolation through a URL. Defaults to false.
        importStatements:
            - $ terraform import cloudflare_teams_account.example <account_id>
    cloudflare_teams_list:
        subCategory: ""
        description: Provides a Cloudflare Teams List resource. Teams lists are referenced when creating secure web gateway policies or device posture rules.
        name: cloudflare_teams_list
        title: cloudflare_teams_list Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "description": "Serial numbers for all corporate devices.",
                  "items": [
                    "8GE8721REF",
                    "5RE8543EGG",
                    "1YE2880LNP"
                  ],
                  "name": "Corporate devices",
                  "type": "SERIAL"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            description: (String) The description of the teams list.
            id: (String) The ID of this resource.
            items: (Set of String) The items of the teams list.
            name: (String) Name of the teams list.
            type: '(String) The teams list type. Available values: IP, SERIAL, URL, DOMAIN, EMAIL.'
        importStatements:
            - $ terraform import cloudflare_teams_list.example <account_id>/<teams_list_id>
    cloudflare_teams_location:
        subCategory: ""
        description: Provides a Cloudflare Teams Location resource. Teams Locations are referenced when creating secure web gateway policies.
        name: cloudflare_teams_location
        title: cloudflare_teams_location Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "client_default": true,
                  "name": "office",
                  "networks": [
                    {
                      "network": "203.0.113.1/32"
                    },
                    {
                      "network": "203.0.113.2/32"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            anonymized_logs_enabled: (Boolean) Indicator that anonymized logs are enabled.
            client_default: (Boolean) Indicator that this is the default location.
            doh_subdomain: (String) The FQDN that DoH clients should be pointed at.
            id: (String) The ID of this resource.
            ip: (String) Client IP address.
            ipv4_destination: (String) IP to direct all IPv4 DNS queries to.
            name: (String) Name of the teams location.
            network: (String) CIDR notation representation of the network IP.
            networks: (Block Set) The networks CIDRs that comprise the location. (see below for nested schema)
            policy_ids: (List of String)
        importStatements:
            - $ terraform import cloudflare_teams_location.example <account_id>/<teams_location_id>
    cloudflare_teams_proxy_endpoint:
        subCategory: ""
        description: Provides a Cloudflare Teams Proxy Endpoint resource. Teams Proxy Endpoints are used for pointing proxy clients at Cloudflare Secure Gateway.
        name: cloudflare_teams_proxy_endpoint
        title: cloudflare_teams_proxy_endpoint Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "ips": [
                    "192.0.2.0/24"
                  ],
                  "name": "office"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The ID of this resource.
            ips: (Set of String) The networks CIDRs that will be allowed to initiate proxy connections.
            name: (String) Name of the teams proxy endpoint.
            subdomain: (String) The FQDN that proxy clients should be pointed at.
        importStatements:
            - $ terraform import cloudflare_teams_proxy_endpoint.example <account_id>/<proxy_endpoint_id>
    cloudflare_teams_rule:
        subCategory: ""
        description: Provides a Cloudflare Teams rule resource. Teams rules comprise secure web gateway policies.
        name: cloudflare_teams_rule
        title: cloudflare_teams_rule Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "action": "block",
                  "description": "desc",
                  "filters": [
                    "http"
                  ],
                  "name": "office",
                  "precedence": 1,
                  "rule_settings": [
                    {
                      "block_page_enabled": true,
                      "block_page_reason": "access not permitted"
                    }
                  ],
                  "traffic": "http.request.uri == \"https://www.example.com/malicious\""
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            action: '(String) The action executed by matched teams rule. Available values: allow, block, safesearch, ytrestricted, on, off, scan, noscan, isolate, noisolate, override, l4_override, egress, audit_ssh.'
            add_headers: (Map of String) Add custom headers to allowed requests in the form of key-value pairs.
            allow_child_bypass: (Boolean) Allow parent MSP accounts to enable bypass their children's rules.
            audit_ssh: '(Block List, Max: 1) Settings for auditing SSH usage. (see below for nested schema)'
            biso_admin_controls: '(Block List, Max: 1) Configure how browser isolation behaves. (see below for nested schema)'
            block_page_enabled: (Boolean) Indicator of block page enablement.
            block_page_reason: (String) The displayed reason for a user being blocked.
            bypass_parent_rule: (Boolean) Allow child MSP accounts to bypass their parent's rule.
            check_session: '(Block List, Max: 1) Configure how session check behaves. (see below for nested schema)'
            command_logging: (Boolean) Log all SSH commands.
            description: (String) The description of the teams rule.
            device_posture: (String) The wirefilter expression to be used for device_posture check matching.
            disable_copy_paste: (Boolean) Disable copy-paste.
            disable_download: (Boolean) Disable download.
            disable_keyboard: (Boolean) Disable keyboard usage.
            disable_printing: (Boolean) Disable printing.
            disable_upload: (Boolean) Disable upload.
            duration: (String) Configure how fresh the session needs to be to be considered valid.
            egress: '(Block List, Max: 1) Configure how Proxy traffic egresses. Can be set for rules with Egress action and Egress filter. Can be omitted to indicate local egress via Warp IPs. (see below for nested schema)'
            enabled: (Boolean) Indicator of rule enablement.
            enforce: (Boolean) Enable session enforcement for this rule.
            filters: (List of String) The protocol or layer to evaluate the traffic and identity expressions.
            id: (String) The ID of this resource.
            identity: (String) The wirefilter expression to be used for identity matching.
            insecure_disable_dnssec_validation: (Boolean) Disable DNSSEC validation (must be Allow rule).
            ip: (String) Override IP to forward traffic to.
            ip_categories: (Boolean) Turns on IP category based filter on dns if the rule contains dns category checks.
            ipv4: (String) The IPv4 address to be used for egress.
            ipv4_fallback: (String) The IPv4 address to be used for egress in the event of an error egressing with the primary IPv4. Can be '0.0.0.0' to indicate local egreass via Warp IPs.
            ipv6: (String) The IPv6 range to be used for egress.
            l4override: '(Block List, Max: 1) Settings to forward layer 4 traffic. (see below for nested schema)'
            message: (String) Notification content.
            name: (String) The name of the teams rule.
            notification_settings: '(Block List, Max: 1) Notification settings on a block rule. (see below for nested schema)'
            override_host: (String) The host to override matching DNS queries with.
            override_ips: (List of String) The IPs to override matching DNS queries with.
            payload_log: '(Block List, Max: 1) Configure DLP Payload Logging settings for this rule. (see below for nested schema)'
            port: (Number) Override Port to forward traffic to.
            precedence: (Number) The evaluation precedence of the teams rule.
            rule_settings: '(Block List, Max: 1) Additional rule settings. (see below for nested schema)'
            support_url: (String) Support URL to show in the notification.
            traffic: (String) The wirefilter expression to be used for traffic matching.
            untrusted_cert: '(Block List, Max: 1) Configure untrusted certificate settings for this rule. (see below for nested schema)'
            version: (Number)
        importStatements:
            - $ terraform import cloudflare_teams_rule.example <account_id>/<teams_rule_id>
    cloudflare_tiered_cache:
        subCategory: ""
        description: Provides a resource, that manages Cloudflare Tiered Cache settings. This allows you to adjust topologies for your zone.
        name: cloudflare_tiered_cache
        title: cloudflare_tiered_cache Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "cache_type": "smart",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            cache_type: '(String) The typed of tiered cache to utilize on the zone. Available values: generic, smart, off.'
            id: (String) The ID of this resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_total_tls:
        subCategory: ""
        description: Provides a resource which manages Total TLS for a zone.
        name: cloudflare_total_tls
        title: cloudflare_total_tls Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "certificate_authority": "lets_encrypt",
                  "enabled": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            certificate_authority: '(String) The Certificate Authority that Total TLS certificates will be issued through. Available values: google, lets_encrypt.'
            enabled: (Boolean) Enable Total TLS for the zone.
            id: (String) The ID of this resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_total_tls.example <zone_id>
    cloudflare_tunnel:
        subCategory: ""
        description: Tunnel exposes applications running on your local web server on any network with an internet connection without manually adding DNS records or configuring a firewall or router.
        name: cloudflare_tunnel
        title: cloudflare_tunnel Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "my-tunnel",
                  "secret": "AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg="
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            cname: (String) Usable CNAME for accessing the Tunnel.
            config_src: '(String) Indicates if this is a locally or remotely configured tunnel. If local, manage the tunnel using a YAML file on the origin machine. If cloudflare, manage the tunnel on the Zero Trust dashboard or using tunnel_config, tunnel_route or tunnel_virtual_network resources. Available values: local, cloudflare. Modifying this attribute will force creation of a new resource.'
            id: (String) The ID of this resource.
            name: (String) A user-friendly name chosen when the tunnel is created. Modifying this attribute will force creation of a new resource.
            secret: (String, Sensitive) 32 or more bytes, encoded as a base64 string. The Create Argo Tunnel endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password. Modifying this attribute will force creation of a new resource.
            tunnel_token: (String, Sensitive) Token used by a connector to authenticate and run the tunnel.
        importStatements:
            - $ terraform import cloudflare_tunnel.example <account_id>/<tunnel_id>
    cloudflare_tunnel_config:
        subCategory: ""
        description: Provides a Cloudflare Tunnel configuration resource.
        name: cloudflare_tunnel_config
        title: cloudflare_tunnel_config Resource - Cloudflare
        examples:
            - name: example_config
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "config": [
                    {
                      "ingress_rule": [
                        {
                          "hostname": "foo",
                          "origin_request": [
                            {
                              "access": [
                                {
                                  "aud_tag": [
                                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
                                  ],
                                  "required": true,
                                  "team_name": "terraform"
                                }
                              ],
                              "connect_timeout": "2m0s"
                            }
                          ],
                          "path": "/bar",
                          "service": "http://10.0.0.2:8080"
                        },
                        {
                          "service": "https://10.0.0.3:8081"
                        }
                      ],
                      "origin_request": [
                        {
                          "bastion_mode": false,
                          "ca_pool": "/path/to/unsigned/ca/pool",
                          "connect_timeout": "1m0s",
                          "disable_chunked_encoding": false,
                          "http_host_header": "baz",
                          "ip_rules": [
                            {
                              "allow": false,
                              "ports": [
                                80,
                                443
                              ],
                              "prefix": "/web"
                            }
                          ],
                          "keep_alive_connections": 1024,
                          "keep_alive_timeout": "1m0s",
                          "no_happy_eyeballs": false,
                          "no_tls_verify": false,
                          "origin_server_name": "foobar",
                          "proxy_address": "10.0.0.1",
                          "proxy_port": "8123",
                          "proxy_type": "socks",
                          "tcp_keep_alive": "1m0s",
                          "tls_timeout": "1m0s"
                        }
                      ],
                      "warp_routing": [
                        {
                          "enabled": true
                        }
                      ]
                    }
                  ],
                  "tunnel_id": "${cloudflare_tunnel.example_tunnel.id}"
                }
              references:
                tunnel_id: cloudflare_tunnel.example_tunnel.id
              dependencies:
                cloudflare_tunnel.example_tunnel: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "name": "example_tunnel",
                      "secret": "\u003c32 character secret\u003e"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access rules for the ingress service. (see below for nested schema)'
            account_id: (String) The account identifier to target for the resource.
            allow: (Boolean) Whether to allow the IP prefix.
            aud_tag: (Set of String) Audience tags of the access rule.
            bastion_mode: (Boolean) Runs as jump host.
            ca_pool: (String) Path to the certificate authority (CA) for the certificate of your origin. This option should be used only if your certificate is not signed by Cloudflare. Defaults to "".
            config: '(Block List, Min: 1, Max: 1) Configuration block for Tunnel Configuration. (see below for nested schema)'
            connect_timeout: (String) Timeout for establishing a new TCP connection to your origin server. This excludes the time taken to establish TLS, which is controlled by tlsTimeout. Defaults to 30s.
            disable_chunked_encoding: (Boolean) Disables chunked transfer encoding. Useful if you are running a Web Server Gateway Interface (WSGI) server. Defaults to false.
            enabled: (Boolean) Whether WARP routing is enabled.
            hostname: (String) Hostname to match the incoming request with. If the hostname matches, the request will be sent to the service.
            http_host_header: (String) Sets the HTTP Host header on requests sent to the local service. Defaults to "".
            http2_origin: (Boolean) Enables HTTP/2 support for the origin connection. Defaults to false.
            id: (String) The ID of this resource.
            ingress_rule: '(Block List, Min: 1) Each incoming request received by cloudflared causes cloudflared to send a request to a local service. This section configures the rules that determine which requests are sent to which local services. Read more. (see below for nested schema)'
            ip_rules: (Block Set) IP rules for the proxy service. (see below for nested schema)
            keep_alive_connections: (Number) Maximum number of idle keepalive connections between Tunnel and your origin. This does not restrict the total number of concurrent connections. Defaults to 100.
            keep_alive_timeout: (String) Timeout after which an idle keepalive connection can be discarded. Defaults to 1m30s.
            no_happy_eyeballs: (Boolean) Disable the “happy eyeballs” algorithm for IPv4/IPv6 fallback if your local network has misconfigured one of the protocols. Defaults to false.
            no_tls_verify: (Boolean) Disables TLS verification of the certificate presented by your origin. Will allow any certificate from the origin to be accepted. Defaults to false.
            origin_request: '(Block List, Max: 1) (see below for nested schema)'
            origin_server_name: (String) Hostname that cloudflared should expect from your origin server certificate. Defaults to "".
            path: (String) Path of the incoming request. If the path matches, the request will be sent to the local service.
            ports: (List of Number) Ports to use within the IP rule.
            prefix: (String) IP rule prefix.
            proxy_address: (String) cloudflared starts a proxy server to translate HTTP traffic into TCP when proxying, for example, SSH or RDP. This configures the listen address for that proxy. Defaults to 127.0.0.1.
            proxy_port: (Number) cloudflared starts a proxy server to translate HTTP traffic into TCP when proxying, for example, SSH or RDP. This configures the listen port for that proxy. If set to zero, an unused port will randomly be chosen. Defaults to 0.
            proxy_type: '(String) cloudflared starts a proxy server to translate HTTP traffic into TCP when proxying, for example, SSH or RDP. This configures what type of proxy will be started. Available values: "", socks. Defaults to "".'
            required: (Boolean) Whether the access rule is required.
            service: (String) Name of the service to which the request will be sent.
            tcp_keep_alive: (String) The timeout after which a TCP keepalive packet is sent on a connection between Tunnel and the origin server. Defaults to 30s.
            team_name: (String) Name of the team to which the access rule applies.
            tls_timeout: (String) Timeout for completing a TLS handshake to your origin server, if you have chosen to connect Tunnel to an HTTPS server. Defaults to 10s.
            tunnel_id: (String) Identifier of the Tunnel to target for this configuration.
            warp_routing: '(Block List, Max: 1) If you''re exposing a private network, you need to add the warp-routing key and set it to true. (see below for nested schema)'
        importStatements:
            - $ terraform import cloudflare_tunnel_config.example <account_id>/<tunnel_id>
    cloudflare_tunnel_route:
        subCategory: ""
        description: Provides a resource, that manages Cloudflare tunnel routes for Zero Trust. Tunnel routes are used to direct IP traffic through Cloudflare Tunnels.
        name: cloudflare_tunnel_route
        title: cloudflare_tunnel_route Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "comment": "New tunnel route for documentation",
                  "network": "192.0.2.24/32",
                  "tunnel_id": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
                  "virtual_network_id": "bdc39a3c-3104-4c23-8ac0-9f455dda691a"
                }
              dependencies:
                cloudflare_tunnel.tunnel: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "name": "my_tunnel",
                      "secret": "AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg="
                    }
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "comment": "New tunnel route for documentation",
                  "network": "192.0.2.24/32",
                  "tunnel_id": "${cloudflare_tunnel.tunnel.id}",
                  "virtual_network_id": "bdc39a3c-3104-4c23-8ac0-9f455dda691a"
                }
              references:
                tunnel_id: cloudflare_tunnel.tunnel.id
              dependencies:
                cloudflare_tunnel.tunnel: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "name": "my_tunnel",
                      "secret": "AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg="
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            comment: (String) Description of the tunnel route.
            id: (String) The ID of this resource.
            network: (String) The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.
            tunnel_id: (String) The ID of the tunnel that will service the tunnel route.
            virtual_network_id: (String) The ID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_tunnel_route.example <account_id>/<network_cidr>/<virtual_network_id>
    cloudflare_tunnel_virtual_network:
        subCategory: ""
        description: Provides a resource, that manages Cloudflare tunnel virtual networks for Zero Trust. Tunnel virtual networks are used for segregation of Tunnel IP Routes via Virtualized Networks to handle overlapping private IPs in your origins.
        name: cloudflare_tunnel_virtual_network
        title: cloudflare_tunnel_virtual_network Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "comment": "New tunnel virtual network for documentation",
                  "name": "vnet-for-documentation"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            comment: (String) Description of the tunnel virtual network.
            id: (String) The ID of this resource.
            is_default_network: (Boolean) Whether this virtual network is the default one for the account. This means IP Routes belong to this virtual network and Teams Clients in the account route through this virtual network, unless specified otherwise for each case.
            name: (String) A user-friendly name chosen when the virtual network is created.
        importStatements:
            - $ terraform import cloudflare_tunnel_virtual_network.example <account_id>/<vnet_id>
    cloudflare_turnstile_widget:
        subCategory: ""
        description: The Turnstile Widget https://developers.cloudflare.com/turnstile/ resource allows you to manage Cloudflare Turnstile Widgets.
        name: cloudflare_turnstile_widget
        title: cloudflare_turnstile_widget Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "bot_fight_mode": false,
                  "domains": [
                    "example.com"
                  ],
                  "mode": "invisible",
                  "name": "example widget",
                  "region": "world"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            bot_fight_mode: (Boolean) If bot_fight_mode is set to true, Cloudflare issues computationally expensive challenges in response to malicious bots (Enterprise only).
            domains: (Set of String) Domains where the widget is deployed
            id: (String) The identifier of this resource. This is the site key value.
            mode: '(String) Widget Mode. Available values: non-interactive, invisible, managed'
            name: (String) Human readable widget name.
            offlabel: (Boolean) Do not show any Cloudflare branding on the widget (Enterprise only).
            region: (String) Region where this widget can be used.
            secret: (String, Sensitive) Secret key for this widget.
        importStatements:
            - $ terraform import cloudflare_turnstile_widget.example <account_id>/<site_key>
    cloudflare_url_normalization_settings:
        subCategory: ""
        description: Provides a resource to manage URL Normalization Settings.
        name: cloudflare_url_normalization_settings
        title: cloudflare_url_normalization_settings Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "scope": "incoming",
                  "type": "cloudflare",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            scope: (String) The scope of the URL normalization.
            type: (String) The type of URL normalization performed by Cloudflare.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_user_agent_blocking_rule:
        subCategory: ""
        description: Provides a resource to manage User Agent Blocking Rules.
        name: cloudflare_user_agent_blocking_rule
        title: cloudflare_user_agent_blocking_rule Resource - Cloudflare
        examples:
            - name: example_1
              manifest: |-
                {
                  "configuration": [
                    {
                      "target": "ua",
                      "value": "Chrome"
                    }
                  ],
                  "description": "My description 1",
                  "mode": "js_challenge",
                  "paused": false,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
            - name: example_2
              manifest: |-
                {
                  "configuration": [
                    {
                      "target": "ua",
                      "value": "Mozilla"
                    }
                  ],
                  "description": "My description 22",
                  "mode": "challenge",
                  "paused": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            configuration: '(Block List, Min: 1, Max: 1) The configuration object for the current rule. (see below for nested schema)'
            description: (String) An informative summary of the rule.
            id: (String) The ID of this resource.
            mode: '(String) The action to apply to a matched request. Available values: block, challenge, js_challenge, managed_challenge.'
            paused: (Boolean) When true, indicates that the rule is currently paused.
            target: (String) The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
            value: (String) The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_user_agent_blocking_rule.example <zone_id>/<user_agent_blocking_rule_id>
    cloudflare_waiting_room:
        subCategory: ""
        description: Provides a Cloudflare Waiting Room resource.
        name: cloudflare_waiting_room
        title: cloudflare_waiting_room Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "additional_routes": [
                    {
                      "host": "shop1.example.com",
                      "path": "/example-path"
                    },
                    {
                      "host": "shop2.example.com"
                    }
                  ],
                  "cookie_suffix": "queue1",
                  "host": "foo.example.com",
                  "name": "foo",
                  "new_users_per_minute": 200,
                  "path": "/",
                  "queueing_status_code": 200,
                  "total_active_users": 200,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            additional_routes: (Block List) A list of additional hostname and paths combination to be applied on the waiting room. (see below for nested schema)
            cookie_suffix: (String) A cookie suffix to be appended to the Cloudflare waiting room cookie name.
            create: (String)
            custom_page_html: (String) This is a templated html file that will be rendered at the edge.
            default_template_language: '(String) The language to use for the default waiting room page. Available values: de-DE, es-ES, en-US, fr-FR, id-ID, it-IT, ja-JP, ko-KR, nl-NL, pl-PL, pt-BR, tr-TR, zh-CN, zh-TW, ru-RU, fa-IR. Defaults to en-US.'
            description: (String) A description to add more details about the waiting room.
            disable_session_renewal: (Boolean) Disables automatic renewal of session cookies.
            host: (String) Host name for which the waiting room will be applied (no wildcards).
            id: (String) The ID of this resource.
            json_response_enabled: '(Boolean) If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object.'
            name: (String) A unique name to identify the waiting room. Modifying this attribute will force creation of a new resource.
            new_users_per_minute: (Number) The number of new users that will be let into the route every minute.
            path: (String) The path within the host to enable the waiting room on. Defaults to /.
            queue_all: (Boolean) If queue_all is true, then all traffic will be sent to the waiting room.
            queueing_method: '(String) The queueing method used by the waiting room. Available values: fifo, random, passthrough, reject. Defaults to fifo.'
            queueing_status_code: (Number) HTTP status code returned to a user while in the queue. Defaults to 200.
            session_duration: (Number) Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the origin. Defaults to 5.
            suspended: (Boolean) Suspends the waiting room.
            timeouts: (Block, Optional) (see below for nested schema)
            total_active_users: (Number) The total number of active user sessions on the route at a point in time.
            update: (String)
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - |-
              # Use the Zone ID and Waiting Room ID to import.
              $ terraform import cloudflare_waiting_room.default <zone_id>/<waiting_room_id>
    cloudflare_waiting_room_event:
        subCategory: ""
        description: Provides a Cloudflare Waiting Room Event resource.
        name: cloudflare_waiting_room_event
        title: cloudflare_waiting_room_event Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "event_end_time": "2006-01-02T20:04:05Z",
                  "event_start_time": "2006-01-02T15:04:05Z",
                  "name": "foo",
                  "waiting_room_id": "d41d8cd98f00b204e9800998ecf8427e",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            created_on: (String) Creation time.
            custom_page_html: (String) This is a templated html file that will be rendered at the edge.
            description: (String) A description to let users add more details about the event.
            disable_session_renewal: (Boolean) Disables automatic renewal of session cookies.
            event_end_time: (String) ISO 8601 timestamp that marks the end of the event. Modifying this attribute will force creation of a new resource.
            event_start_time: (String) ISO 8601 timestamp that marks the start of the event. Must occur at least 1 minute before event_end_time. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            modified_on: (String) Last modified time.
            name: (String) A unique name to identify the event. Only alphanumeric characters, hyphens, and underscores are allowed. Modifying this attribute will force creation of a new resource.
            new_users_per_minute: (Number) The number of new users that will be let into the route every minute.
            prequeue_start_time: (String) ISO 8601 timestamp that marks when to begin queueing all users before the event starts. Must occur at least 5 minutes before event_start_time.
            queueing_method: '(String) The queueing method used by the waiting room. Available values: fifo, random, passthrough, reject.'
            session_duration: (Number) Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the origin.
            shuffle_at_event_start: (Boolean) Users in the prequeue will be shuffled randomly at the event_start_time. Requires that prequeue_start_time is not null. Defaults to false.
            suspended: (Boolean) If suspended, the event is ignored and traffic will be handled based on the waiting room configuration.
            total_active_users: (Number) The total number of active user sessions on the route at a point in time.
            waiting_room_id: (String) The Waiting Room ID the event should apply to. Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - |-
              # Use the Zone ID, Waiting Room ID, and Event ID to import.
              $ terraform import cloudflare_waiting_room_event.default <zone_id>/<waiting_room_id>/<waiting_room_event_id>
    cloudflare_waiting_room_rules:
        subCategory: ""
        description: Provides a Cloudflare Waiting Room Rules resource.
        name: cloudflare_waiting_room_rules
        title: cloudflare_waiting_room_rules Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "rules": [
                    {
                      "action": "bypass_waiting_room",
                      "description": "bypass ip list",
                      "expression": "src.ip in {192.0.2.0 192.0.2.1}",
                      "status": "enabled"
                    },
                    {
                      "action": "bypass_waiting_room",
                      "description": "bypass query string",
                      "expression": "http.request.uri.query contains \"bypass=true\"",
                      "status": "enabled"
                    }
                  ],
                  "waiting_room_id": "d41d8cd98f00b204e9800998ecf8427e",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            action: '(String) Action to perform in the ruleset rule. Available values: bypass_waiting_room.'
            description: (String) Brief summary of the waiting room rule and its intended use.
            expression: (String) Criteria for an HTTP request to trigger the waiting room rule action. Uses the Firewall Rules expression language based on Wireshark display filters. Refer to the Waiting Room Rules Docs.
            id: (String) The ID of this resource.
            rules: (Block List) List of rules to apply to the ruleset. (see below for nested schema)
            status: '(String) Whether the rule is enabled or disabled. Available values: enabled, disabled.'
            version: (String) Version of the waiting room rule.
            waiting_room_id: (String) The Waiting Room ID the rules should apply to. Modifying this attribute will force creation of a new resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_waiting_room_event.default <zone_id>/<waiting_room_id>
    cloudflare_waiting_room_settings:
        subCategory: ""
        description: Configure zone-wide settings for Cloudflare waiting rooms.
        name: cloudflare_waiting_room_settings
        title: cloudflare_waiting_room_settings Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "search_engine_crawler_bypass": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            id: (String) The ID of this resource.
            search_engine_crawler_bypass: (Boolean) Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone. Defaults to false.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_waiting_room_settings.example <zone_id>
    cloudflare_web_analytics_rule:
        subCategory: ""
        description: Provides a Cloudflare Web Analytics Rule resource.
        name: cloudflare_web_analytics_rule
        title: cloudflare_web_analytics_rule Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "depends_on": [
                    "${cloudflare_web_analytics_site.example}"
                  ],
                  "host": "*",
                  "inclusive": false,
                  "is_paused": false,
                  "paths": [
                    "/excluded"
                  ],
                  "ruleset_id": "${cloudflare_web_analytics_site.example.ruleset_id}"
                }
              references:
                ruleset_id: cloudflare_web_analytics_site.example.ruleset_id
              dependencies:
                cloudflare_web_analytics_site.example: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "auto_install": true,
                      "zone_tag": "0da42c8d2132a9ddaf714f9e7c920711"
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            create: (String)
            host: (String) The host to apply the rule to.
            id: (String) The ID of this resource.
            inclusive: (Boolean) Whether the rule includes or excludes the matched traffic from being measured in Web Analytics.
            is_paused: (Boolean) Whether the rule is paused or not.
            paths: (List of String) A list of paths to apply the rule to.
            ruleset_id: (String) The Web Analytics ruleset id. Modifying this attribute will force creation of a new resource.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - $ terraform import cloudflare_web_analytics_rule.example <account_id>/<ruleset_id>/<rule_id>
    cloudflare_web_analytics_site:
        subCategory: ""
        description: Provides a Cloudflare Web Analytics Site resource.
        name: cloudflare_web_analytics_site
        title: cloudflare_web_analytics_site Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "auto_install": true,
                  "zone_tag": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            auto_install: (Boolean) Whether Cloudflare will automatically inject the JavaScript snippet for orange-clouded sites. Modifying this attribute will force creation of a new resource.
            create: (String)
            host: (String) The hostname to use for gray-clouded sites. Must provide only one of zone_tag. Modifying this attribute will force creation of a new resource.
            id: (String) The ID of this resource.
            ruleset_id: (String) The ID for the ruleset associated to this Web Analytics Site.
            site_tag: (String) The Web Analytics site tag.
            site_token: (String, Sensitive) The token for the Web Analytics site.
            snippet: (String, Sensitive) The encoded JS snippet to add to your site's HTML page if auto_install is false.
            timeouts: (Block, Optional) (see below for nested schema)
            zone_tag: (String) The zone identifier for orange-clouded sites. Must provide only one of host. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_web_analytics_site.example <account_id>/<site_tag>
    cloudflare_web3_hostname Resource - Cloudflare:
        subCategory: ""
        description: Manages Web3 hostnames for IPFS and Ethereum gateways.
        name: cloudflare_web3_hostname Resource - Cloudflare
        title: cloudflare_web3_hostname Resource - Cloudflare
        argumentDocs:
            created_on: (String) Creation time.
            description: (String) An optional description of the hostname.
            dnslink: (String) DNSLink value used if the target is ipfs.
            id: (String) The ID of this resource.
            modified_on: (String) Last modification time.
            name: (String) The hostname that will point to the target gateway via CNAME.
            status: (String) Status of the hostname's activation.
            target: (String) Target gateway of the hostname.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements: []
    cloudflare_worker_cron_trigger:
        subCategory: ""
        description: Worker Cron Triggers allow users to map a cron expression to a Worker script using a ScheduledEvent listener that enables Workers to be executed on a schedule. Worker Cron Triggers are ideal for running periodic jobs for maintenance or calling third-party APIs to collect up-to-date data.
        name: cloudflare_worker_cron_trigger
        title: cloudflare_worker_cron_trigger Resource - Cloudflare
        examples:
            - name: example_trigger
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "schedules": [
                    "*/5 * * * *",
                    "10 7 * * mon-fri"
                  ],
                  "script_name": "${cloudflare_worker_script.example_script.name}"
                }
              references:
                script_name: cloudflare_worker_script.example_script.name
              dependencies:
                cloudflare_worker_script.example_script: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "content": "${file(\"path/to/my.js\")}",
                      "name": "example-script"
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The ID of this resource.
            schedules: (Set of String) Cron expressions to execute the Worker script.
            script_name: (String) Worker script to target for the schedules.
        importStatements:
            - $ terraform import cloudflare_worker_cron_trigger.example <account_id>/<script_name>
    cloudflare_worker_domain:
        subCategory: ""
        description: Creates a Worker Custom Domain.
        name: cloudflare_worker_domain
        title: cloudflare_worker_domain Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "hostname": "subdomain.example.com",
                  "service": "my-service",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            environment: (String) The name of the Worker environment. Defaults to production.
            hostname: (String) Hostname of the Worker Domain.
            id: (String) The ID of this resource.
            service: (String) Name of worker script to attach the domain to.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_worker_domain.example <account_id>/<worker_domain_id>
    cloudflare_worker_route:
        subCategory: ""
        description: Provides a Cloudflare worker route resource. A route will also require a cloudflare_worker_script.
        name: cloudflare_worker_route
        title: cloudflare_worker_route Resource - Cloudflare
        examples:
            - name: my_route
              manifest: |-
                {
                  "pattern": "example.com/*",
                  "script_name": "${cloudflare_worker_script.my_script.name}",
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
              references:
                script_name: cloudflare_worker_script.my_script.name
              dependencies:
                cloudflare_worker_script.my_script: '{}'
        argumentDocs:
            id: (String) The ID of this resource.
            pattern: (String) The route pattern to associate the Worker with.
            script_name: (String) Worker script name to invoke for requests that match the route pattern.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_worker_route.example <zone_id>/<route_id>
    cloudflare_worker_script:
        subCategory: ""
        description: Provides a Cloudflare worker script resource. In order for a script to be active, you'll also need to setup a cloudflare_worker_route.
        name: cloudflare_worker_script
        title: cloudflare_worker_script Resource - Cloudflare
        examples:
            - name: my_script
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "analytics_engine_binding": [
                    {
                      "dataset": "dataset1",
                      "name": "MY_DATASET"
                    }
                  ],
                  "content": "${file(\"script.js\")}",
                  "kv_namespace_binding": [
                    {
                      "name": "MY_EXAMPLE_KV_NAMESPACE",
                      "namespace_id": "${cloudflare_workers_kv_namespace.my_namespace.id}"
                    }
                  ],
                  "name": "script_1",
                  "plain_text_binding": [
                    {
                      "name": "MY_EXAMPLE_PLAIN_TEXT",
                      "text": "foobar"
                    }
                  ],
                  "r2_bucket_binding": [
                    {
                      "bucket_name": "MY_BUCKET_NAME",
                      "name": "MY_BUCKET"
                    }
                  ],
                  "secret_text_binding": [
                    {
                      "name": "MY_EXAMPLE_SECRET_TEXT",
                      "text": "${var.secret_foo_value}"
                    }
                  ],
                  "service_binding": [
                    {
                      "environment": "production",
                      "name": "MY_SERVICE_BINDING",
                      "service": "MY_SERVICE"
                    }
                  ],
                  "webassembly_binding": [
                    {
                      "module": "${filebase64(\"example.wasm\")}",
                      "name": "MY_EXAMPLE_WASM"
                    }
                  ]
                }
              references:
                kv_namespace_binding.namespace_id: cloudflare_workers_kv_namespace.my_namespace.id
                secret_text_binding.text: var.secret_foo_value
              dependencies:
                cloudflare_workers_kv_namespace.my_namespace: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "title": "example"
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            analytics_engine_binding: (Block Set) (see below for nested schema)
            binding: (String) The name of the global variable for the binding in your Worker code.
            bucket_name: (String) The name of the Bucket to bind to.
            compatibility_date: (String) The date to use for the compatibility flag.
            compatibility_flags: (Set of String) Compatibility flags used for Worker Scripts.
            content: (String) The script content.
            d1_database_binding: (Block Set) (see below for nested schema)
            database_id: (String) Database ID of D1 database to use.
            dataset: (String) The name of the Analytics Engine dataset to write to.
            environment: (String) The name of the Worker environment to bind to.
            id: (String) The ID of this resource.
            kv_namespace_binding: (Block Set) (see below for nested schema)
            logpush: (Boolean) Enabling allows Worker events to be sent to a defined Logpush destination.
            mode: '(String) The placement mode for the Worker. Available values: smart.'
            module: (Boolean) Whether to upload Worker as a module.
            name: (String) The name for the script. Modifying this attribute will force creation of a new resource.
            namespace_id: (String) ID of the KV namespace you want to use.
            placement: (Block Set) (see below for nested schema)
            plain_text_binding: (Block Set) (see below for nested schema)
            queue: (String) Name of the queue you want to use.
            queue_binding: (Block Set) (see below for nested schema)
            r2_bucket_binding: (Block Set) (see below for nested schema)
            secret_text_binding: (Block Set) (see below for nested schema)
            service: (String) The name of the Worker to bind to.
            service_binding: (Block Set) (see below for nested schema)
            text: (String) The plain text you want to store.
            webassembly_binding: (Block Set) (see below for nested schema)
        importStatements:
            - $ terraform import cloudflare_worker_script.example <account_id>/<script_name>
    cloudflare_worker_secret:
        subCategory: ""
        description: Provides a Cloudflare Worker secret resource.
        name: cloudflare_worker_secret
        title: cloudflare_worker_secret Resource - Cloudflare
        examples:
            - name: my_secret
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "name": "MY_EXAMPLE_SECRET_TEXT",
                  "script_name": "script_1",
                  "secret_text": "my_secret_value"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The ID of this resource.
            name: (String) The name of the Worker secret. Modifying this attribute will force creation of a new resource.
            script_name: (String) The name of the Worker script to associate the secret with. Modifying this attribute will force creation of a new resource.
            secret_text: (String, Sensitive) The text of the Worker secret. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_worker_secret.example <account_id>/<script_name>/<secret_name>
    cloudflare_workers_kv:
        subCategory: ""
        description: Provides a resource to manage a Cloudflare Workers KV Pair.
        name: cloudflare_workers_kv
        title: cloudflare_workers_kv Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "key": "test-key",
                  "namespace_id": "${cloudflare_workers_kv_namespace.example_ns.id}",
                  "value": "test value"
                }
              references:
                namespace_id: cloudflare_workers_kv_namespace.example_ns.id
              dependencies:
                cloudflare_workers_kv_namespace.example_ns: |-
                    {
                      "account_id": "f037e56e89293a057740de681ac9abbe",
                      "title": "test-namespace"
                    }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The ID of this resource.
            key: (String) Name of the KV pair. Modifying this attribute will force creation of a new resource.
            namespace_id: (String) The ID of the Workers KV namespace in which you want to create the KV pair. Modifying this attribute will force creation of a new resource.
            value: (String) Value of the KV pair.
        importStatements:
            - $ terraform import cloudflare_workers_kv.example <account_id>/<namespace_id>/<key_name>
    cloudflare_workers_kv_namespace:
        subCategory: ""
        description: Provides the ability to manage Cloudflare Workers KV Namespace features.
        name: cloudflare_workers_kv_namespace
        title: cloudflare_workers_kv_namespace Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "title": "test-namespace"
                }
        argumentDocs:
            account_id: (String) The account identifier to target for the resource.
            id: (String) The ID of this resource.
            title: (String) Title value of the Worker KV Namespace.
        importStatements:
            - $ terraform import cloudflare_workers_kv_namespace.example <account_id>/<namespace_id>
    cloudflare_zone:
        subCategory: ""
        description: Provides a Cloudflare Zone resource. Zone is the basic resource for working with Cloudflare and is roughly equivalent to a domain name that the user purchases.
        name: cloudflare_zone
        title: cloudflare_zone Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "account_id": "f037e56e89293a057740de681ac9abbe",
                  "zone": "example.com"
                }
        argumentDocs:
            account_id: (String) Account ID to manage the zone resource in.
            id: (String) The ID of this resource.
            jump_start: (Boolean) Whether to scan for DNS records on creation. Ignored after zone is created.
            meta: (Map of Boolean)
            name_servers: (List of String) Cloudflare-assigned name servers. This is only populated for zones that use Cloudflare DNS.
            paused: (Boolean) Whether this zone is paused (traffic bypasses Cloudflare). Defaults to false.
            plan: '(String) The name of the commercial plan to apply to the zone. Available values: free, lite, pro, pro_plus, business, enterprise, partners_free, partners_pro, partners_business, partners_enterprise.'
            status: '(String) Status of the zone. Available values: active, pending, initializing, moved, deleted, deactivated.'
            type: '(String) A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup. Available values: full, partial, secondary. Defaults to full.'
            vanity_name_servers: (List of String) List of Vanity Nameservers (if set).
            verification_key: (String) Contains the TXT record value to validate domain ownership. This is only populated for zones of type partial.
            zone: (String) The DNS zone name which will be added. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_zone.example <zone_id>
    cloudflare_zone_cache_reserve:
        subCategory: ""
        description: 'Provides a Cloudflare Cache Reserve resource. Cache Reserve can increase cache lifetimes by automatically storing all cacheable files in Cloudflare''s persistent object storage buckets. Note: Using Cache Reserve without Tiered Cache is not recommended.'
        name: cloudflare_zone_cache_reserve
        title: cloudflare_zone_cache_reserve Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "enabled": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            enabled: (Boolean) Whether to enable or disable Cache Reserve support for a given zone.
            id: (String) The ID of this resource.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_zone_cache_reserve.example <zone_id>
    cloudflare_zone_cache_variants:
        subCategory: ""
        description: Provides a resource which customizes Cloudflare zone cache variants.
        name: cloudflare_zone_cache_variants
        title: cloudflare_zone_cache_variants Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "avif": [
                    "image/avif",
                    "image/webp"
                  ],
                  "bmp": [
                    "image/bmp",
                    "image/webp"
                  ],
                  "gif": [
                    "image/gif",
                    "image/webp"
                  ],
                  "jp2": [
                    "image/jp2",
                    "image/webp"
                  ],
                  "jpeg": [
                    "image/jpeg",
                    "image/webp"
                  ],
                  "jpg": [
                    "image/jpg",
                    "image/webp"
                  ],
                  "jpg2": [
                    "image/jpg2",
                    "image/webp"
                  ],
                  "png": [
                    "image/png",
                    "image/webp"
                  ],
                  "tif": [
                    "image/tif",
                    "image/webp"
                  ],
                  "tiff": [
                    "image/tiff",
                    "image/webp"
                  ],
                  "webp": [
                    "image/jpeg",
                    "image/webp"
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            avif: (Set of String) List of strings with the MIME types of all the variants that should be served for avif.
            bmp: (Set of String) List of strings with the MIME types of all the variants that should be served for bmp.
            gif: (Set of String) List of strings with the MIME types of all the variants that should be served for gif.
            id: (String) The ID of this resource.
            jp2: (Set of String) List of strings with the MIME types of all the variants that should be served for jp2.
            jpeg: (Set of String) List of strings with the MIME types of all the variants that should be served for jpeg.
            jpg: (Set of String) List of strings with the MIME types of all the variants that should be served for jpg.
            jpg2: (Set of String) List of strings with the MIME types of all the variants that should be served for jpg2.
            png: (Set of String) List of strings with the MIME types of all the variants that should be served for png.
            tif: (Set of String) List of strings with the MIME types of all the variants that should be served for tif.
            tiff: (Set of String) List of strings with the MIME types of all the variants that should be served for tiff.
            webp: (Set of String) List of strings with the MIME types of all the variants that should be served for webp.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements: []
    cloudflare_zone_dnssec:
        subCategory: ""
        description: Provides a Cloudflare resource to create and modify zone DNSSEC settings.
        name: cloudflare_zone_dnssec
        title: cloudflare_zone_dnssec Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "zone_id": "${cloudflare_zone.example.id}"
                }
              references:
                zone_id: cloudflare_zone.example.id
              dependencies:
                cloudflare_zone.example: |-
                    {
                      "zone": "example.com"
                    }
        argumentDocs:
            algorithm: (String) Zone DNSSEC algorithm.
            digest: (String) Zone DNSSEC digest.
            digest_algorithm: (String) Digest algorithm use for Zone DNSSEC.
            digest_type: (String) Digest Type for Zone DNSSEC.
            ds: (String) DS for the Zone DNSSEC.
            flags: (Number) Zone DNSSEC flags.
            id: (String) The ID of this resource.
            key_tag: (Number) Key Tag for the Zone DNSSEC.
            key_type: (String) Key type used for Zone DNSSEC.
            modified_on: (String) Zone DNSSEC updated time.
            public_key: (String) Public Key for the Zone DNSSEC.
            status: (String) The status of the Zone DNSSEC.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_zone_dnssec.example <zone_id>
    cloudflare_zone_hold:
        subCategory: ""
        description: Provides a Cloudflare Zone Hold resource that prevents adding the hostname to another account for use.
        name: cloudflare_zone_hold
        title: cloudflare_zone_hold Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "hold": true,
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            hold: (Boolean) Enablement status of the zone hold.
            hold_after: (String) The RFC3339 compatible timestamp when to automatically re-enable the zone hold.
            id: (String) The ID of this resource.
            include_subdomains: (Boolean) Whether to extend to block any subdomain of the given zone.
            zone_id: (String) The zone identifier to target for the resource.
        importStatements:
            - $ terraform import cloudflare_zone_hold.example <zone_id>
    cloudflare_zone_lockdown:
        subCategory: ""
        description: Provides a Cloudflare Zone Lockdown resource. Zone Lockdown allows you to define one or more URLs (with wildcard matching on the domain or path) that will only permit access if the request originates from an IP address that matches a safelist of one or more IP addresses and/or IP ranges.
        name: cloudflare_zone_lockdown
        title: cloudflare_zone_lockdown Resource - Cloudflare
        examples:
            - name: example
              manifest: |-
                {
                  "configurations": [
                    {
                      "target": "ip_range",
                      "value": "192.0.2.0/24"
                    }
                  ],
                  "description": "Restrict access to these endpoints to requests from a known IP address range",
                  "paused": "false",
                  "urls": [
                    "api.mysite.com/some/endpoint*"
                  ],
                  "zone_id": "0da42c8d2132a9ddaf714f9e7c920711"
                }
        argumentDocs:
            configurations: '(Block Set, Min: 1) A list of IP addresses or IP ranges to match the request against specified in target, value pairs. (see below for nested schema)'
            description: (String) A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
            id: (String) The ID of this resource.
            paused: (Boolean) Boolean of whether this zone lockdown is currently paused. Defaults to false.
            priority: (Number)
            target: '(String) The request property to target. Available values: ip, ip_range.'
            urls: (Set of String) A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
            value: (String) The value to target. Depends on target's type. IP addresses should just be standard IPv4/IPv6 notation i.e. 192.0.2.1 or 2001:db8::/32 and IP ranges in CIDR format i.e. 192.0.2.0/24.
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        importStatements:
            - $ terraform import cloudflare_zone_lockdown.example <zone_id>/<lockdown_id>
    cloudflare_zone_settings_override:
        subCategory: ""
        description: Provides a resource which customizes Cloudflare zone settings.
        name: cloudflare_zone_settings_override
        title: cloudflare_zone_settings_override Resource - Cloudflare
        examples:
            - name: test
              manifest: |-
                {
                  "settings": [
                    {
                      "automatic_https_rewrites": "on",
                      "brotli": "on",
                      "challenge_ttl": 2700,
                      "minify": [
                        {
                          "css": "on",
                          "html": "off",
                          "js": "off"
                        }
                      ],
                      "mirage": "on",
                      "opportunistic_encryption": "on",
                      "security_header": [
                        {
                          "enabled": true
                        }
                      ],
                      "security_level": "high",
                      "waf": "on"
                    }
                  ],
                  "zone_id": "${d41d8cd98f00b204e9800998ecf8427e}"
                }
              references:
                zone_id: d41d8cd98f00b204e9800998ecf8427e
        argumentDocs:
            always_online: (String)
            always_use_https: (String)
            automatic_https_rewrites: (String)
            binary_ast: (String)
            brotli: (String)
            browser_cache_ttl: (Number)
            browser_check: (String)
            cache_level: (String)
            challenge_ttl: (Number)
            ciphers: (List of String)
            cname_flattening: (String)
            css: (String)
            development_mode: (String)
            early_hints: (String)
            email_obfuscation: (String)
            enabled: (Boolean)
            filter_logs_to_cloudflare: (String)
            fonts: (String)
            h2_prioritization: (String)
            hotlink_protection: (String)
            html: (String)
            http2: (String)
            http3: (String)
            id: (String) The ID of this resource.
            image_resizing: (String)
            include_subdomains: (Boolean)
            initial_settings: (List of Object) (see below for nested schema)
            initial_settings_read_at: (String)
            ip_geolocation: (String)
            ipv6: (String)
            js: (String)
            log_to_cloudflare: (String)
            max_age: (Number)
            max_upload: (Number)
            min_tls_version: (String)
            minify: '(Block List, Max: 1) (see below for nested schema)'
            mirage: (String)
            mobile_redirect: '(Block List, Max: 1) (see below for nested schema)'
            mobile_subdomain: (String)
            nosniff: (Boolean)
            opportunistic_encryption: (String)
            opportunistic_onion: (String)
            orange_to_orange: (String)
            origin_error_page_pass_thru: (String)
            origin_max_http_version: (String)
            polish: (String)
            prefetch_preload: (String)
            preload: (Boolean)
            privacy_pass: (String)
            proxy_read_timeout: (String)
            pseudo_ipv4: (String)
            readonly_settings: (List of String)
            response_buffering: (String)
            rocket_loader: (String)
            security_header: '(Block List, Max: 1) (see below for nested schema)'
            security_level: (String)
            server_side_exclude: (String)
            settings: '(Block List, Max: 1) (see below for nested schema)'
            sort_query_string_for_cache: (String)
            ssl: (String)
            status: (String)
            strip_uri: (Boolean)
            tls_1_2_only: (String, Deprecated)
            tls_1_3: (String)
            tls_client_auth: (String)
            true_client_ip_header: (String)
            universal_ssl: (String)
            visitor_ip: (String)
            waf: (String)
            webp: (String)
            websockets: (String)
            zero_rtt: (String)
            zone_id: (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
            zone_status: (String)
            zone_type: (String)
        importStatements: []
